// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Usuario {
  id                String              @id @default(cuid())
  nome              String
  email             String              @unique
  cpf               String              @unique
  senha             String
  tipo              Int                 // 0: usuário comum, 1: administrador
  formularios       FormularioUsuario[]
  inscricoes        Inscricao[]         // Relacionamento com o modelo Inscricao
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

model Inscricao {
  id          String   @id @default(cuid())
  usuarioId   String
  usuario     Usuario  @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  editalId    String
  edital      Edital   @relation(fields: [editalId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Edital {
  id                String              @id @default(cuid())
  titulo            String
  dataCriacao       DateTime            @default(now())
  dataPublicacao    DateTime
  dataEncerramento  DateTime?
  secoes            SecaoEdital[]
  formulario        Formulario?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  inscricoes        Inscricao[]         // Relacionamento com o modelo Inscricao
}

model SecaoEdital {
  id                String              @id @default(cuid())
  titulo            String
  edital            Edital              @relation(fields: [editalId], references: [id], onDelete: Cascade)
  editalId          String
  topicos           TopicoEdital[]
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

model TopicoEdital {
  id                String              @id @default(cuid())
  texto             String              
  secao             SecaoEdital         @relation(fields: [secaoEditalId], references: [id], onDelete: Cascade)
  secaoEditalId     String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

model Formulario {
  id                String                  @id @default(cuid())
  titulo            String
  dataInicio        DateTime
  dataFim           DateTime
  edital            Edital                  @relation(fields: [editalId], references: [id], onDelete: Cascade)
  editalId          String                  @unique
  campos            CampoFormulario[]
  inscricoes        FormularioUsuario[]
  createdAt         DateTime                @default(now())
  updatedAt         DateTime                @updatedAt
}

model CampoFormulario {
  id                String              @id @default(cuid())
  rotulo            String
  tipo              Int                 // 0: texto, 1: textarea, 2: radio, 3: select, 4: checkbox
  obrigatorio       Int                 // 0: não, 1: sim
  formulario        Formulario          @relation(fields: [formularioId], references: [id], onDelete: Cascade)
  formularioId      String
  respostas         FormularioUsuarioCampo[]
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

model FormularioUsuario {
  id                String                  @id @default(cuid())
  dataHora          DateTime                @default(now())
  usuario           Usuario                 @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  usuarioId         String
  formulario        Formulario              @relation(fields: [formularioId], references: [id], onDelete: Cascade)
  formularioId      String
  campos            FormularioUsuarioCampo[]
  createdAt         DateTime                @default(now())
  updatedAt         DateTime                @updatedAt
}

model FormularioUsuarioCampo {
  id                String              @id @default(cuid())
  valor             String              
  campo             CampoFormulario     @relation(fields: [campoFormularioId], references: [id], onDelete: Cascade)
  campoFormularioId String
  inscricao         FormularioUsuario   @relation(fields: [formularioUsuarioId], references: [id], onDelete: Cascade)
  formularioUsuarioId String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}