
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Inscricao
 * 
 */
export type Inscricao = $Result.DefaultSelection<Prisma.$InscricaoPayload>
/**
 * Model Edital
 * 
 */
export type Edital = $Result.DefaultSelection<Prisma.$EditalPayload>
/**
 * Model ArquivoEdital
 * 
 */
export type ArquivoEdital = $Result.DefaultSelection<Prisma.$ArquivoEditalPayload>
/**
 * Model Formulario
 * 
 */
export type Formulario = $Result.DefaultSelection<Prisma.$FormularioPayload>
/**
 * Model CampoFormulario
 * 
 */
export type CampoFormulario = $Result.DefaultSelection<Prisma.$CampoFormularioPayload>
/**
 * Model FormularioUsuario
 * 
 */
export type FormularioUsuario = $Result.DefaultSelection<Prisma.$FormularioUsuarioPayload>
/**
 * Model FormularioUsuarioCampo
 * 
 */
export type FormularioUsuarioCampo = $Result.DefaultSelection<Prisma.$FormularioUsuarioCampoPayload>
/**
 * Model ArquivoUsuario
 * 
 */
export type ArquivoUsuario = $Result.DefaultSelection<Prisma.$ArquivoUsuarioPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.inscricao`: Exposes CRUD operations for the **Inscricao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Inscricaos
    * const inscricaos = await prisma.inscricao.findMany()
    * ```
    */
  get inscricao(): Prisma.InscricaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.edital`: Exposes CRUD operations for the **Edital** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Editals
    * const editals = await prisma.edital.findMany()
    * ```
    */
  get edital(): Prisma.EditalDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.arquivoEdital`: Exposes CRUD operations for the **ArquivoEdital** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ArquivoEditals
    * const arquivoEditals = await prisma.arquivoEdital.findMany()
    * ```
    */
  get arquivoEdital(): Prisma.ArquivoEditalDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.formulario`: Exposes CRUD operations for the **Formulario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Formularios
    * const formularios = await prisma.formulario.findMany()
    * ```
    */
  get formulario(): Prisma.FormularioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.campoFormulario`: Exposes CRUD operations for the **CampoFormulario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CampoFormularios
    * const campoFormularios = await prisma.campoFormulario.findMany()
    * ```
    */
  get campoFormulario(): Prisma.CampoFormularioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.formularioUsuario`: Exposes CRUD operations for the **FormularioUsuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FormularioUsuarios
    * const formularioUsuarios = await prisma.formularioUsuario.findMany()
    * ```
    */
  get formularioUsuario(): Prisma.FormularioUsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.formularioUsuarioCampo`: Exposes CRUD operations for the **FormularioUsuarioCampo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FormularioUsuarioCampos
    * const formularioUsuarioCampos = await prisma.formularioUsuarioCampo.findMany()
    * ```
    */
  get formularioUsuarioCampo(): Prisma.FormularioUsuarioCampoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.arquivoUsuario`: Exposes CRUD operations for the **ArquivoUsuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ArquivoUsuarios
    * const arquivoUsuarios = await prisma.arquivoUsuario.findMany()
    * ```
    */
  get arquivoUsuario(): Prisma.ArquivoUsuarioDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuario: 'Usuario',
    Inscricao: 'Inscricao',
    Edital: 'Edital',
    ArquivoEdital: 'ArquivoEdital',
    Formulario: 'Formulario',
    CampoFormulario: 'CampoFormulario',
    FormularioUsuario: 'FormularioUsuario',
    FormularioUsuarioCampo: 'FormularioUsuarioCampo',
    ArquivoUsuario: 'ArquivoUsuario'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "usuario" | "inscricao" | "edital" | "arquivoEdital" | "formulario" | "campoFormulario" | "formularioUsuario" | "formularioUsuarioCampo" | "arquivoUsuario"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Inscricao: {
        payload: Prisma.$InscricaoPayload<ExtArgs>
        fields: Prisma.InscricaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InscricaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InscricaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InscricaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InscricaoPayload>
          }
          findFirst: {
            args: Prisma.InscricaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InscricaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InscricaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InscricaoPayload>
          }
          findMany: {
            args: Prisma.InscricaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InscricaoPayload>[]
          }
          create: {
            args: Prisma.InscricaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InscricaoPayload>
          }
          createMany: {
            args: Prisma.InscricaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InscricaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InscricaoPayload>[]
          }
          delete: {
            args: Prisma.InscricaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InscricaoPayload>
          }
          update: {
            args: Prisma.InscricaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InscricaoPayload>
          }
          deleteMany: {
            args: Prisma.InscricaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InscricaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InscricaoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InscricaoPayload>[]
          }
          upsert: {
            args: Prisma.InscricaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InscricaoPayload>
          }
          aggregate: {
            args: Prisma.InscricaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInscricao>
          }
          groupBy: {
            args: Prisma.InscricaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<InscricaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.InscricaoCountArgs<ExtArgs>
            result: $Utils.Optional<InscricaoCountAggregateOutputType> | number
          }
        }
      }
      Edital: {
        payload: Prisma.$EditalPayload<ExtArgs>
        fields: Prisma.EditalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EditalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EditalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditalPayload>
          }
          findFirst: {
            args: Prisma.EditalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EditalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditalPayload>
          }
          findMany: {
            args: Prisma.EditalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditalPayload>[]
          }
          create: {
            args: Prisma.EditalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditalPayload>
          }
          createMany: {
            args: Prisma.EditalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EditalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditalPayload>[]
          }
          delete: {
            args: Prisma.EditalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditalPayload>
          }
          update: {
            args: Prisma.EditalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditalPayload>
          }
          deleteMany: {
            args: Prisma.EditalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EditalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EditalUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditalPayload>[]
          }
          upsert: {
            args: Prisma.EditalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditalPayload>
          }
          aggregate: {
            args: Prisma.EditalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEdital>
          }
          groupBy: {
            args: Prisma.EditalGroupByArgs<ExtArgs>
            result: $Utils.Optional<EditalGroupByOutputType>[]
          }
          count: {
            args: Prisma.EditalCountArgs<ExtArgs>
            result: $Utils.Optional<EditalCountAggregateOutputType> | number
          }
        }
      }
      ArquivoEdital: {
        payload: Prisma.$ArquivoEditalPayload<ExtArgs>
        fields: Prisma.ArquivoEditalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ArquivoEditalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoEditalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ArquivoEditalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoEditalPayload>
          }
          findFirst: {
            args: Prisma.ArquivoEditalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoEditalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ArquivoEditalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoEditalPayload>
          }
          findMany: {
            args: Prisma.ArquivoEditalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoEditalPayload>[]
          }
          create: {
            args: Prisma.ArquivoEditalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoEditalPayload>
          }
          createMany: {
            args: Prisma.ArquivoEditalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ArquivoEditalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoEditalPayload>[]
          }
          delete: {
            args: Prisma.ArquivoEditalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoEditalPayload>
          }
          update: {
            args: Prisma.ArquivoEditalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoEditalPayload>
          }
          deleteMany: {
            args: Prisma.ArquivoEditalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ArquivoEditalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ArquivoEditalUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoEditalPayload>[]
          }
          upsert: {
            args: Prisma.ArquivoEditalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoEditalPayload>
          }
          aggregate: {
            args: Prisma.ArquivoEditalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateArquivoEdital>
          }
          groupBy: {
            args: Prisma.ArquivoEditalGroupByArgs<ExtArgs>
            result: $Utils.Optional<ArquivoEditalGroupByOutputType>[]
          }
          count: {
            args: Prisma.ArquivoEditalCountArgs<ExtArgs>
            result: $Utils.Optional<ArquivoEditalCountAggregateOutputType> | number
          }
        }
      }
      Formulario: {
        payload: Prisma.$FormularioPayload<ExtArgs>
        fields: Prisma.FormularioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FormularioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FormularioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioPayload>
          }
          findFirst: {
            args: Prisma.FormularioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FormularioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioPayload>
          }
          findMany: {
            args: Prisma.FormularioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioPayload>[]
          }
          create: {
            args: Prisma.FormularioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioPayload>
          }
          createMany: {
            args: Prisma.FormularioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FormularioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioPayload>[]
          }
          delete: {
            args: Prisma.FormularioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioPayload>
          }
          update: {
            args: Prisma.FormularioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioPayload>
          }
          deleteMany: {
            args: Prisma.FormularioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FormularioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FormularioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioPayload>[]
          }
          upsert: {
            args: Prisma.FormularioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioPayload>
          }
          aggregate: {
            args: Prisma.FormularioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFormulario>
          }
          groupBy: {
            args: Prisma.FormularioGroupByArgs<ExtArgs>
            result: $Utils.Optional<FormularioGroupByOutputType>[]
          }
          count: {
            args: Prisma.FormularioCountArgs<ExtArgs>
            result: $Utils.Optional<FormularioCountAggregateOutputType> | number
          }
        }
      }
      CampoFormulario: {
        payload: Prisma.$CampoFormularioPayload<ExtArgs>
        fields: Prisma.CampoFormularioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CampoFormularioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampoFormularioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CampoFormularioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampoFormularioPayload>
          }
          findFirst: {
            args: Prisma.CampoFormularioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampoFormularioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CampoFormularioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampoFormularioPayload>
          }
          findMany: {
            args: Prisma.CampoFormularioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampoFormularioPayload>[]
          }
          create: {
            args: Prisma.CampoFormularioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampoFormularioPayload>
          }
          createMany: {
            args: Prisma.CampoFormularioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CampoFormularioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampoFormularioPayload>[]
          }
          delete: {
            args: Prisma.CampoFormularioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampoFormularioPayload>
          }
          update: {
            args: Prisma.CampoFormularioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampoFormularioPayload>
          }
          deleteMany: {
            args: Prisma.CampoFormularioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CampoFormularioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CampoFormularioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampoFormularioPayload>[]
          }
          upsert: {
            args: Prisma.CampoFormularioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampoFormularioPayload>
          }
          aggregate: {
            args: Prisma.CampoFormularioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCampoFormulario>
          }
          groupBy: {
            args: Prisma.CampoFormularioGroupByArgs<ExtArgs>
            result: $Utils.Optional<CampoFormularioGroupByOutputType>[]
          }
          count: {
            args: Prisma.CampoFormularioCountArgs<ExtArgs>
            result: $Utils.Optional<CampoFormularioCountAggregateOutputType> | number
          }
        }
      }
      FormularioUsuario: {
        payload: Prisma.$FormularioUsuarioPayload<ExtArgs>
        fields: Prisma.FormularioUsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FormularioUsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FormularioUsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioPayload>
          }
          findFirst: {
            args: Prisma.FormularioUsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FormularioUsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioPayload>
          }
          findMany: {
            args: Prisma.FormularioUsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioPayload>[]
          }
          create: {
            args: Prisma.FormularioUsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioPayload>
          }
          createMany: {
            args: Prisma.FormularioUsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FormularioUsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioPayload>[]
          }
          delete: {
            args: Prisma.FormularioUsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioPayload>
          }
          update: {
            args: Prisma.FormularioUsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioPayload>
          }
          deleteMany: {
            args: Prisma.FormularioUsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FormularioUsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FormularioUsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioPayload>[]
          }
          upsert: {
            args: Prisma.FormularioUsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioPayload>
          }
          aggregate: {
            args: Prisma.FormularioUsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFormularioUsuario>
          }
          groupBy: {
            args: Prisma.FormularioUsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<FormularioUsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.FormularioUsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<FormularioUsuarioCountAggregateOutputType> | number
          }
        }
      }
      FormularioUsuarioCampo: {
        payload: Prisma.$FormularioUsuarioCampoPayload<ExtArgs>
        fields: Prisma.FormularioUsuarioCampoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FormularioUsuarioCampoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioCampoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FormularioUsuarioCampoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioCampoPayload>
          }
          findFirst: {
            args: Prisma.FormularioUsuarioCampoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioCampoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FormularioUsuarioCampoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioCampoPayload>
          }
          findMany: {
            args: Prisma.FormularioUsuarioCampoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioCampoPayload>[]
          }
          create: {
            args: Prisma.FormularioUsuarioCampoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioCampoPayload>
          }
          createMany: {
            args: Prisma.FormularioUsuarioCampoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FormularioUsuarioCampoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioCampoPayload>[]
          }
          delete: {
            args: Prisma.FormularioUsuarioCampoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioCampoPayload>
          }
          update: {
            args: Prisma.FormularioUsuarioCampoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioCampoPayload>
          }
          deleteMany: {
            args: Prisma.FormularioUsuarioCampoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FormularioUsuarioCampoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FormularioUsuarioCampoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioCampoPayload>[]
          }
          upsert: {
            args: Prisma.FormularioUsuarioCampoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormularioUsuarioCampoPayload>
          }
          aggregate: {
            args: Prisma.FormularioUsuarioCampoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFormularioUsuarioCampo>
          }
          groupBy: {
            args: Prisma.FormularioUsuarioCampoGroupByArgs<ExtArgs>
            result: $Utils.Optional<FormularioUsuarioCampoGroupByOutputType>[]
          }
          count: {
            args: Prisma.FormularioUsuarioCampoCountArgs<ExtArgs>
            result: $Utils.Optional<FormularioUsuarioCampoCountAggregateOutputType> | number
          }
        }
      }
      ArquivoUsuario: {
        payload: Prisma.$ArquivoUsuarioPayload<ExtArgs>
        fields: Prisma.ArquivoUsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ArquivoUsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoUsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ArquivoUsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoUsuarioPayload>
          }
          findFirst: {
            args: Prisma.ArquivoUsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoUsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ArquivoUsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoUsuarioPayload>
          }
          findMany: {
            args: Prisma.ArquivoUsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoUsuarioPayload>[]
          }
          create: {
            args: Prisma.ArquivoUsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoUsuarioPayload>
          }
          createMany: {
            args: Prisma.ArquivoUsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ArquivoUsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoUsuarioPayload>[]
          }
          delete: {
            args: Prisma.ArquivoUsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoUsuarioPayload>
          }
          update: {
            args: Prisma.ArquivoUsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoUsuarioPayload>
          }
          deleteMany: {
            args: Prisma.ArquivoUsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ArquivoUsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ArquivoUsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoUsuarioPayload>[]
          }
          upsert: {
            args: Prisma.ArquivoUsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArquivoUsuarioPayload>
          }
          aggregate: {
            args: Prisma.ArquivoUsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateArquivoUsuario>
          }
          groupBy: {
            args: Prisma.ArquivoUsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<ArquivoUsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.ArquivoUsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<ArquivoUsuarioCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    usuario?: UsuarioOmit
    inscricao?: InscricaoOmit
    edital?: EditalOmit
    arquivoEdital?: ArquivoEditalOmit
    formulario?: FormularioOmit
    campoFormulario?: CampoFormularioOmit
    formularioUsuario?: FormularioUsuarioOmit
    formularioUsuarioCampo?: FormularioUsuarioCampoOmit
    arquivoUsuario?: ArquivoUsuarioOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    formularios: number
    inscricoes: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    formularios?: boolean | UsuarioCountOutputTypeCountFormulariosArgs
    inscricoes?: boolean | UsuarioCountOutputTypeCountInscricoesArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountFormulariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FormularioUsuarioWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountInscricoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InscricaoWhereInput
  }


  /**
   * Count Type EditalCountOutputType
   */

  export type EditalCountOutputType = {
    inscricoes: number
    arquivos: number
  }

  export type EditalCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inscricoes?: boolean | EditalCountOutputTypeCountInscricoesArgs
    arquivos?: boolean | EditalCountOutputTypeCountArquivosArgs
  }

  // Custom InputTypes
  /**
   * EditalCountOutputType without action
   */
  export type EditalCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EditalCountOutputType
     */
    select?: EditalCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EditalCountOutputType without action
   */
  export type EditalCountOutputTypeCountInscricoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InscricaoWhereInput
  }

  /**
   * EditalCountOutputType without action
   */
  export type EditalCountOutputTypeCountArquivosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArquivoEditalWhereInput
  }


  /**
   * Count Type FormularioCountOutputType
   */

  export type FormularioCountOutputType = {
    campos: number
    inscricoes: number
  }

  export type FormularioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campos?: boolean | FormularioCountOutputTypeCountCamposArgs
    inscricoes?: boolean | FormularioCountOutputTypeCountInscricoesArgs
  }

  // Custom InputTypes
  /**
   * FormularioCountOutputType without action
   */
  export type FormularioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioCountOutputType
     */
    select?: FormularioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FormularioCountOutputType without action
   */
  export type FormularioCountOutputTypeCountCamposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CampoFormularioWhereInput
  }

  /**
   * FormularioCountOutputType without action
   */
  export type FormularioCountOutputTypeCountInscricoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FormularioUsuarioWhereInput
  }


  /**
   * Count Type CampoFormularioCountOutputType
   */

  export type CampoFormularioCountOutputType = {
    respostas: number
  }

  export type CampoFormularioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    respostas?: boolean | CampoFormularioCountOutputTypeCountRespostasArgs
  }

  // Custom InputTypes
  /**
   * CampoFormularioCountOutputType without action
   */
  export type CampoFormularioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampoFormularioCountOutputType
     */
    select?: CampoFormularioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CampoFormularioCountOutputType without action
   */
  export type CampoFormularioCountOutputTypeCountRespostasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FormularioUsuarioCampoWhereInput
  }


  /**
   * Count Type FormularioUsuarioCountOutputType
   */

  export type FormularioUsuarioCountOutputType = {
    campos: number
    arquivos: number
  }

  export type FormularioUsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campos?: boolean | FormularioUsuarioCountOutputTypeCountCamposArgs
    arquivos?: boolean | FormularioUsuarioCountOutputTypeCountArquivosArgs
  }

  // Custom InputTypes
  /**
   * FormularioUsuarioCountOutputType without action
   */
  export type FormularioUsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuarioCountOutputType
     */
    select?: FormularioUsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FormularioUsuarioCountOutputType without action
   */
  export type FormularioUsuarioCountOutputTypeCountCamposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FormularioUsuarioCampoWhereInput
  }

  /**
   * FormularioUsuarioCountOutputType without action
   */
  export type FormularioUsuarioCountOutputTypeCountArquivosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArquivoUsuarioWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    tipo: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    tipo: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: string | null
    nome: string | null
    email: string | null
    cpf: string | null
    senha: string | null
    tipo: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: string | null
    nome: string | null
    email: string | null
    cpf: string | null
    senha: string | null
    tipo: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    nome: number
    email: number
    cpf: number
    senha: number
    tipo: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    tipo?: true
  }

  export type UsuarioSumAggregateInputType = {
    tipo?: true
  }

  export type UsuarioMinAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    cpf?: true
    senha?: true
    tipo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    cpf?: true
    senha?: true
    tipo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    cpf?: true
    senha?: true
    tipo?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: string
    nome: string
    email: string
    cpf: string
    senha: string
    tipo: number
    createdAt: Date
    updatedAt: Date
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    cpf?: boolean
    senha?: boolean
    tipo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    formularios?: boolean | Usuario$formulariosArgs<ExtArgs>
    inscricoes?: boolean | Usuario$inscricoesArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    cpf?: boolean
    senha?: boolean
    tipo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    cpf?: boolean
    senha?: boolean
    tipo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id?: boolean
    nome?: boolean
    email?: boolean
    cpf?: boolean
    senha?: boolean
    tipo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "email" | "cpf" | "senha" | "tipo" | "createdAt" | "updatedAt", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    formularios?: boolean | Usuario$formulariosArgs<ExtArgs>
    inscricoes?: boolean | Usuario$inscricoesArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      formularios: Prisma.$FormularioUsuarioPayload<ExtArgs>[]
      inscricoes: Prisma.$InscricaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nome: string
      email: string
      cpf: string
      senha: string
      tipo: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {UsuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    formularios<T extends Usuario$formulariosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$formulariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormularioUsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    inscricoes<T extends Usuario$inscricoesArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$inscricoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InscricaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */
  interface UsuarioFieldRefs {
    readonly id: FieldRef<"Usuario", 'String'>
    readonly nome: FieldRef<"Usuario", 'String'>
    readonly email: FieldRef<"Usuario", 'String'>
    readonly cpf: FieldRef<"Usuario", 'String'>
    readonly senha: FieldRef<"Usuario", 'String'>
    readonly tipo: FieldRef<"Usuario", 'Int'>
    readonly createdAt: FieldRef<"Usuario", 'DateTime'>
    readonly updatedAt: FieldRef<"Usuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario updateManyAndReturn
   */
  export type UsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario.formularios
   */
  export type Usuario$formulariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuario
     */
    select?: FormularioUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuario
     */
    omit?: FormularioUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioInclude<ExtArgs> | null
    where?: FormularioUsuarioWhereInput
    orderBy?: FormularioUsuarioOrderByWithRelationInput | FormularioUsuarioOrderByWithRelationInput[]
    cursor?: FormularioUsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FormularioUsuarioScalarFieldEnum | FormularioUsuarioScalarFieldEnum[]
  }

  /**
   * Usuario.inscricoes
   */
  export type Usuario$inscricoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inscricao
     */
    select?: InscricaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inscricao
     */
    omit?: InscricaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InscricaoInclude<ExtArgs> | null
    where?: InscricaoWhereInput
    orderBy?: InscricaoOrderByWithRelationInput | InscricaoOrderByWithRelationInput[]
    cursor?: InscricaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InscricaoScalarFieldEnum | InscricaoScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Inscricao
   */

  export type AggregateInscricao = {
    _count: InscricaoCountAggregateOutputType | null
    _min: InscricaoMinAggregateOutputType | null
    _max: InscricaoMaxAggregateOutputType | null
  }

  export type InscricaoMinAggregateOutputType = {
    id: string | null
    usuarioId: string | null
    editalId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InscricaoMaxAggregateOutputType = {
    id: string | null
    usuarioId: string | null
    editalId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InscricaoCountAggregateOutputType = {
    id: number
    usuarioId: number
    editalId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type InscricaoMinAggregateInputType = {
    id?: true
    usuarioId?: true
    editalId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InscricaoMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    editalId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InscricaoCountAggregateInputType = {
    id?: true
    usuarioId?: true
    editalId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type InscricaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Inscricao to aggregate.
     */
    where?: InscricaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inscricaos to fetch.
     */
    orderBy?: InscricaoOrderByWithRelationInput | InscricaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InscricaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inscricaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inscricaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Inscricaos
    **/
    _count?: true | InscricaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InscricaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InscricaoMaxAggregateInputType
  }

  export type GetInscricaoAggregateType<T extends InscricaoAggregateArgs> = {
        [P in keyof T & keyof AggregateInscricao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInscricao[P]>
      : GetScalarType<T[P], AggregateInscricao[P]>
  }




  export type InscricaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InscricaoWhereInput
    orderBy?: InscricaoOrderByWithAggregationInput | InscricaoOrderByWithAggregationInput[]
    by: InscricaoScalarFieldEnum[] | InscricaoScalarFieldEnum
    having?: InscricaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InscricaoCountAggregateInputType | true
    _min?: InscricaoMinAggregateInputType
    _max?: InscricaoMaxAggregateInputType
  }

  export type InscricaoGroupByOutputType = {
    id: string
    usuarioId: string
    editalId: string
    createdAt: Date
    updatedAt: Date
    _count: InscricaoCountAggregateOutputType | null
    _min: InscricaoMinAggregateOutputType | null
    _max: InscricaoMaxAggregateOutputType | null
  }

  type GetInscricaoGroupByPayload<T extends InscricaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InscricaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InscricaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InscricaoGroupByOutputType[P]>
            : GetScalarType<T[P], InscricaoGroupByOutputType[P]>
        }
      >
    >


  export type InscricaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    editalId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    edital?: boolean | EditalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inscricao"]>

  export type InscricaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    editalId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    edital?: boolean | EditalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inscricao"]>

  export type InscricaoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    editalId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    edital?: boolean | EditalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inscricao"]>

  export type InscricaoSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    editalId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type InscricaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuarioId" | "editalId" | "createdAt" | "updatedAt", ExtArgs["result"]["inscricao"]>
  export type InscricaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    edital?: boolean | EditalDefaultArgs<ExtArgs>
  }
  export type InscricaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    edital?: boolean | EditalDefaultArgs<ExtArgs>
  }
  export type InscricaoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    edital?: boolean | EditalDefaultArgs<ExtArgs>
  }

  export type $InscricaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Inscricao"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      edital: Prisma.$EditalPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      usuarioId: string
      editalId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["inscricao"]>
    composites: {}
  }

  type InscricaoGetPayload<S extends boolean | null | undefined | InscricaoDefaultArgs> = $Result.GetResult<Prisma.$InscricaoPayload, S>

  type InscricaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InscricaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InscricaoCountAggregateInputType | true
    }

  export interface InscricaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Inscricao'], meta: { name: 'Inscricao' } }
    /**
     * Find zero or one Inscricao that matches the filter.
     * @param {InscricaoFindUniqueArgs} args - Arguments to find a Inscricao
     * @example
     * // Get one Inscricao
     * const inscricao = await prisma.inscricao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InscricaoFindUniqueArgs>(args: SelectSubset<T, InscricaoFindUniqueArgs<ExtArgs>>): Prisma__InscricaoClient<$Result.GetResult<Prisma.$InscricaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Inscricao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InscricaoFindUniqueOrThrowArgs} args - Arguments to find a Inscricao
     * @example
     * // Get one Inscricao
     * const inscricao = await prisma.inscricao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InscricaoFindUniqueOrThrowArgs>(args: SelectSubset<T, InscricaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InscricaoClient<$Result.GetResult<Prisma.$InscricaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Inscricao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InscricaoFindFirstArgs} args - Arguments to find a Inscricao
     * @example
     * // Get one Inscricao
     * const inscricao = await prisma.inscricao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InscricaoFindFirstArgs>(args?: SelectSubset<T, InscricaoFindFirstArgs<ExtArgs>>): Prisma__InscricaoClient<$Result.GetResult<Prisma.$InscricaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Inscricao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InscricaoFindFirstOrThrowArgs} args - Arguments to find a Inscricao
     * @example
     * // Get one Inscricao
     * const inscricao = await prisma.inscricao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InscricaoFindFirstOrThrowArgs>(args?: SelectSubset<T, InscricaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__InscricaoClient<$Result.GetResult<Prisma.$InscricaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Inscricaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InscricaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Inscricaos
     * const inscricaos = await prisma.inscricao.findMany()
     * 
     * // Get first 10 Inscricaos
     * const inscricaos = await prisma.inscricao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inscricaoWithIdOnly = await prisma.inscricao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InscricaoFindManyArgs>(args?: SelectSubset<T, InscricaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InscricaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Inscricao.
     * @param {InscricaoCreateArgs} args - Arguments to create a Inscricao.
     * @example
     * // Create one Inscricao
     * const Inscricao = await prisma.inscricao.create({
     *   data: {
     *     // ... data to create a Inscricao
     *   }
     * })
     * 
     */
    create<T extends InscricaoCreateArgs>(args: SelectSubset<T, InscricaoCreateArgs<ExtArgs>>): Prisma__InscricaoClient<$Result.GetResult<Prisma.$InscricaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Inscricaos.
     * @param {InscricaoCreateManyArgs} args - Arguments to create many Inscricaos.
     * @example
     * // Create many Inscricaos
     * const inscricao = await prisma.inscricao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InscricaoCreateManyArgs>(args?: SelectSubset<T, InscricaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Inscricaos and returns the data saved in the database.
     * @param {InscricaoCreateManyAndReturnArgs} args - Arguments to create many Inscricaos.
     * @example
     * // Create many Inscricaos
     * const inscricao = await prisma.inscricao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Inscricaos and only return the `id`
     * const inscricaoWithIdOnly = await prisma.inscricao.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InscricaoCreateManyAndReturnArgs>(args?: SelectSubset<T, InscricaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InscricaoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Inscricao.
     * @param {InscricaoDeleteArgs} args - Arguments to delete one Inscricao.
     * @example
     * // Delete one Inscricao
     * const Inscricao = await prisma.inscricao.delete({
     *   where: {
     *     // ... filter to delete one Inscricao
     *   }
     * })
     * 
     */
    delete<T extends InscricaoDeleteArgs>(args: SelectSubset<T, InscricaoDeleteArgs<ExtArgs>>): Prisma__InscricaoClient<$Result.GetResult<Prisma.$InscricaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Inscricao.
     * @param {InscricaoUpdateArgs} args - Arguments to update one Inscricao.
     * @example
     * // Update one Inscricao
     * const inscricao = await prisma.inscricao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InscricaoUpdateArgs>(args: SelectSubset<T, InscricaoUpdateArgs<ExtArgs>>): Prisma__InscricaoClient<$Result.GetResult<Prisma.$InscricaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Inscricaos.
     * @param {InscricaoDeleteManyArgs} args - Arguments to filter Inscricaos to delete.
     * @example
     * // Delete a few Inscricaos
     * const { count } = await prisma.inscricao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InscricaoDeleteManyArgs>(args?: SelectSubset<T, InscricaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inscricaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InscricaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Inscricaos
     * const inscricao = await prisma.inscricao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InscricaoUpdateManyArgs>(args: SelectSubset<T, InscricaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inscricaos and returns the data updated in the database.
     * @param {InscricaoUpdateManyAndReturnArgs} args - Arguments to update many Inscricaos.
     * @example
     * // Update many Inscricaos
     * const inscricao = await prisma.inscricao.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Inscricaos and only return the `id`
     * const inscricaoWithIdOnly = await prisma.inscricao.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InscricaoUpdateManyAndReturnArgs>(args: SelectSubset<T, InscricaoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InscricaoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Inscricao.
     * @param {InscricaoUpsertArgs} args - Arguments to update or create a Inscricao.
     * @example
     * // Update or create a Inscricao
     * const inscricao = await prisma.inscricao.upsert({
     *   create: {
     *     // ... data to create a Inscricao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Inscricao we want to update
     *   }
     * })
     */
    upsert<T extends InscricaoUpsertArgs>(args: SelectSubset<T, InscricaoUpsertArgs<ExtArgs>>): Prisma__InscricaoClient<$Result.GetResult<Prisma.$InscricaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Inscricaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InscricaoCountArgs} args - Arguments to filter Inscricaos to count.
     * @example
     * // Count the number of Inscricaos
     * const count = await prisma.inscricao.count({
     *   where: {
     *     // ... the filter for the Inscricaos we want to count
     *   }
     * })
    **/
    count<T extends InscricaoCountArgs>(
      args?: Subset<T, InscricaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InscricaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Inscricao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InscricaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InscricaoAggregateArgs>(args: Subset<T, InscricaoAggregateArgs>): Prisma.PrismaPromise<GetInscricaoAggregateType<T>>

    /**
     * Group by Inscricao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InscricaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InscricaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InscricaoGroupByArgs['orderBy'] }
        : { orderBy?: InscricaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InscricaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInscricaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Inscricao model
   */
  readonly fields: InscricaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Inscricao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InscricaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    edital<T extends EditalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EditalDefaultArgs<ExtArgs>>): Prisma__EditalClient<$Result.GetResult<Prisma.$EditalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Inscricao model
   */
  interface InscricaoFieldRefs {
    readonly id: FieldRef<"Inscricao", 'String'>
    readonly usuarioId: FieldRef<"Inscricao", 'String'>
    readonly editalId: FieldRef<"Inscricao", 'String'>
    readonly createdAt: FieldRef<"Inscricao", 'DateTime'>
    readonly updatedAt: FieldRef<"Inscricao", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Inscricao findUnique
   */
  export type InscricaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inscricao
     */
    select?: InscricaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inscricao
     */
    omit?: InscricaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InscricaoInclude<ExtArgs> | null
    /**
     * Filter, which Inscricao to fetch.
     */
    where: InscricaoWhereUniqueInput
  }

  /**
   * Inscricao findUniqueOrThrow
   */
  export type InscricaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inscricao
     */
    select?: InscricaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inscricao
     */
    omit?: InscricaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InscricaoInclude<ExtArgs> | null
    /**
     * Filter, which Inscricao to fetch.
     */
    where: InscricaoWhereUniqueInput
  }

  /**
   * Inscricao findFirst
   */
  export type InscricaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inscricao
     */
    select?: InscricaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inscricao
     */
    omit?: InscricaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InscricaoInclude<ExtArgs> | null
    /**
     * Filter, which Inscricao to fetch.
     */
    where?: InscricaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inscricaos to fetch.
     */
    orderBy?: InscricaoOrderByWithRelationInput | InscricaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Inscricaos.
     */
    cursor?: InscricaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inscricaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inscricaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Inscricaos.
     */
    distinct?: InscricaoScalarFieldEnum | InscricaoScalarFieldEnum[]
  }

  /**
   * Inscricao findFirstOrThrow
   */
  export type InscricaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inscricao
     */
    select?: InscricaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inscricao
     */
    omit?: InscricaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InscricaoInclude<ExtArgs> | null
    /**
     * Filter, which Inscricao to fetch.
     */
    where?: InscricaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inscricaos to fetch.
     */
    orderBy?: InscricaoOrderByWithRelationInput | InscricaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Inscricaos.
     */
    cursor?: InscricaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inscricaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inscricaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Inscricaos.
     */
    distinct?: InscricaoScalarFieldEnum | InscricaoScalarFieldEnum[]
  }

  /**
   * Inscricao findMany
   */
  export type InscricaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inscricao
     */
    select?: InscricaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inscricao
     */
    omit?: InscricaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InscricaoInclude<ExtArgs> | null
    /**
     * Filter, which Inscricaos to fetch.
     */
    where?: InscricaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inscricaos to fetch.
     */
    orderBy?: InscricaoOrderByWithRelationInput | InscricaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Inscricaos.
     */
    cursor?: InscricaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inscricaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inscricaos.
     */
    skip?: number
    distinct?: InscricaoScalarFieldEnum | InscricaoScalarFieldEnum[]
  }

  /**
   * Inscricao create
   */
  export type InscricaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inscricao
     */
    select?: InscricaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inscricao
     */
    omit?: InscricaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InscricaoInclude<ExtArgs> | null
    /**
     * The data needed to create a Inscricao.
     */
    data: XOR<InscricaoCreateInput, InscricaoUncheckedCreateInput>
  }

  /**
   * Inscricao createMany
   */
  export type InscricaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Inscricaos.
     */
    data: InscricaoCreateManyInput | InscricaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Inscricao createManyAndReturn
   */
  export type InscricaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inscricao
     */
    select?: InscricaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Inscricao
     */
    omit?: InscricaoOmit<ExtArgs> | null
    /**
     * The data used to create many Inscricaos.
     */
    data: InscricaoCreateManyInput | InscricaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InscricaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Inscricao update
   */
  export type InscricaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inscricao
     */
    select?: InscricaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inscricao
     */
    omit?: InscricaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InscricaoInclude<ExtArgs> | null
    /**
     * The data needed to update a Inscricao.
     */
    data: XOR<InscricaoUpdateInput, InscricaoUncheckedUpdateInput>
    /**
     * Choose, which Inscricao to update.
     */
    where: InscricaoWhereUniqueInput
  }

  /**
   * Inscricao updateMany
   */
  export type InscricaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Inscricaos.
     */
    data: XOR<InscricaoUpdateManyMutationInput, InscricaoUncheckedUpdateManyInput>
    /**
     * Filter which Inscricaos to update
     */
    where?: InscricaoWhereInput
    /**
     * Limit how many Inscricaos to update.
     */
    limit?: number
  }

  /**
   * Inscricao updateManyAndReturn
   */
  export type InscricaoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inscricao
     */
    select?: InscricaoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Inscricao
     */
    omit?: InscricaoOmit<ExtArgs> | null
    /**
     * The data used to update Inscricaos.
     */
    data: XOR<InscricaoUpdateManyMutationInput, InscricaoUncheckedUpdateManyInput>
    /**
     * Filter which Inscricaos to update
     */
    where?: InscricaoWhereInput
    /**
     * Limit how many Inscricaos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InscricaoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Inscricao upsert
   */
  export type InscricaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inscricao
     */
    select?: InscricaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inscricao
     */
    omit?: InscricaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InscricaoInclude<ExtArgs> | null
    /**
     * The filter to search for the Inscricao to update in case it exists.
     */
    where: InscricaoWhereUniqueInput
    /**
     * In case the Inscricao found by the `where` argument doesn't exist, create a new Inscricao with this data.
     */
    create: XOR<InscricaoCreateInput, InscricaoUncheckedCreateInput>
    /**
     * In case the Inscricao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InscricaoUpdateInput, InscricaoUncheckedUpdateInput>
  }

  /**
   * Inscricao delete
   */
  export type InscricaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inscricao
     */
    select?: InscricaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inscricao
     */
    omit?: InscricaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InscricaoInclude<ExtArgs> | null
    /**
     * Filter which Inscricao to delete.
     */
    where: InscricaoWhereUniqueInput
  }

  /**
   * Inscricao deleteMany
   */
  export type InscricaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Inscricaos to delete
     */
    where?: InscricaoWhereInput
    /**
     * Limit how many Inscricaos to delete.
     */
    limit?: number
  }

  /**
   * Inscricao without action
   */
  export type InscricaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inscricao
     */
    select?: InscricaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inscricao
     */
    omit?: InscricaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InscricaoInclude<ExtArgs> | null
  }


  /**
   * Model Edital
   */

  export type AggregateEdital = {
    _count: EditalCountAggregateOutputType | null
    _min: EditalMinAggregateOutputType | null
    _max: EditalMaxAggregateOutputType | null
  }

  export type EditalMinAggregateOutputType = {
    id: string | null
    titulo: string | null
    dataCriacao: Date | null
    dataPublicacao: Date | null
    dataEncerramento: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    senha: string | null
  }

  export type EditalMaxAggregateOutputType = {
    id: string | null
    titulo: string | null
    dataCriacao: Date | null
    dataPublicacao: Date | null
    dataEncerramento: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    senha: string | null
  }

  export type EditalCountAggregateOutputType = {
    id: number
    titulo: number
    dataCriacao: number
    dataPublicacao: number
    dataEncerramento: number
    createdAt: number
    updatedAt: number
    senha: number
    _all: number
  }


  export type EditalMinAggregateInputType = {
    id?: true
    titulo?: true
    dataCriacao?: true
    dataPublicacao?: true
    dataEncerramento?: true
    createdAt?: true
    updatedAt?: true
    senha?: true
  }

  export type EditalMaxAggregateInputType = {
    id?: true
    titulo?: true
    dataCriacao?: true
    dataPublicacao?: true
    dataEncerramento?: true
    createdAt?: true
    updatedAt?: true
    senha?: true
  }

  export type EditalCountAggregateInputType = {
    id?: true
    titulo?: true
    dataCriacao?: true
    dataPublicacao?: true
    dataEncerramento?: true
    createdAt?: true
    updatedAt?: true
    senha?: true
    _all?: true
  }

  export type EditalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Edital to aggregate.
     */
    where?: EditalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Editals to fetch.
     */
    orderBy?: EditalOrderByWithRelationInput | EditalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EditalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Editals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Editals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Editals
    **/
    _count?: true | EditalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EditalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EditalMaxAggregateInputType
  }

  export type GetEditalAggregateType<T extends EditalAggregateArgs> = {
        [P in keyof T & keyof AggregateEdital]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEdital[P]>
      : GetScalarType<T[P], AggregateEdital[P]>
  }




  export type EditalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EditalWhereInput
    orderBy?: EditalOrderByWithAggregationInput | EditalOrderByWithAggregationInput[]
    by: EditalScalarFieldEnum[] | EditalScalarFieldEnum
    having?: EditalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EditalCountAggregateInputType | true
    _min?: EditalMinAggregateInputType
    _max?: EditalMaxAggregateInputType
  }

  export type EditalGroupByOutputType = {
    id: string
    titulo: string
    dataCriacao: Date
    dataPublicacao: Date
    dataEncerramento: Date | null
    createdAt: Date
    updatedAt: Date
    senha: string
    _count: EditalCountAggregateOutputType | null
    _min: EditalMinAggregateOutputType | null
    _max: EditalMaxAggregateOutputType | null
  }

  type GetEditalGroupByPayload<T extends EditalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EditalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EditalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EditalGroupByOutputType[P]>
            : GetScalarType<T[P], EditalGroupByOutputType[P]>
        }
      >
    >


  export type EditalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    dataCriacao?: boolean
    dataPublicacao?: boolean
    dataEncerramento?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    senha?: boolean
    formulario?: boolean | Edital$formularioArgs<ExtArgs>
    inscricoes?: boolean | Edital$inscricoesArgs<ExtArgs>
    arquivos?: boolean | Edital$arquivosArgs<ExtArgs>
    _count?: boolean | EditalCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["edital"]>

  export type EditalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    dataCriacao?: boolean
    dataPublicacao?: boolean
    dataEncerramento?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    senha?: boolean
  }, ExtArgs["result"]["edital"]>

  export type EditalSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    dataCriacao?: boolean
    dataPublicacao?: boolean
    dataEncerramento?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    senha?: boolean
  }, ExtArgs["result"]["edital"]>

  export type EditalSelectScalar = {
    id?: boolean
    titulo?: boolean
    dataCriacao?: boolean
    dataPublicacao?: boolean
    dataEncerramento?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    senha?: boolean
  }

  export type EditalOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "titulo" | "dataCriacao" | "dataPublicacao" | "dataEncerramento" | "createdAt" | "updatedAt" | "senha", ExtArgs["result"]["edital"]>
  export type EditalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    formulario?: boolean | Edital$formularioArgs<ExtArgs>
    inscricoes?: boolean | Edital$inscricoesArgs<ExtArgs>
    arquivos?: boolean | Edital$arquivosArgs<ExtArgs>
    _count?: boolean | EditalCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EditalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type EditalIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EditalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Edital"
    objects: {
      formulario: Prisma.$FormularioPayload<ExtArgs> | null
      inscricoes: Prisma.$InscricaoPayload<ExtArgs>[]
      arquivos: Prisma.$ArquivoEditalPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      titulo: string
      dataCriacao: Date
      dataPublicacao: Date
      dataEncerramento: Date | null
      createdAt: Date
      updatedAt: Date
      senha: string
    }, ExtArgs["result"]["edital"]>
    composites: {}
  }

  type EditalGetPayload<S extends boolean | null | undefined | EditalDefaultArgs> = $Result.GetResult<Prisma.$EditalPayload, S>

  type EditalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EditalFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EditalCountAggregateInputType | true
    }

  export interface EditalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Edital'], meta: { name: 'Edital' } }
    /**
     * Find zero or one Edital that matches the filter.
     * @param {EditalFindUniqueArgs} args - Arguments to find a Edital
     * @example
     * // Get one Edital
     * const edital = await prisma.edital.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EditalFindUniqueArgs>(args: SelectSubset<T, EditalFindUniqueArgs<ExtArgs>>): Prisma__EditalClient<$Result.GetResult<Prisma.$EditalPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Edital that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EditalFindUniqueOrThrowArgs} args - Arguments to find a Edital
     * @example
     * // Get one Edital
     * const edital = await prisma.edital.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EditalFindUniqueOrThrowArgs>(args: SelectSubset<T, EditalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EditalClient<$Result.GetResult<Prisma.$EditalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Edital that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EditalFindFirstArgs} args - Arguments to find a Edital
     * @example
     * // Get one Edital
     * const edital = await prisma.edital.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EditalFindFirstArgs>(args?: SelectSubset<T, EditalFindFirstArgs<ExtArgs>>): Prisma__EditalClient<$Result.GetResult<Prisma.$EditalPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Edital that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EditalFindFirstOrThrowArgs} args - Arguments to find a Edital
     * @example
     * // Get one Edital
     * const edital = await prisma.edital.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EditalFindFirstOrThrowArgs>(args?: SelectSubset<T, EditalFindFirstOrThrowArgs<ExtArgs>>): Prisma__EditalClient<$Result.GetResult<Prisma.$EditalPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Editals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EditalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Editals
     * const editals = await prisma.edital.findMany()
     * 
     * // Get first 10 Editals
     * const editals = await prisma.edital.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const editalWithIdOnly = await prisma.edital.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EditalFindManyArgs>(args?: SelectSubset<T, EditalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EditalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Edital.
     * @param {EditalCreateArgs} args - Arguments to create a Edital.
     * @example
     * // Create one Edital
     * const Edital = await prisma.edital.create({
     *   data: {
     *     // ... data to create a Edital
     *   }
     * })
     * 
     */
    create<T extends EditalCreateArgs>(args: SelectSubset<T, EditalCreateArgs<ExtArgs>>): Prisma__EditalClient<$Result.GetResult<Prisma.$EditalPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Editals.
     * @param {EditalCreateManyArgs} args - Arguments to create many Editals.
     * @example
     * // Create many Editals
     * const edital = await prisma.edital.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EditalCreateManyArgs>(args?: SelectSubset<T, EditalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Editals and returns the data saved in the database.
     * @param {EditalCreateManyAndReturnArgs} args - Arguments to create many Editals.
     * @example
     * // Create many Editals
     * const edital = await prisma.edital.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Editals and only return the `id`
     * const editalWithIdOnly = await prisma.edital.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EditalCreateManyAndReturnArgs>(args?: SelectSubset<T, EditalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EditalPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Edital.
     * @param {EditalDeleteArgs} args - Arguments to delete one Edital.
     * @example
     * // Delete one Edital
     * const Edital = await prisma.edital.delete({
     *   where: {
     *     // ... filter to delete one Edital
     *   }
     * })
     * 
     */
    delete<T extends EditalDeleteArgs>(args: SelectSubset<T, EditalDeleteArgs<ExtArgs>>): Prisma__EditalClient<$Result.GetResult<Prisma.$EditalPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Edital.
     * @param {EditalUpdateArgs} args - Arguments to update one Edital.
     * @example
     * // Update one Edital
     * const edital = await prisma.edital.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EditalUpdateArgs>(args: SelectSubset<T, EditalUpdateArgs<ExtArgs>>): Prisma__EditalClient<$Result.GetResult<Prisma.$EditalPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Editals.
     * @param {EditalDeleteManyArgs} args - Arguments to filter Editals to delete.
     * @example
     * // Delete a few Editals
     * const { count } = await prisma.edital.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EditalDeleteManyArgs>(args?: SelectSubset<T, EditalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Editals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EditalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Editals
     * const edital = await prisma.edital.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EditalUpdateManyArgs>(args: SelectSubset<T, EditalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Editals and returns the data updated in the database.
     * @param {EditalUpdateManyAndReturnArgs} args - Arguments to update many Editals.
     * @example
     * // Update many Editals
     * const edital = await prisma.edital.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Editals and only return the `id`
     * const editalWithIdOnly = await prisma.edital.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EditalUpdateManyAndReturnArgs>(args: SelectSubset<T, EditalUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EditalPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Edital.
     * @param {EditalUpsertArgs} args - Arguments to update or create a Edital.
     * @example
     * // Update or create a Edital
     * const edital = await prisma.edital.upsert({
     *   create: {
     *     // ... data to create a Edital
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Edital we want to update
     *   }
     * })
     */
    upsert<T extends EditalUpsertArgs>(args: SelectSubset<T, EditalUpsertArgs<ExtArgs>>): Prisma__EditalClient<$Result.GetResult<Prisma.$EditalPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Editals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EditalCountArgs} args - Arguments to filter Editals to count.
     * @example
     * // Count the number of Editals
     * const count = await prisma.edital.count({
     *   where: {
     *     // ... the filter for the Editals we want to count
     *   }
     * })
    **/
    count<T extends EditalCountArgs>(
      args?: Subset<T, EditalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EditalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Edital.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EditalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EditalAggregateArgs>(args: Subset<T, EditalAggregateArgs>): Prisma.PrismaPromise<GetEditalAggregateType<T>>

    /**
     * Group by Edital.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EditalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EditalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EditalGroupByArgs['orderBy'] }
        : { orderBy?: EditalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EditalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEditalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Edital model
   */
  readonly fields: EditalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Edital.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EditalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    formulario<T extends Edital$formularioArgs<ExtArgs> = {}>(args?: Subset<T, Edital$formularioArgs<ExtArgs>>): Prisma__FormularioClient<$Result.GetResult<Prisma.$FormularioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    inscricoes<T extends Edital$inscricoesArgs<ExtArgs> = {}>(args?: Subset<T, Edital$inscricoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InscricaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    arquivos<T extends Edital$arquivosArgs<ExtArgs> = {}>(args?: Subset<T, Edital$arquivosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArquivoEditalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Edital model
   */
  interface EditalFieldRefs {
    readonly id: FieldRef<"Edital", 'String'>
    readonly titulo: FieldRef<"Edital", 'String'>
    readonly dataCriacao: FieldRef<"Edital", 'DateTime'>
    readonly dataPublicacao: FieldRef<"Edital", 'DateTime'>
    readonly dataEncerramento: FieldRef<"Edital", 'DateTime'>
    readonly createdAt: FieldRef<"Edital", 'DateTime'>
    readonly updatedAt: FieldRef<"Edital", 'DateTime'>
    readonly senha: FieldRef<"Edital", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Edital findUnique
   */
  export type EditalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Edital
     */
    select?: EditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Edital
     */
    omit?: EditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditalInclude<ExtArgs> | null
    /**
     * Filter, which Edital to fetch.
     */
    where: EditalWhereUniqueInput
  }

  /**
   * Edital findUniqueOrThrow
   */
  export type EditalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Edital
     */
    select?: EditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Edital
     */
    omit?: EditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditalInclude<ExtArgs> | null
    /**
     * Filter, which Edital to fetch.
     */
    where: EditalWhereUniqueInput
  }

  /**
   * Edital findFirst
   */
  export type EditalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Edital
     */
    select?: EditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Edital
     */
    omit?: EditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditalInclude<ExtArgs> | null
    /**
     * Filter, which Edital to fetch.
     */
    where?: EditalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Editals to fetch.
     */
    orderBy?: EditalOrderByWithRelationInput | EditalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Editals.
     */
    cursor?: EditalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Editals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Editals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Editals.
     */
    distinct?: EditalScalarFieldEnum | EditalScalarFieldEnum[]
  }

  /**
   * Edital findFirstOrThrow
   */
  export type EditalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Edital
     */
    select?: EditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Edital
     */
    omit?: EditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditalInclude<ExtArgs> | null
    /**
     * Filter, which Edital to fetch.
     */
    where?: EditalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Editals to fetch.
     */
    orderBy?: EditalOrderByWithRelationInput | EditalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Editals.
     */
    cursor?: EditalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Editals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Editals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Editals.
     */
    distinct?: EditalScalarFieldEnum | EditalScalarFieldEnum[]
  }

  /**
   * Edital findMany
   */
  export type EditalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Edital
     */
    select?: EditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Edital
     */
    omit?: EditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditalInclude<ExtArgs> | null
    /**
     * Filter, which Editals to fetch.
     */
    where?: EditalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Editals to fetch.
     */
    orderBy?: EditalOrderByWithRelationInput | EditalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Editals.
     */
    cursor?: EditalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Editals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Editals.
     */
    skip?: number
    distinct?: EditalScalarFieldEnum | EditalScalarFieldEnum[]
  }

  /**
   * Edital create
   */
  export type EditalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Edital
     */
    select?: EditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Edital
     */
    omit?: EditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditalInclude<ExtArgs> | null
    /**
     * The data needed to create a Edital.
     */
    data: XOR<EditalCreateInput, EditalUncheckedCreateInput>
  }

  /**
   * Edital createMany
   */
  export type EditalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Editals.
     */
    data: EditalCreateManyInput | EditalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Edital createManyAndReturn
   */
  export type EditalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Edital
     */
    select?: EditalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Edital
     */
    omit?: EditalOmit<ExtArgs> | null
    /**
     * The data used to create many Editals.
     */
    data: EditalCreateManyInput | EditalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Edital update
   */
  export type EditalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Edital
     */
    select?: EditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Edital
     */
    omit?: EditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditalInclude<ExtArgs> | null
    /**
     * The data needed to update a Edital.
     */
    data: XOR<EditalUpdateInput, EditalUncheckedUpdateInput>
    /**
     * Choose, which Edital to update.
     */
    where: EditalWhereUniqueInput
  }

  /**
   * Edital updateMany
   */
  export type EditalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Editals.
     */
    data: XOR<EditalUpdateManyMutationInput, EditalUncheckedUpdateManyInput>
    /**
     * Filter which Editals to update
     */
    where?: EditalWhereInput
    /**
     * Limit how many Editals to update.
     */
    limit?: number
  }

  /**
   * Edital updateManyAndReturn
   */
  export type EditalUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Edital
     */
    select?: EditalSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Edital
     */
    omit?: EditalOmit<ExtArgs> | null
    /**
     * The data used to update Editals.
     */
    data: XOR<EditalUpdateManyMutationInput, EditalUncheckedUpdateManyInput>
    /**
     * Filter which Editals to update
     */
    where?: EditalWhereInput
    /**
     * Limit how many Editals to update.
     */
    limit?: number
  }

  /**
   * Edital upsert
   */
  export type EditalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Edital
     */
    select?: EditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Edital
     */
    omit?: EditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditalInclude<ExtArgs> | null
    /**
     * The filter to search for the Edital to update in case it exists.
     */
    where: EditalWhereUniqueInput
    /**
     * In case the Edital found by the `where` argument doesn't exist, create a new Edital with this data.
     */
    create: XOR<EditalCreateInput, EditalUncheckedCreateInput>
    /**
     * In case the Edital was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EditalUpdateInput, EditalUncheckedUpdateInput>
  }

  /**
   * Edital delete
   */
  export type EditalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Edital
     */
    select?: EditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Edital
     */
    omit?: EditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditalInclude<ExtArgs> | null
    /**
     * Filter which Edital to delete.
     */
    where: EditalWhereUniqueInput
  }

  /**
   * Edital deleteMany
   */
  export type EditalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Editals to delete
     */
    where?: EditalWhereInput
    /**
     * Limit how many Editals to delete.
     */
    limit?: number
  }

  /**
   * Edital.formulario
   */
  export type Edital$formularioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formulario
     */
    select?: FormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Formulario
     */
    omit?: FormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioInclude<ExtArgs> | null
    where?: FormularioWhereInput
  }

  /**
   * Edital.inscricoes
   */
  export type Edital$inscricoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inscricao
     */
    select?: InscricaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inscricao
     */
    omit?: InscricaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InscricaoInclude<ExtArgs> | null
    where?: InscricaoWhereInput
    orderBy?: InscricaoOrderByWithRelationInput | InscricaoOrderByWithRelationInput[]
    cursor?: InscricaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InscricaoScalarFieldEnum | InscricaoScalarFieldEnum[]
  }

  /**
   * Edital.arquivos
   */
  export type Edital$arquivosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoEdital
     */
    select?: ArquivoEditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoEdital
     */
    omit?: ArquivoEditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoEditalInclude<ExtArgs> | null
    where?: ArquivoEditalWhereInput
    orderBy?: ArquivoEditalOrderByWithRelationInput | ArquivoEditalOrderByWithRelationInput[]
    cursor?: ArquivoEditalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArquivoEditalScalarFieldEnum | ArquivoEditalScalarFieldEnum[]
  }

  /**
   * Edital without action
   */
  export type EditalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Edital
     */
    select?: EditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Edital
     */
    omit?: EditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditalInclude<ExtArgs> | null
  }


  /**
   * Model ArquivoEdital
   */

  export type AggregateArquivoEdital = {
    _count: ArquivoEditalCountAggregateOutputType | null
    _min: ArquivoEditalMinAggregateOutputType | null
    _max: ArquivoEditalMaxAggregateOutputType | null
  }

  export type ArquivoEditalMinAggregateOutputType = {
    id: string | null
    url: string | null
    rotulo: string | null
    editalId: string | null
  }

  export type ArquivoEditalMaxAggregateOutputType = {
    id: string | null
    url: string | null
    rotulo: string | null
    editalId: string | null
  }

  export type ArquivoEditalCountAggregateOutputType = {
    id: number
    url: number
    rotulo: number
    editalId: number
    _all: number
  }


  export type ArquivoEditalMinAggregateInputType = {
    id?: true
    url?: true
    rotulo?: true
    editalId?: true
  }

  export type ArquivoEditalMaxAggregateInputType = {
    id?: true
    url?: true
    rotulo?: true
    editalId?: true
  }

  export type ArquivoEditalCountAggregateInputType = {
    id?: true
    url?: true
    rotulo?: true
    editalId?: true
    _all?: true
  }

  export type ArquivoEditalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ArquivoEdital to aggregate.
     */
    where?: ArquivoEditalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArquivoEditals to fetch.
     */
    orderBy?: ArquivoEditalOrderByWithRelationInput | ArquivoEditalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ArquivoEditalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArquivoEditals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArquivoEditals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ArquivoEditals
    **/
    _count?: true | ArquivoEditalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ArquivoEditalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ArquivoEditalMaxAggregateInputType
  }

  export type GetArquivoEditalAggregateType<T extends ArquivoEditalAggregateArgs> = {
        [P in keyof T & keyof AggregateArquivoEdital]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateArquivoEdital[P]>
      : GetScalarType<T[P], AggregateArquivoEdital[P]>
  }




  export type ArquivoEditalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArquivoEditalWhereInput
    orderBy?: ArquivoEditalOrderByWithAggregationInput | ArquivoEditalOrderByWithAggregationInput[]
    by: ArquivoEditalScalarFieldEnum[] | ArquivoEditalScalarFieldEnum
    having?: ArquivoEditalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ArquivoEditalCountAggregateInputType | true
    _min?: ArquivoEditalMinAggregateInputType
    _max?: ArquivoEditalMaxAggregateInputType
  }

  export type ArquivoEditalGroupByOutputType = {
    id: string
    url: string
    rotulo: string
    editalId: string | null
    _count: ArquivoEditalCountAggregateOutputType | null
    _min: ArquivoEditalMinAggregateOutputType | null
    _max: ArquivoEditalMaxAggregateOutputType | null
  }

  type GetArquivoEditalGroupByPayload<T extends ArquivoEditalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ArquivoEditalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ArquivoEditalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ArquivoEditalGroupByOutputType[P]>
            : GetScalarType<T[P], ArquivoEditalGroupByOutputType[P]>
        }
      >
    >


  export type ArquivoEditalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    rotulo?: boolean
    editalId?: boolean
    edital?: boolean | ArquivoEdital$editalArgs<ExtArgs>
  }, ExtArgs["result"]["arquivoEdital"]>

  export type ArquivoEditalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    rotulo?: boolean
    editalId?: boolean
    edital?: boolean | ArquivoEdital$editalArgs<ExtArgs>
  }, ExtArgs["result"]["arquivoEdital"]>

  export type ArquivoEditalSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    rotulo?: boolean
    editalId?: boolean
    edital?: boolean | ArquivoEdital$editalArgs<ExtArgs>
  }, ExtArgs["result"]["arquivoEdital"]>

  export type ArquivoEditalSelectScalar = {
    id?: boolean
    url?: boolean
    rotulo?: boolean
    editalId?: boolean
  }

  export type ArquivoEditalOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "rotulo" | "editalId", ExtArgs["result"]["arquivoEdital"]>
  export type ArquivoEditalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    edital?: boolean | ArquivoEdital$editalArgs<ExtArgs>
  }
  export type ArquivoEditalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    edital?: boolean | ArquivoEdital$editalArgs<ExtArgs>
  }
  export type ArquivoEditalIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    edital?: boolean | ArquivoEdital$editalArgs<ExtArgs>
  }

  export type $ArquivoEditalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ArquivoEdital"
    objects: {
      edital: Prisma.$EditalPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      url: string
      rotulo: string
      editalId: string | null
    }, ExtArgs["result"]["arquivoEdital"]>
    composites: {}
  }

  type ArquivoEditalGetPayload<S extends boolean | null | undefined | ArquivoEditalDefaultArgs> = $Result.GetResult<Prisma.$ArquivoEditalPayload, S>

  type ArquivoEditalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ArquivoEditalFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ArquivoEditalCountAggregateInputType | true
    }

  export interface ArquivoEditalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ArquivoEdital'], meta: { name: 'ArquivoEdital' } }
    /**
     * Find zero or one ArquivoEdital that matches the filter.
     * @param {ArquivoEditalFindUniqueArgs} args - Arguments to find a ArquivoEdital
     * @example
     * // Get one ArquivoEdital
     * const arquivoEdital = await prisma.arquivoEdital.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ArquivoEditalFindUniqueArgs>(args: SelectSubset<T, ArquivoEditalFindUniqueArgs<ExtArgs>>): Prisma__ArquivoEditalClient<$Result.GetResult<Prisma.$ArquivoEditalPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ArquivoEdital that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ArquivoEditalFindUniqueOrThrowArgs} args - Arguments to find a ArquivoEdital
     * @example
     * // Get one ArquivoEdital
     * const arquivoEdital = await prisma.arquivoEdital.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ArquivoEditalFindUniqueOrThrowArgs>(args: SelectSubset<T, ArquivoEditalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ArquivoEditalClient<$Result.GetResult<Prisma.$ArquivoEditalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ArquivoEdital that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArquivoEditalFindFirstArgs} args - Arguments to find a ArquivoEdital
     * @example
     * // Get one ArquivoEdital
     * const arquivoEdital = await prisma.arquivoEdital.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ArquivoEditalFindFirstArgs>(args?: SelectSubset<T, ArquivoEditalFindFirstArgs<ExtArgs>>): Prisma__ArquivoEditalClient<$Result.GetResult<Prisma.$ArquivoEditalPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ArquivoEdital that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArquivoEditalFindFirstOrThrowArgs} args - Arguments to find a ArquivoEdital
     * @example
     * // Get one ArquivoEdital
     * const arquivoEdital = await prisma.arquivoEdital.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ArquivoEditalFindFirstOrThrowArgs>(args?: SelectSubset<T, ArquivoEditalFindFirstOrThrowArgs<ExtArgs>>): Prisma__ArquivoEditalClient<$Result.GetResult<Prisma.$ArquivoEditalPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ArquivoEditals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArquivoEditalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ArquivoEditals
     * const arquivoEditals = await prisma.arquivoEdital.findMany()
     * 
     * // Get first 10 ArquivoEditals
     * const arquivoEditals = await prisma.arquivoEdital.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const arquivoEditalWithIdOnly = await prisma.arquivoEdital.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ArquivoEditalFindManyArgs>(args?: SelectSubset<T, ArquivoEditalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArquivoEditalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ArquivoEdital.
     * @param {ArquivoEditalCreateArgs} args - Arguments to create a ArquivoEdital.
     * @example
     * // Create one ArquivoEdital
     * const ArquivoEdital = await prisma.arquivoEdital.create({
     *   data: {
     *     // ... data to create a ArquivoEdital
     *   }
     * })
     * 
     */
    create<T extends ArquivoEditalCreateArgs>(args: SelectSubset<T, ArquivoEditalCreateArgs<ExtArgs>>): Prisma__ArquivoEditalClient<$Result.GetResult<Prisma.$ArquivoEditalPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ArquivoEditals.
     * @param {ArquivoEditalCreateManyArgs} args - Arguments to create many ArquivoEditals.
     * @example
     * // Create many ArquivoEditals
     * const arquivoEdital = await prisma.arquivoEdital.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ArquivoEditalCreateManyArgs>(args?: SelectSubset<T, ArquivoEditalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ArquivoEditals and returns the data saved in the database.
     * @param {ArquivoEditalCreateManyAndReturnArgs} args - Arguments to create many ArquivoEditals.
     * @example
     * // Create many ArquivoEditals
     * const arquivoEdital = await prisma.arquivoEdital.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ArquivoEditals and only return the `id`
     * const arquivoEditalWithIdOnly = await prisma.arquivoEdital.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ArquivoEditalCreateManyAndReturnArgs>(args?: SelectSubset<T, ArquivoEditalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArquivoEditalPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ArquivoEdital.
     * @param {ArquivoEditalDeleteArgs} args - Arguments to delete one ArquivoEdital.
     * @example
     * // Delete one ArquivoEdital
     * const ArquivoEdital = await prisma.arquivoEdital.delete({
     *   where: {
     *     // ... filter to delete one ArquivoEdital
     *   }
     * })
     * 
     */
    delete<T extends ArquivoEditalDeleteArgs>(args: SelectSubset<T, ArquivoEditalDeleteArgs<ExtArgs>>): Prisma__ArquivoEditalClient<$Result.GetResult<Prisma.$ArquivoEditalPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ArquivoEdital.
     * @param {ArquivoEditalUpdateArgs} args - Arguments to update one ArquivoEdital.
     * @example
     * // Update one ArquivoEdital
     * const arquivoEdital = await prisma.arquivoEdital.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ArquivoEditalUpdateArgs>(args: SelectSubset<T, ArquivoEditalUpdateArgs<ExtArgs>>): Prisma__ArquivoEditalClient<$Result.GetResult<Prisma.$ArquivoEditalPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ArquivoEditals.
     * @param {ArquivoEditalDeleteManyArgs} args - Arguments to filter ArquivoEditals to delete.
     * @example
     * // Delete a few ArquivoEditals
     * const { count } = await prisma.arquivoEdital.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ArquivoEditalDeleteManyArgs>(args?: SelectSubset<T, ArquivoEditalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ArquivoEditals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArquivoEditalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ArquivoEditals
     * const arquivoEdital = await prisma.arquivoEdital.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ArquivoEditalUpdateManyArgs>(args: SelectSubset<T, ArquivoEditalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ArquivoEditals and returns the data updated in the database.
     * @param {ArquivoEditalUpdateManyAndReturnArgs} args - Arguments to update many ArquivoEditals.
     * @example
     * // Update many ArquivoEditals
     * const arquivoEdital = await prisma.arquivoEdital.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ArquivoEditals and only return the `id`
     * const arquivoEditalWithIdOnly = await prisma.arquivoEdital.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ArquivoEditalUpdateManyAndReturnArgs>(args: SelectSubset<T, ArquivoEditalUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArquivoEditalPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ArquivoEdital.
     * @param {ArquivoEditalUpsertArgs} args - Arguments to update or create a ArquivoEdital.
     * @example
     * // Update or create a ArquivoEdital
     * const arquivoEdital = await prisma.arquivoEdital.upsert({
     *   create: {
     *     // ... data to create a ArquivoEdital
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ArquivoEdital we want to update
     *   }
     * })
     */
    upsert<T extends ArquivoEditalUpsertArgs>(args: SelectSubset<T, ArquivoEditalUpsertArgs<ExtArgs>>): Prisma__ArquivoEditalClient<$Result.GetResult<Prisma.$ArquivoEditalPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ArquivoEditals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArquivoEditalCountArgs} args - Arguments to filter ArquivoEditals to count.
     * @example
     * // Count the number of ArquivoEditals
     * const count = await prisma.arquivoEdital.count({
     *   where: {
     *     // ... the filter for the ArquivoEditals we want to count
     *   }
     * })
    **/
    count<T extends ArquivoEditalCountArgs>(
      args?: Subset<T, ArquivoEditalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ArquivoEditalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ArquivoEdital.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArquivoEditalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ArquivoEditalAggregateArgs>(args: Subset<T, ArquivoEditalAggregateArgs>): Prisma.PrismaPromise<GetArquivoEditalAggregateType<T>>

    /**
     * Group by ArquivoEdital.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArquivoEditalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ArquivoEditalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ArquivoEditalGroupByArgs['orderBy'] }
        : { orderBy?: ArquivoEditalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ArquivoEditalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArquivoEditalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ArquivoEdital model
   */
  readonly fields: ArquivoEditalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ArquivoEdital.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ArquivoEditalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    edital<T extends ArquivoEdital$editalArgs<ExtArgs> = {}>(args?: Subset<T, ArquivoEdital$editalArgs<ExtArgs>>): Prisma__EditalClient<$Result.GetResult<Prisma.$EditalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ArquivoEdital model
   */
  interface ArquivoEditalFieldRefs {
    readonly id: FieldRef<"ArquivoEdital", 'String'>
    readonly url: FieldRef<"ArquivoEdital", 'String'>
    readonly rotulo: FieldRef<"ArquivoEdital", 'String'>
    readonly editalId: FieldRef<"ArquivoEdital", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ArquivoEdital findUnique
   */
  export type ArquivoEditalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoEdital
     */
    select?: ArquivoEditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoEdital
     */
    omit?: ArquivoEditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoEditalInclude<ExtArgs> | null
    /**
     * Filter, which ArquivoEdital to fetch.
     */
    where: ArquivoEditalWhereUniqueInput
  }

  /**
   * ArquivoEdital findUniqueOrThrow
   */
  export type ArquivoEditalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoEdital
     */
    select?: ArquivoEditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoEdital
     */
    omit?: ArquivoEditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoEditalInclude<ExtArgs> | null
    /**
     * Filter, which ArquivoEdital to fetch.
     */
    where: ArquivoEditalWhereUniqueInput
  }

  /**
   * ArquivoEdital findFirst
   */
  export type ArquivoEditalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoEdital
     */
    select?: ArquivoEditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoEdital
     */
    omit?: ArquivoEditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoEditalInclude<ExtArgs> | null
    /**
     * Filter, which ArquivoEdital to fetch.
     */
    where?: ArquivoEditalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArquivoEditals to fetch.
     */
    orderBy?: ArquivoEditalOrderByWithRelationInput | ArquivoEditalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ArquivoEditals.
     */
    cursor?: ArquivoEditalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArquivoEditals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArquivoEditals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ArquivoEditals.
     */
    distinct?: ArquivoEditalScalarFieldEnum | ArquivoEditalScalarFieldEnum[]
  }

  /**
   * ArquivoEdital findFirstOrThrow
   */
  export type ArquivoEditalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoEdital
     */
    select?: ArquivoEditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoEdital
     */
    omit?: ArquivoEditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoEditalInclude<ExtArgs> | null
    /**
     * Filter, which ArquivoEdital to fetch.
     */
    where?: ArquivoEditalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArquivoEditals to fetch.
     */
    orderBy?: ArquivoEditalOrderByWithRelationInput | ArquivoEditalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ArquivoEditals.
     */
    cursor?: ArquivoEditalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArquivoEditals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArquivoEditals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ArquivoEditals.
     */
    distinct?: ArquivoEditalScalarFieldEnum | ArquivoEditalScalarFieldEnum[]
  }

  /**
   * ArquivoEdital findMany
   */
  export type ArquivoEditalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoEdital
     */
    select?: ArquivoEditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoEdital
     */
    omit?: ArquivoEditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoEditalInclude<ExtArgs> | null
    /**
     * Filter, which ArquivoEditals to fetch.
     */
    where?: ArquivoEditalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArquivoEditals to fetch.
     */
    orderBy?: ArquivoEditalOrderByWithRelationInput | ArquivoEditalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ArquivoEditals.
     */
    cursor?: ArquivoEditalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArquivoEditals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArquivoEditals.
     */
    skip?: number
    distinct?: ArquivoEditalScalarFieldEnum | ArquivoEditalScalarFieldEnum[]
  }

  /**
   * ArquivoEdital create
   */
  export type ArquivoEditalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoEdital
     */
    select?: ArquivoEditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoEdital
     */
    omit?: ArquivoEditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoEditalInclude<ExtArgs> | null
    /**
     * The data needed to create a ArquivoEdital.
     */
    data: XOR<ArquivoEditalCreateInput, ArquivoEditalUncheckedCreateInput>
  }

  /**
   * ArquivoEdital createMany
   */
  export type ArquivoEditalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ArquivoEditals.
     */
    data: ArquivoEditalCreateManyInput | ArquivoEditalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ArquivoEdital createManyAndReturn
   */
  export type ArquivoEditalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoEdital
     */
    select?: ArquivoEditalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoEdital
     */
    omit?: ArquivoEditalOmit<ExtArgs> | null
    /**
     * The data used to create many ArquivoEditals.
     */
    data: ArquivoEditalCreateManyInput | ArquivoEditalCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoEditalIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ArquivoEdital update
   */
  export type ArquivoEditalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoEdital
     */
    select?: ArquivoEditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoEdital
     */
    omit?: ArquivoEditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoEditalInclude<ExtArgs> | null
    /**
     * The data needed to update a ArquivoEdital.
     */
    data: XOR<ArquivoEditalUpdateInput, ArquivoEditalUncheckedUpdateInput>
    /**
     * Choose, which ArquivoEdital to update.
     */
    where: ArquivoEditalWhereUniqueInput
  }

  /**
   * ArquivoEdital updateMany
   */
  export type ArquivoEditalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ArquivoEditals.
     */
    data: XOR<ArquivoEditalUpdateManyMutationInput, ArquivoEditalUncheckedUpdateManyInput>
    /**
     * Filter which ArquivoEditals to update
     */
    where?: ArquivoEditalWhereInput
    /**
     * Limit how many ArquivoEditals to update.
     */
    limit?: number
  }

  /**
   * ArquivoEdital updateManyAndReturn
   */
  export type ArquivoEditalUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoEdital
     */
    select?: ArquivoEditalSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoEdital
     */
    omit?: ArquivoEditalOmit<ExtArgs> | null
    /**
     * The data used to update ArquivoEditals.
     */
    data: XOR<ArquivoEditalUpdateManyMutationInput, ArquivoEditalUncheckedUpdateManyInput>
    /**
     * Filter which ArquivoEditals to update
     */
    where?: ArquivoEditalWhereInput
    /**
     * Limit how many ArquivoEditals to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoEditalIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ArquivoEdital upsert
   */
  export type ArquivoEditalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoEdital
     */
    select?: ArquivoEditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoEdital
     */
    omit?: ArquivoEditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoEditalInclude<ExtArgs> | null
    /**
     * The filter to search for the ArquivoEdital to update in case it exists.
     */
    where: ArquivoEditalWhereUniqueInput
    /**
     * In case the ArquivoEdital found by the `where` argument doesn't exist, create a new ArquivoEdital with this data.
     */
    create: XOR<ArquivoEditalCreateInput, ArquivoEditalUncheckedCreateInput>
    /**
     * In case the ArquivoEdital was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ArquivoEditalUpdateInput, ArquivoEditalUncheckedUpdateInput>
  }

  /**
   * ArquivoEdital delete
   */
  export type ArquivoEditalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoEdital
     */
    select?: ArquivoEditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoEdital
     */
    omit?: ArquivoEditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoEditalInclude<ExtArgs> | null
    /**
     * Filter which ArquivoEdital to delete.
     */
    where: ArquivoEditalWhereUniqueInput
  }

  /**
   * ArquivoEdital deleteMany
   */
  export type ArquivoEditalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ArquivoEditals to delete
     */
    where?: ArquivoEditalWhereInput
    /**
     * Limit how many ArquivoEditals to delete.
     */
    limit?: number
  }

  /**
   * ArquivoEdital.edital
   */
  export type ArquivoEdital$editalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Edital
     */
    select?: EditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Edital
     */
    omit?: EditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditalInclude<ExtArgs> | null
    where?: EditalWhereInput
  }

  /**
   * ArquivoEdital without action
   */
  export type ArquivoEditalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoEdital
     */
    select?: ArquivoEditalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoEdital
     */
    omit?: ArquivoEditalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoEditalInclude<ExtArgs> | null
  }


  /**
   * Model Formulario
   */

  export type AggregateFormulario = {
    _count: FormularioCountAggregateOutputType | null
    _min: FormularioMinAggregateOutputType | null
    _max: FormularioMaxAggregateOutputType | null
  }

  export type FormularioMinAggregateOutputType = {
    id: string | null
    titulo: string | null
    dataInicio: Date | null
    dataFim: Date | null
    editalId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FormularioMaxAggregateOutputType = {
    id: string | null
    titulo: string | null
    dataInicio: Date | null
    dataFim: Date | null
    editalId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FormularioCountAggregateOutputType = {
    id: number
    titulo: number
    dataInicio: number
    dataFim: number
    editalId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FormularioMinAggregateInputType = {
    id?: true
    titulo?: true
    dataInicio?: true
    dataFim?: true
    editalId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FormularioMaxAggregateInputType = {
    id?: true
    titulo?: true
    dataInicio?: true
    dataFim?: true
    editalId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FormularioCountAggregateInputType = {
    id?: true
    titulo?: true
    dataInicio?: true
    dataFim?: true
    editalId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FormularioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Formulario to aggregate.
     */
    where?: FormularioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Formularios to fetch.
     */
    orderBy?: FormularioOrderByWithRelationInput | FormularioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FormularioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Formularios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Formularios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Formularios
    **/
    _count?: true | FormularioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FormularioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FormularioMaxAggregateInputType
  }

  export type GetFormularioAggregateType<T extends FormularioAggregateArgs> = {
        [P in keyof T & keyof AggregateFormulario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFormulario[P]>
      : GetScalarType<T[P], AggregateFormulario[P]>
  }




  export type FormularioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FormularioWhereInput
    orderBy?: FormularioOrderByWithAggregationInput | FormularioOrderByWithAggregationInput[]
    by: FormularioScalarFieldEnum[] | FormularioScalarFieldEnum
    having?: FormularioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FormularioCountAggregateInputType | true
    _min?: FormularioMinAggregateInputType
    _max?: FormularioMaxAggregateInputType
  }

  export type FormularioGroupByOutputType = {
    id: string
    titulo: string
    dataInicio: Date
    dataFim: Date
    editalId: string
    createdAt: Date
    updatedAt: Date
    _count: FormularioCountAggregateOutputType | null
    _min: FormularioMinAggregateOutputType | null
    _max: FormularioMaxAggregateOutputType | null
  }

  type GetFormularioGroupByPayload<T extends FormularioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FormularioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FormularioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FormularioGroupByOutputType[P]>
            : GetScalarType<T[P], FormularioGroupByOutputType[P]>
        }
      >
    >


  export type FormularioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    editalId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    edital?: boolean | EditalDefaultArgs<ExtArgs>
    campos?: boolean | Formulario$camposArgs<ExtArgs>
    inscricoes?: boolean | Formulario$inscricoesArgs<ExtArgs>
    _count?: boolean | FormularioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["formulario"]>

  export type FormularioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    editalId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    edital?: boolean | EditalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["formulario"]>

  export type FormularioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    editalId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    edital?: boolean | EditalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["formulario"]>

  export type FormularioSelectScalar = {
    id?: boolean
    titulo?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    editalId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FormularioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "titulo" | "dataInicio" | "dataFim" | "editalId" | "createdAt" | "updatedAt", ExtArgs["result"]["formulario"]>
  export type FormularioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    edital?: boolean | EditalDefaultArgs<ExtArgs>
    campos?: boolean | Formulario$camposArgs<ExtArgs>
    inscricoes?: boolean | Formulario$inscricoesArgs<ExtArgs>
    _count?: boolean | FormularioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FormularioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    edital?: boolean | EditalDefaultArgs<ExtArgs>
  }
  export type FormularioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    edital?: boolean | EditalDefaultArgs<ExtArgs>
  }

  export type $FormularioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Formulario"
    objects: {
      edital: Prisma.$EditalPayload<ExtArgs>
      campos: Prisma.$CampoFormularioPayload<ExtArgs>[]
      inscricoes: Prisma.$FormularioUsuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      titulo: string
      dataInicio: Date
      dataFim: Date
      editalId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["formulario"]>
    composites: {}
  }

  type FormularioGetPayload<S extends boolean | null | undefined | FormularioDefaultArgs> = $Result.GetResult<Prisma.$FormularioPayload, S>

  type FormularioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FormularioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FormularioCountAggregateInputType | true
    }

  export interface FormularioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Formulario'], meta: { name: 'Formulario' } }
    /**
     * Find zero or one Formulario that matches the filter.
     * @param {FormularioFindUniqueArgs} args - Arguments to find a Formulario
     * @example
     * // Get one Formulario
     * const formulario = await prisma.formulario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FormularioFindUniqueArgs>(args: SelectSubset<T, FormularioFindUniqueArgs<ExtArgs>>): Prisma__FormularioClient<$Result.GetResult<Prisma.$FormularioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Formulario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FormularioFindUniqueOrThrowArgs} args - Arguments to find a Formulario
     * @example
     * // Get one Formulario
     * const formulario = await prisma.formulario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FormularioFindUniqueOrThrowArgs>(args: SelectSubset<T, FormularioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FormularioClient<$Result.GetResult<Prisma.$FormularioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Formulario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioFindFirstArgs} args - Arguments to find a Formulario
     * @example
     * // Get one Formulario
     * const formulario = await prisma.formulario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FormularioFindFirstArgs>(args?: SelectSubset<T, FormularioFindFirstArgs<ExtArgs>>): Prisma__FormularioClient<$Result.GetResult<Prisma.$FormularioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Formulario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioFindFirstOrThrowArgs} args - Arguments to find a Formulario
     * @example
     * // Get one Formulario
     * const formulario = await prisma.formulario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FormularioFindFirstOrThrowArgs>(args?: SelectSubset<T, FormularioFindFirstOrThrowArgs<ExtArgs>>): Prisma__FormularioClient<$Result.GetResult<Prisma.$FormularioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Formularios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Formularios
     * const formularios = await prisma.formulario.findMany()
     * 
     * // Get first 10 Formularios
     * const formularios = await prisma.formulario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const formularioWithIdOnly = await prisma.formulario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FormularioFindManyArgs>(args?: SelectSubset<T, FormularioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormularioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Formulario.
     * @param {FormularioCreateArgs} args - Arguments to create a Formulario.
     * @example
     * // Create one Formulario
     * const Formulario = await prisma.formulario.create({
     *   data: {
     *     // ... data to create a Formulario
     *   }
     * })
     * 
     */
    create<T extends FormularioCreateArgs>(args: SelectSubset<T, FormularioCreateArgs<ExtArgs>>): Prisma__FormularioClient<$Result.GetResult<Prisma.$FormularioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Formularios.
     * @param {FormularioCreateManyArgs} args - Arguments to create many Formularios.
     * @example
     * // Create many Formularios
     * const formulario = await prisma.formulario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FormularioCreateManyArgs>(args?: SelectSubset<T, FormularioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Formularios and returns the data saved in the database.
     * @param {FormularioCreateManyAndReturnArgs} args - Arguments to create many Formularios.
     * @example
     * // Create many Formularios
     * const formulario = await prisma.formulario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Formularios and only return the `id`
     * const formularioWithIdOnly = await prisma.formulario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FormularioCreateManyAndReturnArgs>(args?: SelectSubset<T, FormularioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormularioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Formulario.
     * @param {FormularioDeleteArgs} args - Arguments to delete one Formulario.
     * @example
     * // Delete one Formulario
     * const Formulario = await prisma.formulario.delete({
     *   where: {
     *     // ... filter to delete one Formulario
     *   }
     * })
     * 
     */
    delete<T extends FormularioDeleteArgs>(args: SelectSubset<T, FormularioDeleteArgs<ExtArgs>>): Prisma__FormularioClient<$Result.GetResult<Prisma.$FormularioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Formulario.
     * @param {FormularioUpdateArgs} args - Arguments to update one Formulario.
     * @example
     * // Update one Formulario
     * const formulario = await prisma.formulario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FormularioUpdateArgs>(args: SelectSubset<T, FormularioUpdateArgs<ExtArgs>>): Prisma__FormularioClient<$Result.GetResult<Prisma.$FormularioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Formularios.
     * @param {FormularioDeleteManyArgs} args - Arguments to filter Formularios to delete.
     * @example
     * // Delete a few Formularios
     * const { count } = await prisma.formulario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FormularioDeleteManyArgs>(args?: SelectSubset<T, FormularioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Formularios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Formularios
     * const formulario = await prisma.formulario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FormularioUpdateManyArgs>(args: SelectSubset<T, FormularioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Formularios and returns the data updated in the database.
     * @param {FormularioUpdateManyAndReturnArgs} args - Arguments to update many Formularios.
     * @example
     * // Update many Formularios
     * const formulario = await prisma.formulario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Formularios and only return the `id`
     * const formularioWithIdOnly = await prisma.formulario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FormularioUpdateManyAndReturnArgs>(args: SelectSubset<T, FormularioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormularioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Formulario.
     * @param {FormularioUpsertArgs} args - Arguments to update or create a Formulario.
     * @example
     * // Update or create a Formulario
     * const formulario = await prisma.formulario.upsert({
     *   create: {
     *     // ... data to create a Formulario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Formulario we want to update
     *   }
     * })
     */
    upsert<T extends FormularioUpsertArgs>(args: SelectSubset<T, FormularioUpsertArgs<ExtArgs>>): Prisma__FormularioClient<$Result.GetResult<Prisma.$FormularioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Formularios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioCountArgs} args - Arguments to filter Formularios to count.
     * @example
     * // Count the number of Formularios
     * const count = await prisma.formulario.count({
     *   where: {
     *     // ... the filter for the Formularios we want to count
     *   }
     * })
    **/
    count<T extends FormularioCountArgs>(
      args?: Subset<T, FormularioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FormularioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Formulario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FormularioAggregateArgs>(args: Subset<T, FormularioAggregateArgs>): Prisma.PrismaPromise<GetFormularioAggregateType<T>>

    /**
     * Group by Formulario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FormularioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FormularioGroupByArgs['orderBy'] }
        : { orderBy?: FormularioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FormularioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFormularioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Formulario model
   */
  readonly fields: FormularioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Formulario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FormularioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    edital<T extends EditalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EditalDefaultArgs<ExtArgs>>): Prisma__EditalClient<$Result.GetResult<Prisma.$EditalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    campos<T extends Formulario$camposArgs<ExtArgs> = {}>(args?: Subset<T, Formulario$camposArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampoFormularioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    inscricoes<T extends Formulario$inscricoesArgs<ExtArgs> = {}>(args?: Subset<T, Formulario$inscricoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormularioUsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Formulario model
   */
  interface FormularioFieldRefs {
    readonly id: FieldRef<"Formulario", 'String'>
    readonly titulo: FieldRef<"Formulario", 'String'>
    readonly dataInicio: FieldRef<"Formulario", 'DateTime'>
    readonly dataFim: FieldRef<"Formulario", 'DateTime'>
    readonly editalId: FieldRef<"Formulario", 'String'>
    readonly createdAt: FieldRef<"Formulario", 'DateTime'>
    readonly updatedAt: FieldRef<"Formulario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Formulario findUnique
   */
  export type FormularioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formulario
     */
    select?: FormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Formulario
     */
    omit?: FormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioInclude<ExtArgs> | null
    /**
     * Filter, which Formulario to fetch.
     */
    where: FormularioWhereUniqueInput
  }

  /**
   * Formulario findUniqueOrThrow
   */
  export type FormularioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formulario
     */
    select?: FormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Formulario
     */
    omit?: FormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioInclude<ExtArgs> | null
    /**
     * Filter, which Formulario to fetch.
     */
    where: FormularioWhereUniqueInput
  }

  /**
   * Formulario findFirst
   */
  export type FormularioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formulario
     */
    select?: FormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Formulario
     */
    omit?: FormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioInclude<ExtArgs> | null
    /**
     * Filter, which Formulario to fetch.
     */
    where?: FormularioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Formularios to fetch.
     */
    orderBy?: FormularioOrderByWithRelationInput | FormularioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Formularios.
     */
    cursor?: FormularioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Formularios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Formularios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Formularios.
     */
    distinct?: FormularioScalarFieldEnum | FormularioScalarFieldEnum[]
  }

  /**
   * Formulario findFirstOrThrow
   */
  export type FormularioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formulario
     */
    select?: FormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Formulario
     */
    omit?: FormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioInclude<ExtArgs> | null
    /**
     * Filter, which Formulario to fetch.
     */
    where?: FormularioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Formularios to fetch.
     */
    orderBy?: FormularioOrderByWithRelationInput | FormularioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Formularios.
     */
    cursor?: FormularioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Formularios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Formularios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Formularios.
     */
    distinct?: FormularioScalarFieldEnum | FormularioScalarFieldEnum[]
  }

  /**
   * Formulario findMany
   */
  export type FormularioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formulario
     */
    select?: FormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Formulario
     */
    omit?: FormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioInclude<ExtArgs> | null
    /**
     * Filter, which Formularios to fetch.
     */
    where?: FormularioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Formularios to fetch.
     */
    orderBy?: FormularioOrderByWithRelationInput | FormularioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Formularios.
     */
    cursor?: FormularioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Formularios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Formularios.
     */
    skip?: number
    distinct?: FormularioScalarFieldEnum | FormularioScalarFieldEnum[]
  }

  /**
   * Formulario create
   */
  export type FormularioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formulario
     */
    select?: FormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Formulario
     */
    omit?: FormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioInclude<ExtArgs> | null
    /**
     * The data needed to create a Formulario.
     */
    data: XOR<FormularioCreateInput, FormularioUncheckedCreateInput>
  }

  /**
   * Formulario createMany
   */
  export type FormularioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Formularios.
     */
    data: FormularioCreateManyInput | FormularioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Formulario createManyAndReturn
   */
  export type FormularioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formulario
     */
    select?: FormularioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Formulario
     */
    omit?: FormularioOmit<ExtArgs> | null
    /**
     * The data used to create many Formularios.
     */
    data: FormularioCreateManyInput | FormularioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Formulario update
   */
  export type FormularioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formulario
     */
    select?: FormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Formulario
     */
    omit?: FormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioInclude<ExtArgs> | null
    /**
     * The data needed to update a Formulario.
     */
    data: XOR<FormularioUpdateInput, FormularioUncheckedUpdateInput>
    /**
     * Choose, which Formulario to update.
     */
    where: FormularioWhereUniqueInput
  }

  /**
   * Formulario updateMany
   */
  export type FormularioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Formularios.
     */
    data: XOR<FormularioUpdateManyMutationInput, FormularioUncheckedUpdateManyInput>
    /**
     * Filter which Formularios to update
     */
    where?: FormularioWhereInput
    /**
     * Limit how many Formularios to update.
     */
    limit?: number
  }

  /**
   * Formulario updateManyAndReturn
   */
  export type FormularioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formulario
     */
    select?: FormularioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Formulario
     */
    omit?: FormularioOmit<ExtArgs> | null
    /**
     * The data used to update Formularios.
     */
    data: XOR<FormularioUpdateManyMutationInput, FormularioUncheckedUpdateManyInput>
    /**
     * Filter which Formularios to update
     */
    where?: FormularioWhereInput
    /**
     * Limit how many Formularios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Formulario upsert
   */
  export type FormularioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formulario
     */
    select?: FormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Formulario
     */
    omit?: FormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioInclude<ExtArgs> | null
    /**
     * The filter to search for the Formulario to update in case it exists.
     */
    where: FormularioWhereUniqueInput
    /**
     * In case the Formulario found by the `where` argument doesn't exist, create a new Formulario with this data.
     */
    create: XOR<FormularioCreateInput, FormularioUncheckedCreateInput>
    /**
     * In case the Formulario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FormularioUpdateInput, FormularioUncheckedUpdateInput>
  }

  /**
   * Formulario delete
   */
  export type FormularioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formulario
     */
    select?: FormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Formulario
     */
    omit?: FormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioInclude<ExtArgs> | null
    /**
     * Filter which Formulario to delete.
     */
    where: FormularioWhereUniqueInput
  }

  /**
   * Formulario deleteMany
   */
  export type FormularioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Formularios to delete
     */
    where?: FormularioWhereInput
    /**
     * Limit how many Formularios to delete.
     */
    limit?: number
  }

  /**
   * Formulario.campos
   */
  export type Formulario$camposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampoFormulario
     */
    select?: CampoFormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CampoFormulario
     */
    omit?: CampoFormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampoFormularioInclude<ExtArgs> | null
    where?: CampoFormularioWhereInput
    orderBy?: CampoFormularioOrderByWithRelationInput | CampoFormularioOrderByWithRelationInput[]
    cursor?: CampoFormularioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CampoFormularioScalarFieldEnum | CampoFormularioScalarFieldEnum[]
  }

  /**
   * Formulario.inscricoes
   */
  export type Formulario$inscricoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuario
     */
    select?: FormularioUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuario
     */
    omit?: FormularioUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioInclude<ExtArgs> | null
    where?: FormularioUsuarioWhereInput
    orderBy?: FormularioUsuarioOrderByWithRelationInput | FormularioUsuarioOrderByWithRelationInput[]
    cursor?: FormularioUsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FormularioUsuarioScalarFieldEnum | FormularioUsuarioScalarFieldEnum[]
  }

  /**
   * Formulario without action
   */
  export type FormularioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Formulario
     */
    select?: FormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Formulario
     */
    omit?: FormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioInclude<ExtArgs> | null
  }


  /**
   * Model CampoFormulario
   */

  export type AggregateCampoFormulario = {
    _count: CampoFormularioCountAggregateOutputType | null
    _avg: CampoFormularioAvgAggregateOutputType | null
    _sum: CampoFormularioSumAggregateOutputType | null
    _min: CampoFormularioMinAggregateOutputType | null
    _max: CampoFormularioMaxAggregateOutputType | null
  }

  export type CampoFormularioAvgAggregateOutputType = {
    tipo: number | null
    obrigatorio: number | null
  }

  export type CampoFormularioSumAggregateOutputType = {
    tipo: number | null
    obrigatorio: number | null
  }

  export type CampoFormularioMinAggregateOutputType = {
    id: string | null
    rotulo: string | null
    tipo: number | null
    obrigatorio: number | null
    formularioId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CampoFormularioMaxAggregateOutputType = {
    id: string | null
    rotulo: string | null
    tipo: number | null
    obrigatorio: number | null
    formularioId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CampoFormularioCountAggregateOutputType = {
    id: number
    rotulo: number
    tipo: number
    obrigatorio: number
    formularioId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CampoFormularioAvgAggregateInputType = {
    tipo?: true
    obrigatorio?: true
  }

  export type CampoFormularioSumAggregateInputType = {
    tipo?: true
    obrigatorio?: true
  }

  export type CampoFormularioMinAggregateInputType = {
    id?: true
    rotulo?: true
    tipo?: true
    obrigatorio?: true
    formularioId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CampoFormularioMaxAggregateInputType = {
    id?: true
    rotulo?: true
    tipo?: true
    obrigatorio?: true
    formularioId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CampoFormularioCountAggregateInputType = {
    id?: true
    rotulo?: true
    tipo?: true
    obrigatorio?: true
    formularioId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CampoFormularioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CampoFormulario to aggregate.
     */
    where?: CampoFormularioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CampoFormularios to fetch.
     */
    orderBy?: CampoFormularioOrderByWithRelationInput | CampoFormularioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CampoFormularioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CampoFormularios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CampoFormularios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CampoFormularios
    **/
    _count?: true | CampoFormularioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CampoFormularioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CampoFormularioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CampoFormularioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CampoFormularioMaxAggregateInputType
  }

  export type GetCampoFormularioAggregateType<T extends CampoFormularioAggregateArgs> = {
        [P in keyof T & keyof AggregateCampoFormulario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCampoFormulario[P]>
      : GetScalarType<T[P], AggregateCampoFormulario[P]>
  }




  export type CampoFormularioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CampoFormularioWhereInput
    orderBy?: CampoFormularioOrderByWithAggregationInput | CampoFormularioOrderByWithAggregationInput[]
    by: CampoFormularioScalarFieldEnum[] | CampoFormularioScalarFieldEnum
    having?: CampoFormularioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CampoFormularioCountAggregateInputType | true
    _avg?: CampoFormularioAvgAggregateInputType
    _sum?: CampoFormularioSumAggregateInputType
    _min?: CampoFormularioMinAggregateInputType
    _max?: CampoFormularioMaxAggregateInputType
  }

  export type CampoFormularioGroupByOutputType = {
    id: string
    rotulo: string
    tipo: number
    obrigatorio: number
    formularioId: string
    createdAt: Date
    updatedAt: Date
    _count: CampoFormularioCountAggregateOutputType | null
    _avg: CampoFormularioAvgAggregateOutputType | null
    _sum: CampoFormularioSumAggregateOutputType | null
    _min: CampoFormularioMinAggregateOutputType | null
    _max: CampoFormularioMaxAggregateOutputType | null
  }

  type GetCampoFormularioGroupByPayload<T extends CampoFormularioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CampoFormularioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CampoFormularioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CampoFormularioGroupByOutputType[P]>
            : GetScalarType<T[P], CampoFormularioGroupByOutputType[P]>
        }
      >
    >


  export type CampoFormularioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rotulo?: boolean
    tipo?: boolean
    obrigatorio?: boolean
    formularioId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    formulario?: boolean | FormularioDefaultArgs<ExtArgs>
    respostas?: boolean | CampoFormulario$respostasArgs<ExtArgs>
    _count?: boolean | CampoFormularioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["campoFormulario"]>

  export type CampoFormularioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rotulo?: boolean
    tipo?: boolean
    obrigatorio?: boolean
    formularioId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    formulario?: boolean | FormularioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["campoFormulario"]>

  export type CampoFormularioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rotulo?: boolean
    tipo?: boolean
    obrigatorio?: boolean
    formularioId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    formulario?: boolean | FormularioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["campoFormulario"]>

  export type CampoFormularioSelectScalar = {
    id?: boolean
    rotulo?: boolean
    tipo?: boolean
    obrigatorio?: boolean
    formularioId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CampoFormularioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "rotulo" | "tipo" | "obrigatorio" | "formularioId" | "createdAt" | "updatedAt", ExtArgs["result"]["campoFormulario"]>
  export type CampoFormularioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    formulario?: boolean | FormularioDefaultArgs<ExtArgs>
    respostas?: boolean | CampoFormulario$respostasArgs<ExtArgs>
    _count?: boolean | CampoFormularioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CampoFormularioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    formulario?: boolean | FormularioDefaultArgs<ExtArgs>
  }
  export type CampoFormularioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    formulario?: boolean | FormularioDefaultArgs<ExtArgs>
  }

  export type $CampoFormularioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CampoFormulario"
    objects: {
      formulario: Prisma.$FormularioPayload<ExtArgs>
      respostas: Prisma.$FormularioUsuarioCampoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      rotulo: string
      tipo: number
      obrigatorio: number
      formularioId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["campoFormulario"]>
    composites: {}
  }

  type CampoFormularioGetPayload<S extends boolean | null | undefined | CampoFormularioDefaultArgs> = $Result.GetResult<Prisma.$CampoFormularioPayload, S>

  type CampoFormularioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CampoFormularioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CampoFormularioCountAggregateInputType | true
    }

  export interface CampoFormularioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CampoFormulario'], meta: { name: 'CampoFormulario' } }
    /**
     * Find zero or one CampoFormulario that matches the filter.
     * @param {CampoFormularioFindUniqueArgs} args - Arguments to find a CampoFormulario
     * @example
     * // Get one CampoFormulario
     * const campoFormulario = await prisma.campoFormulario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CampoFormularioFindUniqueArgs>(args: SelectSubset<T, CampoFormularioFindUniqueArgs<ExtArgs>>): Prisma__CampoFormularioClient<$Result.GetResult<Prisma.$CampoFormularioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CampoFormulario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CampoFormularioFindUniqueOrThrowArgs} args - Arguments to find a CampoFormulario
     * @example
     * // Get one CampoFormulario
     * const campoFormulario = await prisma.campoFormulario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CampoFormularioFindUniqueOrThrowArgs>(args: SelectSubset<T, CampoFormularioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CampoFormularioClient<$Result.GetResult<Prisma.$CampoFormularioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CampoFormulario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampoFormularioFindFirstArgs} args - Arguments to find a CampoFormulario
     * @example
     * // Get one CampoFormulario
     * const campoFormulario = await prisma.campoFormulario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CampoFormularioFindFirstArgs>(args?: SelectSubset<T, CampoFormularioFindFirstArgs<ExtArgs>>): Prisma__CampoFormularioClient<$Result.GetResult<Prisma.$CampoFormularioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CampoFormulario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampoFormularioFindFirstOrThrowArgs} args - Arguments to find a CampoFormulario
     * @example
     * // Get one CampoFormulario
     * const campoFormulario = await prisma.campoFormulario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CampoFormularioFindFirstOrThrowArgs>(args?: SelectSubset<T, CampoFormularioFindFirstOrThrowArgs<ExtArgs>>): Prisma__CampoFormularioClient<$Result.GetResult<Prisma.$CampoFormularioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CampoFormularios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampoFormularioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CampoFormularios
     * const campoFormularios = await prisma.campoFormulario.findMany()
     * 
     * // Get first 10 CampoFormularios
     * const campoFormularios = await prisma.campoFormulario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const campoFormularioWithIdOnly = await prisma.campoFormulario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CampoFormularioFindManyArgs>(args?: SelectSubset<T, CampoFormularioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampoFormularioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CampoFormulario.
     * @param {CampoFormularioCreateArgs} args - Arguments to create a CampoFormulario.
     * @example
     * // Create one CampoFormulario
     * const CampoFormulario = await prisma.campoFormulario.create({
     *   data: {
     *     // ... data to create a CampoFormulario
     *   }
     * })
     * 
     */
    create<T extends CampoFormularioCreateArgs>(args: SelectSubset<T, CampoFormularioCreateArgs<ExtArgs>>): Prisma__CampoFormularioClient<$Result.GetResult<Prisma.$CampoFormularioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CampoFormularios.
     * @param {CampoFormularioCreateManyArgs} args - Arguments to create many CampoFormularios.
     * @example
     * // Create many CampoFormularios
     * const campoFormulario = await prisma.campoFormulario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CampoFormularioCreateManyArgs>(args?: SelectSubset<T, CampoFormularioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CampoFormularios and returns the data saved in the database.
     * @param {CampoFormularioCreateManyAndReturnArgs} args - Arguments to create many CampoFormularios.
     * @example
     * // Create many CampoFormularios
     * const campoFormulario = await prisma.campoFormulario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CampoFormularios and only return the `id`
     * const campoFormularioWithIdOnly = await prisma.campoFormulario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CampoFormularioCreateManyAndReturnArgs>(args?: SelectSubset<T, CampoFormularioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampoFormularioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CampoFormulario.
     * @param {CampoFormularioDeleteArgs} args - Arguments to delete one CampoFormulario.
     * @example
     * // Delete one CampoFormulario
     * const CampoFormulario = await prisma.campoFormulario.delete({
     *   where: {
     *     // ... filter to delete one CampoFormulario
     *   }
     * })
     * 
     */
    delete<T extends CampoFormularioDeleteArgs>(args: SelectSubset<T, CampoFormularioDeleteArgs<ExtArgs>>): Prisma__CampoFormularioClient<$Result.GetResult<Prisma.$CampoFormularioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CampoFormulario.
     * @param {CampoFormularioUpdateArgs} args - Arguments to update one CampoFormulario.
     * @example
     * // Update one CampoFormulario
     * const campoFormulario = await prisma.campoFormulario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CampoFormularioUpdateArgs>(args: SelectSubset<T, CampoFormularioUpdateArgs<ExtArgs>>): Prisma__CampoFormularioClient<$Result.GetResult<Prisma.$CampoFormularioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CampoFormularios.
     * @param {CampoFormularioDeleteManyArgs} args - Arguments to filter CampoFormularios to delete.
     * @example
     * // Delete a few CampoFormularios
     * const { count } = await prisma.campoFormulario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CampoFormularioDeleteManyArgs>(args?: SelectSubset<T, CampoFormularioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CampoFormularios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampoFormularioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CampoFormularios
     * const campoFormulario = await prisma.campoFormulario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CampoFormularioUpdateManyArgs>(args: SelectSubset<T, CampoFormularioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CampoFormularios and returns the data updated in the database.
     * @param {CampoFormularioUpdateManyAndReturnArgs} args - Arguments to update many CampoFormularios.
     * @example
     * // Update many CampoFormularios
     * const campoFormulario = await prisma.campoFormulario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CampoFormularios and only return the `id`
     * const campoFormularioWithIdOnly = await prisma.campoFormulario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CampoFormularioUpdateManyAndReturnArgs>(args: SelectSubset<T, CampoFormularioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampoFormularioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CampoFormulario.
     * @param {CampoFormularioUpsertArgs} args - Arguments to update or create a CampoFormulario.
     * @example
     * // Update or create a CampoFormulario
     * const campoFormulario = await prisma.campoFormulario.upsert({
     *   create: {
     *     // ... data to create a CampoFormulario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CampoFormulario we want to update
     *   }
     * })
     */
    upsert<T extends CampoFormularioUpsertArgs>(args: SelectSubset<T, CampoFormularioUpsertArgs<ExtArgs>>): Prisma__CampoFormularioClient<$Result.GetResult<Prisma.$CampoFormularioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CampoFormularios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampoFormularioCountArgs} args - Arguments to filter CampoFormularios to count.
     * @example
     * // Count the number of CampoFormularios
     * const count = await prisma.campoFormulario.count({
     *   where: {
     *     // ... the filter for the CampoFormularios we want to count
     *   }
     * })
    **/
    count<T extends CampoFormularioCountArgs>(
      args?: Subset<T, CampoFormularioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CampoFormularioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CampoFormulario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampoFormularioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CampoFormularioAggregateArgs>(args: Subset<T, CampoFormularioAggregateArgs>): Prisma.PrismaPromise<GetCampoFormularioAggregateType<T>>

    /**
     * Group by CampoFormulario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampoFormularioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CampoFormularioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CampoFormularioGroupByArgs['orderBy'] }
        : { orderBy?: CampoFormularioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CampoFormularioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCampoFormularioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CampoFormulario model
   */
  readonly fields: CampoFormularioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CampoFormulario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CampoFormularioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    formulario<T extends FormularioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FormularioDefaultArgs<ExtArgs>>): Prisma__FormularioClient<$Result.GetResult<Prisma.$FormularioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    respostas<T extends CampoFormulario$respostasArgs<ExtArgs> = {}>(args?: Subset<T, CampoFormulario$respostasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormularioUsuarioCampoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CampoFormulario model
   */
  interface CampoFormularioFieldRefs {
    readonly id: FieldRef<"CampoFormulario", 'String'>
    readonly rotulo: FieldRef<"CampoFormulario", 'String'>
    readonly tipo: FieldRef<"CampoFormulario", 'Int'>
    readonly obrigatorio: FieldRef<"CampoFormulario", 'Int'>
    readonly formularioId: FieldRef<"CampoFormulario", 'String'>
    readonly createdAt: FieldRef<"CampoFormulario", 'DateTime'>
    readonly updatedAt: FieldRef<"CampoFormulario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CampoFormulario findUnique
   */
  export type CampoFormularioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampoFormulario
     */
    select?: CampoFormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CampoFormulario
     */
    omit?: CampoFormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampoFormularioInclude<ExtArgs> | null
    /**
     * Filter, which CampoFormulario to fetch.
     */
    where: CampoFormularioWhereUniqueInput
  }

  /**
   * CampoFormulario findUniqueOrThrow
   */
  export type CampoFormularioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampoFormulario
     */
    select?: CampoFormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CampoFormulario
     */
    omit?: CampoFormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampoFormularioInclude<ExtArgs> | null
    /**
     * Filter, which CampoFormulario to fetch.
     */
    where: CampoFormularioWhereUniqueInput
  }

  /**
   * CampoFormulario findFirst
   */
  export type CampoFormularioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampoFormulario
     */
    select?: CampoFormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CampoFormulario
     */
    omit?: CampoFormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampoFormularioInclude<ExtArgs> | null
    /**
     * Filter, which CampoFormulario to fetch.
     */
    where?: CampoFormularioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CampoFormularios to fetch.
     */
    orderBy?: CampoFormularioOrderByWithRelationInput | CampoFormularioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CampoFormularios.
     */
    cursor?: CampoFormularioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CampoFormularios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CampoFormularios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CampoFormularios.
     */
    distinct?: CampoFormularioScalarFieldEnum | CampoFormularioScalarFieldEnum[]
  }

  /**
   * CampoFormulario findFirstOrThrow
   */
  export type CampoFormularioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampoFormulario
     */
    select?: CampoFormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CampoFormulario
     */
    omit?: CampoFormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampoFormularioInclude<ExtArgs> | null
    /**
     * Filter, which CampoFormulario to fetch.
     */
    where?: CampoFormularioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CampoFormularios to fetch.
     */
    orderBy?: CampoFormularioOrderByWithRelationInput | CampoFormularioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CampoFormularios.
     */
    cursor?: CampoFormularioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CampoFormularios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CampoFormularios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CampoFormularios.
     */
    distinct?: CampoFormularioScalarFieldEnum | CampoFormularioScalarFieldEnum[]
  }

  /**
   * CampoFormulario findMany
   */
  export type CampoFormularioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampoFormulario
     */
    select?: CampoFormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CampoFormulario
     */
    omit?: CampoFormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampoFormularioInclude<ExtArgs> | null
    /**
     * Filter, which CampoFormularios to fetch.
     */
    where?: CampoFormularioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CampoFormularios to fetch.
     */
    orderBy?: CampoFormularioOrderByWithRelationInput | CampoFormularioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CampoFormularios.
     */
    cursor?: CampoFormularioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CampoFormularios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CampoFormularios.
     */
    skip?: number
    distinct?: CampoFormularioScalarFieldEnum | CampoFormularioScalarFieldEnum[]
  }

  /**
   * CampoFormulario create
   */
  export type CampoFormularioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampoFormulario
     */
    select?: CampoFormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CampoFormulario
     */
    omit?: CampoFormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampoFormularioInclude<ExtArgs> | null
    /**
     * The data needed to create a CampoFormulario.
     */
    data: XOR<CampoFormularioCreateInput, CampoFormularioUncheckedCreateInput>
  }

  /**
   * CampoFormulario createMany
   */
  export type CampoFormularioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CampoFormularios.
     */
    data: CampoFormularioCreateManyInput | CampoFormularioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CampoFormulario createManyAndReturn
   */
  export type CampoFormularioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampoFormulario
     */
    select?: CampoFormularioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CampoFormulario
     */
    omit?: CampoFormularioOmit<ExtArgs> | null
    /**
     * The data used to create many CampoFormularios.
     */
    data: CampoFormularioCreateManyInput | CampoFormularioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampoFormularioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CampoFormulario update
   */
  export type CampoFormularioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampoFormulario
     */
    select?: CampoFormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CampoFormulario
     */
    omit?: CampoFormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampoFormularioInclude<ExtArgs> | null
    /**
     * The data needed to update a CampoFormulario.
     */
    data: XOR<CampoFormularioUpdateInput, CampoFormularioUncheckedUpdateInput>
    /**
     * Choose, which CampoFormulario to update.
     */
    where: CampoFormularioWhereUniqueInput
  }

  /**
   * CampoFormulario updateMany
   */
  export type CampoFormularioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CampoFormularios.
     */
    data: XOR<CampoFormularioUpdateManyMutationInput, CampoFormularioUncheckedUpdateManyInput>
    /**
     * Filter which CampoFormularios to update
     */
    where?: CampoFormularioWhereInput
    /**
     * Limit how many CampoFormularios to update.
     */
    limit?: number
  }

  /**
   * CampoFormulario updateManyAndReturn
   */
  export type CampoFormularioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampoFormulario
     */
    select?: CampoFormularioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CampoFormulario
     */
    omit?: CampoFormularioOmit<ExtArgs> | null
    /**
     * The data used to update CampoFormularios.
     */
    data: XOR<CampoFormularioUpdateManyMutationInput, CampoFormularioUncheckedUpdateManyInput>
    /**
     * Filter which CampoFormularios to update
     */
    where?: CampoFormularioWhereInput
    /**
     * Limit how many CampoFormularios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampoFormularioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CampoFormulario upsert
   */
  export type CampoFormularioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampoFormulario
     */
    select?: CampoFormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CampoFormulario
     */
    omit?: CampoFormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampoFormularioInclude<ExtArgs> | null
    /**
     * The filter to search for the CampoFormulario to update in case it exists.
     */
    where: CampoFormularioWhereUniqueInput
    /**
     * In case the CampoFormulario found by the `where` argument doesn't exist, create a new CampoFormulario with this data.
     */
    create: XOR<CampoFormularioCreateInput, CampoFormularioUncheckedCreateInput>
    /**
     * In case the CampoFormulario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CampoFormularioUpdateInput, CampoFormularioUncheckedUpdateInput>
  }

  /**
   * CampoFormulario delete
   */
  export type CampoFormularioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampoFormulario
     */
    select?: CampoFormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CampoFormulario
     */
    omit?: CampoFormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampoFormularioInclude<ExtArgs> | null
    /**
     * Filter which CampoFormulario to delete.
     */
    where: CampoFormularioWhereUniqueInput
  }

  /**
   * CampoFormulario deleteMany
   */
  export type CampoFormularioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CampoFormularios to delete
     */
    where?: CampoFormularioWhereInput
    /**
     * Limit how many CampoFormularios to delete.
     */
    limit?: number
  }

  /**
   * CampoFormulario.respostas
   */
  export type CampoFormulario$respostasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuarioCampo
     */
    select?: FormularioUsuarioCampoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuarioCampo
     */
    omit?: FormularioUsuarioCampoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioCampoInclude<ExtArgs> | null
    where?: FormularioUsuarioCampoWhereInput
    orderBy?: FormularioUsuarioCampoOrderByWithRelationInput | FormularioUsuarioCampoOrderByWithRelationInput[]
    cursor?: FormularioUsuarioCampoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FormularioUsuarioCampoScalarFieldEnum | FormularioUsuarioCampoScalarFieldEnum[]
  }

  /**
   * CampoFormulario without action
   */
  export type CampoFormularioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampoFormulario
     */
    select?: CampoFormularioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CampoFormulario
     */
    omit?: CampoFormularioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampoFormularioInclude<ExtArgs> | null
  }


  /**
   * Model FormularioUsuario
   */

  export type AggregateFormularioUsuario = {
    _count: FormularioUsuarioCountAggregateOutputType | null
    _min: FormularioUsuarioMinAggregateOutputType | null
    _max: FormularioUsuarioMaxAggregateOutputType | null
  }

  export type FormularioUsuarioMinAggregateOutputType = {
    id: string | null
    dataHora: Date | null
    usuarioId: string | null
    formularioId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FormularioUsuarioMaxAggregateOutputType = {
    id: string | null
    dataHora: Date | null
    usuarioId: string | null
    formularioId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FormularioUsuarioCountAggregateOutputType = {
    id: number
    dataHora: number
    usuarioId: number
    formularioId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FormularioUsuarioMinAggregateInputType = {
    id?: true
    dataHora?: true
    usuarioId?: true
    formularioId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FormularioUsuarioMaxAggregateInputType = {
    id?: true
    dataHora?: true
    usuarioId?: true
    formularioId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FormularioUsuarioCountAggregateInputType = {
    id?: true
    dataHora?: true
    usuarioId?: true
    formularioId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FormularioUsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FormularioUsuario to aggregate.
     */
    where?: FormularioUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FormularioUsuarios to fetch.
     */
    orderBy?: FormularioUsuarioOrderByWithRelationInput | FormularioUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FormularioUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FormularioUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FormularioUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FormularioUsuarios
    **/
    _count?: true | FormularioUsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FormularioUsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FormularioUsuarioMaxAggregateInputType
  }

  export type GetFormularioUsuarioAggregateType<T extends FormularioUsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateFormularioUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFormularioUsuario[P]>
      : GetScalarType<T[P], AggregateFormularioUsuario[P]>
  }




  export type FormularioUsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FormularioUsuarioWhereInput
    orderBy?: FormularioUsuarioOrderByWithAggregationInput | FormularioUsuarioOrderByWithAggregationInput[]
    by: FormularioUsuarioScalarFieldEnum[] | FormularioUsuarioScalarFieldEnum
    having?: FormularioUsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FormularioUsuarioCountAggregateInputType | true
    _min?: FormularioUsuarioMinAggregateInputType
    _max?: FormularioUsuarioMaxAggregateInputType
  }

  export type FormularioUsuarioGroupByOutputType = {
    id: string
    dataHora: Date
    usuarioId: string
    formularioId: string
    createdAt: Date
    updatedAt: Date
    _count: FormularioUsuarioCountAggregateOutputType | null
    _min: FormularioUsuarioMinAggregateOutputType | null
    _max: FormularioUsuarioMaxAggregateOutputType | null
  }

  type GetFormularioUsuarioGroupByPayload<T extends FormularioUsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FormularioUsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FormularioUsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FormularioUsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], FormularioUsuarioGroupByOutputType[P]>
        }
      >
    >


  export type FormularioUsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataHora?: boolean
    usuarioId?: boolean
    formularioId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    formulario?: boolean | FormularioDefaultArgs<ExtArgs>
    campos?: boolean | FormularioUsuario$camposArgs<ExtArgs>
    arquivos?: boolean | FormularioUsuario$arquivosArgs<ExtArgs>
    _count?: boolean | FormularioUsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["formularioUsuario"]>

  export type FormularioUsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataHora?: boolean
    usuarioId?: boolean
    formularioId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    formulario?: boolean | FormularioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["formularioUsuario"]>

  export type FormularioUsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataHora?: boolean
    usuarioId?: boolean
    formularioId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    formulario?: boolean | FormularioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["formularioUsuario"]>

  export type FormularioUsuarioSelectScalar = {
    id?: boolean
    dataHora?: boolean
    usuarioId?: boolean
    formularioId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FormularioUsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "dataHora" | "usuarioId" | "formularioId" | "createdAt" | "updatedAt", ExtArgs["result"]["formularioUsuario"]>
  export type FormularioUsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    formulario?: boolean | FormularioDefaultArgs<ExtArgs>
    campos?: boolean | FormularioUsuario$camposArgs<ExtArgs>
    arquivos?: boolean | FormularioUsuario$arquivosArgs<ExtArgs>
    _count?: boolean | FormularioUsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FormularioUsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    formulario?: boolean | FormularioDefaultArgs<ExtArgs>
  }
  export type FormularioUsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    formulario?: boolean | FormularioDefaultArgs<ExtArgs>
  }

  export type $FormularioUsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FormularioUsuario"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      formulario: Prisma.$FormularioPayload<ExtArgs>
      campos: Prisma.$FormularioUsuarioCampoPayload<ExtArgs>[]
      arquivos: Prisma.$ArquivoUsuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      dataHora: Date
      usuarioId: string
      formularioId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["formularioUsuario"]>
    composites: {}
  }

  type FormularioUsuarioGetPayload<S extends boolean | null | undefined | FormularioUsuarioDefaultArgs> = $Result.GetResult<Prisma.$FormularioUsuarioPayload, S>

  type FormularioUsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FormularioUsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FormularioUsuarioCountAggregateInputType | true
    }

  export interface FormularioUsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FormularioUsuario'], meta: { name: 'FormularioUsuario' } }
    /**
     * Find zero or one FormularioUsuario that matches the filter.
     * @param {FormularioUsuarioFindUniqueArgs} args - Arguments to find a FormularioUsuario
     * @example
     * // Get one FormularioUsuario
     * const formularioUsuario = await prisma.formularioUsuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FormularioUsuarioFindUniqueArgs>(args: SelectSubset<T, FormularioUsuarioFindUniqueArgs<ExtArgs>>): Prisma__FormularioUsuarioClient<$Result.GetResult<Prisma.$FormularioUsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FormularioUsuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FormularioUsuarioFindUniqueOrThrowArgs} args - Arguments to find a FormularioUsuario
     * @example
     * // Get one FormularioUsuario
     * const formularioUsuario = await prisma.formularioUsuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FormularioUsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, FormularioUsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FormularioUsuarioClient<$Result.GetResult<Prisma.$FormularioUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FormularioUsuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioUsuarioFindFirstArgs} args - Arguments to find a FormularioUsuario
     * @example
     * // Get one FormularioUsuario
     * const formularioUsuario = await prisma.formularioUsuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FormularioUsuarioFindFirstArgs>(args?: SelectSubset<T, FormularioUsuarioFindFirstArgs<ExtArgs>>): Prisma__FormularioUsuarioClient<$Result.GetResult<Prisma.$FormularioUsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FormularioUsuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioUsuarioFindFirstOrThrowArgs} args - Arguments to find a FormularioUsuario
     * @example
     * // Get one FormularioUsuario
     * const formularioUsuario = await prisma.formularioUsuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FormularioUsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, FormularioUsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__FormularioUsuarioClient<$Result.GetResult<Prisma.$FormularioUsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FormularioUsuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioUsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FormularioUsuarios
     * const formularioUsuarios = await prisma.formularioUsuario.findMany()
     * 
     * // Get first 10 FormularioUsuarios
     * const formularioUsuarios = await prisma.formularioUsuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const formularioUsuarioWithIdOnly = await prisma.formularioUsuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FormularioUsuarioFindManyArgs>(args?: SelectSubset<T, FormularioUsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormularioUsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FormularioUsuario.
     * @param {FormularioUsuarioCreateArgs} args - Arguments to create a FormularioUsuario.
     * @example
     * // Create one FormularioUsuario
     * const FormularioUsuario = await prisma.formularioUsuario.create({
     *   data: {
     *     // ... data to create a FormularioUsuario
     *   }
     * })
     * 
     */
    create<T extends FormularioUsuarioCreateArgs>(args: SelectSubset<T, FormularioUsuarioCreateArgs<ExtArgs>>): Prisma__FormularioUsuarioClient<$Result.GetResult<Prisma.$FormularioUsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FormularioUsuarios.
     * @param {FormularioUsuarioCreateManyArgs} args - Arguments to create many FormularioUsuarios.
     * @example
     * // Create many FormularioUsuarios
     * const formularioUsuario = await prisma.formularioUsuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FormularioUsuarioCreateManyArgs>(args?: SelectSubset<T, FormularioUsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FormularioUsuarios and returns the data saved in the database.
     * @param {FormularioUsuarioCreateManyAndReturnArgs} args - Arguments to create many FormularioUsuarios.
     * @example
     * // Create many FormularioUsuarios
     * const formularioUsuario = await prisma.formularioUsuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FormularioUsuarios and only return the `id`
     * const formularioUsuarioWithIdOnly = await prisma.formularioUsuario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FormularioUsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, FormularioUsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormularioUsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FormularioUsuario.
     * @param {FormularioUsuarioDeleteArgs} args - Arguments to delete one FormularioUsuario.
     * @example
     * // Delete one FormularioUsuario
     * const FormularioUsuario = await prisma.formularioUsuario.delete({
     *   where: {
     *     // ... filter to delete one FormularioUsuario
     *   }
     * })
     * 
     */
    delete<T extends FormularioUsuarioDeleteArgs>(args: SelectSubset<T, FormularioUsuarioDeleteArgs<ExtArgs>>): Prisma__FormularioUsuarioClient<$Result.GetResult<Prisma.$FormularioUsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FormularioUsuario.
     * @param {FormularioUsuarioUpdateArgs} args - Arguments to update one FormularioUsuario.
     * @example
     * // Update one FormularioUsuario
     * const formularioUsuario = await prisma.formularioUsuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FormularioUsuarioUpdateArgs>(args: SelectSubset<T, FormularioUsuarioUpdateArgs<ExtArgs>>): Prisma__FormularioUsuarioClient<$Result.GetResult<Prisma.$FormularioUsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FormularioUsuarios.
     * @param {FormularioUsuarioDeleteManyArgs} args - Arguments to filter FormularioUsuarios to delete.
     * @example
     * // Delete a few FormularioUsuarios
     * const { count } = await prisma.formularioUsuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FormularioUsuarioDeleteManyArgs>(args?: SelectSubset<T, FormularioUsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FormularioUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioUsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FormularioUsuarios
     * const formularioUsuario = await prisma.formularioUsuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FormularioUsuarioUpdateManyArgs>(args: SelectSubset<T, FormularioUsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FormularioUsuarios and returns the data updated in the database.
     * @param {FormularioUsuarioUpdateManyAndReturnArgs} args - Arguments to update many FormularioUsuarios.
     * @example
     * // Update many FormularioUsuarios
     * const formularioUsuario = await prisma.formularioUsuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FormularioUsuarios and only return the `id`
     * const formularioUsuarioWithIdOnly = await prisma.formularioUsuario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FormularioUsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, FormularioUsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormularioUsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FormularioUsuario.
     * @param {FormularioUsuarioUpsertArgs} args - Arguments to update or create a FormularioUsuario.
     * @example
     * // Update or create a FormularioUsuario
     * const formularioUsuario = await prisma.formularioUsuario.upsert({
     *   create: {
     *     // ... data to create a FormularioUsuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FormularioUsuario we want to update
     *   }
     * })
     */
    upsert<T extends FormularioUsuarioUpsertArgs>(args: SelectSubset<T, FormularioUsuarioUpsertArgs<ExtArgs>>): Prisma__FormularioUsuarioClient<$Result.GetResult<Prisma.$FormularioUsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FormularioUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioUsuarioCountArgs} args - Arguments to filter FormularioUsuarios to count.
     * @example
     * // Count the number of FormularioUsuarios
     * const count = await prisma.formularioUsuario.count({
     *   where: {
     *     // ... the filter for the FormularioUsuarios we want to count
     *   }
     * })
    **/
    count<T extends FormularioUsuarioCountArgs>(
      args?: Subset<T, FormularioUsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FormularioUsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FormularioUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioUsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FormularioUsuarioAggregateArgs>(args: Subset<T, FormularioUsuarioAggregateArgs>): Prisma.PrismaPromise<GetFormularioUsuarioAggregateType<T>>

    /**
     * Group by FormularioUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioUsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FormularioUsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FormularioUsuarioGroupByArgs['orderBy'] }
        : { orderBy?: FormularioUsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FormularioUsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFormularioUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FormularioUsuario model
   */
  readonly fields: FormularioUsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FormularioUsuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FormularioUsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    formulario<T extends FormularioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FormularioDefaultArgs<ExtArgs>>): Prisma__FormularioClient<$Result.GetResult<Prisma.$FormularioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    campos<T extends FormularioUsuario$camposArgs<ExtArgs> = {}>(args?: Subset<T, FormularioUsuario$camposArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormularioUsuarioCampoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    arquivos<T extends FormularioUsuario$arquivosArgs<ExtArgs> = {}>(args?: Subset<T, FormularioUsuario$arquivosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArquivoUsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FormularioUsuario model
   */
  interface FormularioUsuarioFieldRefs {
    readonly id: FieldRef<"FormularioUsuario", 'String'>
    readonly dataHora: FieldRef<"FormularioUsuario", 'DateTime'>
    readonly usuarioId: FieldRef<"FormularioUsuario", 'String'>
    readonly formularioId: FieldRef<"FormularioUsuario", 'String'>
    readonly createdAt: FieldRef<"FormularioUsuario", 'DateTime'>
    readonly updatedAt: FieldRef<"FormularioUsuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FormularioUsuario findUnique
   */
  export type FormularioUsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuario
     */
    select?: FormularioUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuario
     */
    omit?: FormularioUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which FormularioUsuario to fetch.
     */
    where: FormularioUsuarioWhereUniqueInput
  }

  /**
   * FormularioUsuario findUniqueOrThrow
   */
  export type FormularioUsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuario
     */
    select?: FormularioUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuario
     */
    omit?: FormularioUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which FormularioUsuario to fetch.
     */
    where: FormularioUsuarioWhereUniqueInput
  }

  /**
   * FormularioUsuario findFirst
   */
  export type FormularioUsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuario
     */
    select?: FormularioUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuario
     */
    omit?: FormularioUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which FormularioUsuario to fetch.
     */
    where?: FormularioUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FormularioUsuarios to fetch.
     */
    orderBy?: FormularioUsuarioOrderByWithRelationInput | FormularioUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FormularioUsuarios.
     */
    cursor?: FormularioUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FormularioUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FormularioUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FormularioUsuarios.
     */
    distinct?: FormularioUsuarioScalarFieldEnum | FormularioUsuarioScalarFieldEnum[]
  }

  /**
   * FormularioUsuario findFirstOrThrow
   */
  export type FormularioUsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuario
     */
    select?: FormularioUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuario
     */
    omit?: FormularioUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which FormularioUsuario to fetch.
     */
    where?: FormularioUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FormularioUsuarios to fetch.
     */
    orderBy?: FormularioUsuarioOrderByWithRelationInput | FormularioUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FormularioUsuarios.
     */
    cursor?: FormularioUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FormularioUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FormularioUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FormularioUsuarios.
     */
    distinct?: FormularioUsuarioScalarFieldEnum | FormularioUsuarioScalarFieldEnum[]
  }

  /**
   * FormularioUsuario findMany
   */
  export type FormularioUsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuario
     */
    select?: FormularioUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuario
     */
    omit?: FormularioUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which FormularioUsuarios to fetch.
     */
    where?: FormularioUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FormularioUsuarios to fetch.
     */
    orderBy?: FormularioUsuarioOrderByWithRelationInput | FormularioUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FormularioUsuarios.
     */
    cursor?: FormularioUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FormularioUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FormularioUsuarios.
     */
    skip?: number
    distinct?: FormularioUsuarioScalarFieldEnum | FormularioUsuarioScalarFieldEnum[]
  }

  /**
   * FormularioUsuario create
   */
  export type FormularioUsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuario
     */
    select?: FormularioUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuario
     */
    omit?: FormularioUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a FormularioUsuario.
     */
    data: XOR<FormularioUsuarioCreateInput, FormularioUsuarioUncheckedCreateInput>
  }

  /**
   * FormularioUsuario createMany
   */
  export type FormularioUsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FormularioUsuarios.
     */
    data: FormularioUsuarioCreateManyInput | FormularioUsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FormularioUsuario createManyAndReturn
   */
  export type FormularioUsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuario
     */
    select?: FormularioUsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuario
     */
    omit?: FormularioUsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many FormularioUsuarios.
     */
    data: FormularioUsuarioCreateManyInput | FormularioUsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FormularioUsuario update
   */
  export type FormularioUsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuario
     */
    select?: FormularioUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuario
     */
    omit?: FormularioUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a FormularioUsuario.
     */
    data: XOR<FormularioUsuarioUpdateInput, FormularioUsuarioUncheckedUpdateInput>
    /**
     * Choose, which FormularioUsuario to update.
     */
    where: FormularioUsuarioWhereUniqueInput
  }

  /**
   * FormularioUsuario updateMany
   */
  export type FormularioUsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FormularioUsuarios.
     */
    data: XOR<FormularioUsuarioUpdateManyMutationInput, FormularioUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which FormularioUsuarios to update
     */
    where?: FormularioUsuarioWhereInput
    /**
     * Limit how many FormularioUsuarios to update.
     */
    limit?: number
  }

  /**
   * FormularioUsuario updateManyAndReturn
   */
  export type FormularioUsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuario
     */
    select?: FormularioUsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuario
     */
    omit?: FormularioUsuarioOmit<ExtArgs> | null
    /**
     * The data used to update FormularioUsuarios.
     */
    data: XOR<FormularioUsuarioUpdateManyMutationInput, FormularioUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which FormularioUsuarios to update
     */
    where?: FormularioUsuarioWhereInput
    /**
     * Limit how many FormularioUsuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FormularioUsuario upsert
   */
  export type FormularioUsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuario
     */
    select?: FormularioUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuario
     */
    omit?: FormularioUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the FormularioUsuario to update in case it exists.
     */
    where: FormularioUsuarioWhereUniqueInput
    /**
     * In case the FormularioUsuario found by the `where` argument doesn't exist, create a new FormularioUsuario with this data.
     */
    create: XOR<FormularioUsuarioCreateInput, FormularioUsuarioUncheckedCreateInput>
    /**
     * In case the FormularioUsuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FormularioUsuarioUpdateInput, FormularioUsuarioUncheckedUpdateInput>
  }

  /**
   * FormularioUsuario delete
   */
  export type FormularioUsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuario
     */
    select?: FormularioUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuario
     */
    omit?: FormularioUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioInclude<ExtArgs> | null
    /**
     * Filter which FormularioUsuario to delete.
     */
    where: FormularioUsuarioWhereUniqueInput
  }

  /**
   * FormularioUsuario deleteMany
   */
  export type FormularioUsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FormularioUsuarios to delete
     */
    where?: FormularioUsuarioWhereInput
    /**
     * Limit how many FormularioUsuarios to delete.
     */
    limit?: number
  }

  /**
   * FormularioUsuario.campos
   */
  export type FormularioUsuario$camposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuarioCampo
     */
    select?: FormularioUsuarioCampoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuarioCampo
     */
    omit?: FormularioUsuarioCampoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioCampoInclude<ExtArgs> | null
    where?: FormularioUsuarioCampoWhereInput
    orderBy?: FormularioUsuarioCampoOrderByWithRelationInput | FormularioUsuarioCampoOrderByWithRelationInput[]
    cursor?: FormularioUsuarioCampoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FormularioUsuarioCampoScalarFieldEnum | FormularioUsuarioCampoScalarFieldEnum[]
  }

  /**
   * FormularioUsuario.arquivos
   */
  export type FormularioUsuario$arquivosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoUsuario
     */
    select?: ArquivoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoUsuario
     */
    omit?: ArquivoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoUsuarioInclude<ExtArgs> | null
    where?: ArquivoUsuarioWhereInput
    orderBy?: ArquivoUsuarioOrderByWithRelationInput | ArquivoUsuarioOrderByWithRelationInput[]
    cursor?: ArquivoUsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArquivoUsuarioScalarFieldEnum | ArquivoUsuarioScalarFieldEnum[]
  }

  /**
   * FormularioUsuario without action
   */
  export type FormularioUsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuario
     */
    select?: FormularioUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuario
     */
    omit?: FormularioUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioInclude<ExtArgs> | null
  }


  /**
   * Model FormularioUsuarioCampo
   */

  export type AggregateFormularioUsuarioCampo = {
    _count: FormularioUsuarioCampoCountAggregateOutputType | null
    _min: FormularioUsuarioCampoMinAggregateOutputType | null
    _max: FormularioUsuarioCampoMaxAggregateOutputType | null
  }

  export type FormularioUsuarioCampoMinAggregateOutputType = {
    id: string | null
    valor: string | null
    campoFormularioId: string | null
    formularioUsuarioId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FormularioUsuarioCampoMaxAggregateOutputType = {
    id: string | null
    valor: string | null
    campoFormularioId: string | null
    formularioUsuarioId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FormularioUsuarioCampoCountAggregateOutputType = {
    id: number
    valor: number
    campoFormularioId: number
    formularioUsuarioId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FormularioUsuarioCampoMinAggregateInputType = {
    id?: true
    valor?: true
    campoFormularioId?: true
    formularioUsuarioId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FormularioUsuarioCampoMaxAggregateInputType = {
    id?: true
    valor?: true
    campoFormularioId?: true
    formularioUsuarioId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FormularioUsuarioCampoCountAggregateInputType = {
    id?: true
    valor?: true
    campoFormularioId?: true
    formularioUsuarioId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FormularioUsuarioCampoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FormularioUsuarioCampo to aggregate.
     */
    where?: FormularioUsuarioCampoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FormularioUsuarioCampos to fetch.
     */
    orderBy?: FormularioUsuarioCampoOrderByWithRelationInput | FormularioUsuarioCampoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FormularioUsuarioCampoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FormularioUsuarioCampos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FormularioUsuarioCampos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FormularioUsuarioCampos
    **/
    _count?: true | FormularioUsuarioCampoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FormularioUsuarioCampoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FormularioUsuarioCampoMaxAggregateInputType
  }

  export type GetFormularioUsuarioCampoAggregateType<T extends FormularioUsuarioCampoAggregateArgs> = {
        [P in keyof T & keyof AggregateFormularioUsuarioCampo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFormularioUsuarioCampo[P]>
      : GetScalarType<T[P], AggregateFormularioUsuarioCampo[P]>
  }




  export type FormularioUsuarioCampoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FormularioUsuarioCampoWhereInput
    orderBy?: FormularioUsuarioCampoOrderByWithAggregationInput | FormularioUsuarioCampoOrderByWithAggregationInput[]
    by: FormularioUsuarioCampoScalarFieldEnum[] | FormularioUsuarioCampoScalarFieldEnum
    having?: FormularioUsuarioCampoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FormularioUsuarioCampoCountAggregateInputType | true
    _min?: FormularioUsuarioCampoMinAggregateInputType
    _max?: FormularioUsuarioCampoMaxAggregateInputType
  }

  export type FormularioUsuarioCampoGroupByOutputType = {
    id: string
    valor: string
    campoFormularioId: string
    formularioUsuarioId: string
    createdAt: Date
    updatedAt: Date
    _count: FormularioUsuarioCampoCountAggregateOutputType | null
    _min: FormularioUsuarioCampoMinAggregateOutputType | null
    _max: FormularioUsuarioCampoMaxAggregateOutputType | null
  }

  type GetFormularioUsuarioCampoGroupByPayload<T extends FormularioUsuarioCampoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FormularioUsuarioCampoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FormularioUsuarioCampoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FormularioUsuarioCampoGroupByOutputType[P]>
            : GetScalarType<T[P], FormularioUsuarioCampoGroupByOutputType[P]>
        }
      >
    >


  export type FormularioUsuarioCampoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    valor?: boolean
    campoFormularioId?: boolean
    formularioUsuarioId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    campo?: boolean | CampoFormularioDefaultArgs<ExtArgs>
    inscricao?: boolean | FormularioUsuarioDefaultArgs<ExtArgs>
    arquivo?: boolean | FormularioUsuarioCampo$arquivoArgs<ExtArgs>
  }, ExtArgs["result"]["formularioUsuarioCampo"]>

  export type FormularioUsuarioCampoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    valor?: boolean
    campoFormularioId?: boolean
    formularioUsuarioId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    campo?: boolean | CampoFormularioDefaultArgs<ExtArgs>
    inscricao?: boolean | FormularioUsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["formularioUsuarioCampo"]>

  export type FormularioUsuarioCampoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    valor?: boolean
    campoFormularioId?: boolean
    formularioUsuarioId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    campo?: boolean | CampoFormularioDefaultArgs<ExtArgs>
    inscricao?: boolean | FormularioUsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["formularioUsuarioCampo"]>

  export type FormularioUsuarioCampoSelectScalar = {
    id?: boolean
    valor?: boolean
    campoFormularioId?: boolean
    formularioUsuarioId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FormularioUsuarioCampoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "valor" | "campoFormularioId" | "formularioUsuarioId" | "createdAt" | "updatedAt", ExtArgs["result"]["formularioUsuarioCampo"]>
  export type FormularioUsuarioCampoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campo?: boolean | CampoFormularioDefaultArgs<ExtArgs>
    inscricao?: boolean | FormularioUsuarioDefaultArgs<ExtArgs>
    arquivo?: boolean | FormularioUsuarioCampo$arquivoArgs<ExtArgs>
  }
  export type FormularioUsuarioCampoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campo?: boolean | CampoFormularioDefaultArgs<ExtArgs>
    inscricao?: boolean | FormularioUsuarioDefaultArgs<ExtArgs>
  }
  export type FormularioUsuarioCampoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campo?: boolean | CampoFormularioDefaultArgs<ExtArgs>
    inscricao?: boolean | FormularioUsuarioDefaultArgs<ExtArgs>
  }

  export type $FormularioUsuarioCampoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FormularioUsuarioCampo"
    objects: {
      campo: Prisma.$CampoFormularioPayload<ExtArgs>
      inscricao: Prisma.$FormularioUsuarioPayload<ExtArgs>
      arquivo: Prisma.$ArquivoUsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      valor: string
      campoFormularioId: string
      formularioUsuarioId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["formularioUsuarioCampo"]>
    composites: {}
  }

  type FormularioUsuarioCampoGetPayload<S extends boolean | null | undefined | FormularioUsuarioCampoDefaultArgs> = $Result.GetResult<Prisma.$FormularioUsuarioCampoPayload, S>

  type FormularioUsuarioCampoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FormularioUsuarioCampoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FormularioUsuarioCampoCountAggregateInputType | true
    }

  export interface FormularioUsuarioCampoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FormularioUsuarioCampo'], meta: { name: 'FormularioUsuarioCampo' } }
    /**
     * Find zero or one FormularioUsuarioCampo that matches the filter.
     * @param {FormularioUsuarioCampoFindUniqueArgs} args - Arguments to find a FormularioUsuarioCampo
     * @example
     * // Get one FormularioUsuarioCampo
     * const formularioUsuarioCampo = await prisma.formularioUsuarioCampo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FormularioUsuarioCampoFindUniqueArgs>(args: SelectSubset<T, FormularioUsuarioCampoFindUniqueArgs<ExtArgs>>): Prisma__FormularioUsuarioCampoClient<$Result.GetResult<Prisma.$FormularioUsuarioCampoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FormularioUsuarioCampo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FormularioUsuarioCampoFindUniqueOrThrowArgs} args - Arguments to find a FormularioUsuarioCampo
     * @example
     * // Get one FormularioUsuarioCampo
     * const formularioUsuarioCampo = await prisma.formularioUsuarioCampo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FormularioUsuarioCampoFindUniqueOrThrowArgs>(args: SelectSubset<T, FormularioUsuarioCampoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FormularioUsuarioCampoClient<$Result.GetResult<Prisma.$FormularioUsuarioCampoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FormularioUsuarioCampo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioUsuarioCampoFindFirstArgs} args - Arguments to find a FormularioUsuarioCampo
     * @example
     * // Get one FormularioUsuarioCampo
     * const formularioUsuarioCampo = await prisma.formularioUsuarioCampo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FormularioUsuarioCampoFindFirstArgs>(args?: SelectSubset<T, FormularioUsuarioCampoFindFirstArgs<ExtArgs>>): Prisma__FormularioUsuarioCampoClient<$Result.GetResult<Prisma.$FormularioUsuarioCampoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FormularioUsuarioCampo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioUsuarioCampoFindFirstOrThrowArgs} args - Arguments to find a FormularioUsuarioCampo
     * @example
     * // Get one FormularioUsuarioCampo
     * const formularioUsuarioCampo = await prisma.formularioUsuarioCampo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FormularioUsuarioCampoFindFirstOrThrowArgs>(args?: SelectSubset<T, FormularioUsuarioCampoFindFirstOrThrowArgs<ExtArgs>>): Prisma__FormularioUsuarioCampoClient<$Result.GetResult<Prisma.$FormularioUsuarioCampoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FormularioUsuarioCampos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioUsuarioCampoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FormularioUsuarioCampos
     * const formularioUsuarioCampos = await prisma.formularioUsuarioCampo.findMany()
     * 
     * // Get first 10 FormularioUsuarioCampos
     * const formularioUsuarioCampos = await prisma.formularioUsuarioCampo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const formularioUsuarioCampoWithIdOnly = await prisma.formularioUsuarioCampo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FormularioUsuarioCampoFindManyArgs>(args?: SelectSubset<T, FormularioUsuarioCampoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormularioUsuarioCampoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FormularioUsuarioCampo.
     * @param {FormularioUsuarioCampoCreateArgs} args - Arguments to create a FormularioUsuarioCampo.
     * @example
     * // Create one FormularioUsuarioCampo
     * const FormularioUsuarioCampo = await prisma.formularioUsuarioCampo.create({
     *   data: {
     *     // ... data to create a FormularioUsuarioCampo
     *   }
     * })
     * 
     */
    create<T extends FormularioUsuarioCampoCreateArgs>(args: SelectSubset<T, FormularioUsuarioCampoCreateArgs<ExtArgs>>): Prisma__FormularioUsuarioCampoClient<$Result.GetResult<Prisma.$FormularioUsuarioCampoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FormularioUsuarioCampos.
     * @param {FormularioUsuarioCampoCreateManyArgs} args - Arguments to create many FormularioUsuarioCampos.
     * @example
     * // Create many FormularioUsuarioCampos
     * const formularioUsuarioCampo = await prisma.formularioUsuarioCampo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FormularioUsuarioCampoCreateManyArgs>(args?: SelectSubset<T, FormularioUsuarioCampoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FormularioUsuarioCampos and returns the data saved in the database.
     * @param {FormularioUsuarioCampoCreateManyAndReturnArgs} args - Arguments to create many FormularioUsuarioCampos.
     * @example
     * // Create many FormularioUsuarioCampos
     * const formularioUsuarioCampo = await prisma.formularioUsuarioCampo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FormularioUsuarioCampos and only return the `id`
     * const formularioUsuarioCampoWithIdOnly = await prisma.formularioUsuarioCampo.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FormularioUsuarioCampoCreateManyAndReturnArgs>(args?: SelectSubset<T, FormularioUsuarioCampoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormularioUsuarioCampoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FormularioUsuarioCampo.
     * @param {FormularioUsuarioCampoDeleteArgs} args - Arguments to delete one FormularioUsuarioCampo.
     * @example
     * // Delete one FormularioUsuarioCampo
     * const FormularioUsuarioCampo = await prisma.formularioUsuarioCampo.delete({
     *   where: {
     *     // ... filter to delete one FormularioUsuarioCampo
     *   }
     * })
     * 
     */
    delete<T extends FormularioUsuarioCampoDeleteArgs>(args: SelectSubset<T, FormularioUsuarioCampoDeleteArgs<ExtArgs>>): Prisma__FormularioUsuarioCampoClient<$Result.GetResult<Prisma.$FormularioUsuarioCampoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FormularioUsuarioCampo.
     * @param {FormularioUsuarioCampoUpdateArgs} args - Arguments to update one FormularioUsuarioCampo.
     * @example
     * // Update one FormularioUsuarioCampo
     * const formularioUsuarioCampo = await prisma.formularioUsuarioCampo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FormularioUsuarioCampoUpdateArgs>(args: SelectSubset<T, FormularioUsuarioCampoUpdateArgs<ExtArgs>>): Prisma__FormularioUsuarioCampoClient<$Result.GetResult<Prisma.$FormularioUsuarioCampoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FormularioUsuarioCampos.
     * @param {FormularioUsuarioCampoDeleteManyArgs} args - Arguments to filter FormularioUsuarioCampos to delete.
     * @example
     * // Delete a few FormularioUsuarioCampos
     * const { count } = await prisma.formularioUsuarioCampo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FormularioUsuarioCampoDeleteManyArgs>(args?: SelectSubset<T, FormularioUsuarioCampoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FormularioUsuarioCampos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioUsuarioCampoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FormularioUsuarioCampos
     * const formularioUsuarioCampo = await prisma.formularioUsuarioCampo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FormularioUsuarioCampoUpdateManyArgs>(args: SelectSubset<T, FormularioUsuarioCampoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FormularioUsuarioCampos and returns the data updated in the database.
     * @param {FormularioUsuarioCampoUpdateManyAndReturnArgs} args - Arguments to update many FormularioUsuarioCampos.
     * @example
     * // Update many FormularioUsuarioCampos
     * const formularioUsuarioCampo = await prisma.formularioUsuarioCampo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FormularioUsuarioCampos and only return the `id`
     * const formularioUsuarioCampoWithIdOnly = await prisma.formularioUsuarioCampo.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FormularioUsuarioCampoUpdateManyAndReturnArgs>(args: SelectSubset<T, FormularioUsuarioCampoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormularioUsuarioCampoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FormularioUsuarioCampo.
     * @param {FormularioUsuarioCampoUpsertArgs} args - Arguments to update or create a FormularioUsuarioCampo.
     * @example
     * // Update or create a FormularioUsuarioCampo
     * const formularioUsuarioCampo = await prisma.formularioUsuarioCampo.upsert({
     *   create: {
     *     // ... data to create a FormularioUsuarioCampo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FormularioUsuarioCampo we want to update
     *   }
     * })
     */
    upsert<T extends FormularioUsuarioCampoUpsertArgs>(args: SelectSubset<T, FormularioUsuarioCampoUpsertArgs<ExtArgs>>): Prisma__FormularioUsuarioCampoClient<$Result.GetResult<Prisma.$FormularioUsuarioCampoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FormularioUsuarioCampos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioUsuarioCampoCountArgs} args - Arguments to filter FormularioUsuarioCampos to count.
     * @example
     * // Count the number of FormularioUsuarioCampos
     * const count = await prisma.formularioUsuarioCampo.count({
     *   where: {
     *     // ... the filter for the FormularioUsuarioCampos we want to count
     *   }
     * })
    **/
    count<T extends FormularioUsuarioCampoCountArgs>(
      args?: Subset<T, FormularioUsuarioCampoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FormularioUsuarioCampoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FormularioUsuarioCampo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioUsuarioCampoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FormularioUsuarioCampoAggregateArgs>(args: Subset<T, FormularioUsuarioCampoAggregateArgs>): Prisma.PrismaPromise<GetFormularioUsuarioCampoAggregateType<T>>

    /**
     * Group by FormularioUsuarioCampo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormularioUsuarioCampoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FormularioUsuarioCampoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FormularioUsuarioCampoGroupByArgs['orderBy'] }
        : { orderBy?: FormularioUsuarioCampoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FormularioUsuarioCampoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFormularioUsuarioCampoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FormularioUsuarioCampo model
   */
  readonly fields: FormularioUsuarioCampoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FormularioUsuarioCampo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FormularioUsuarioCampoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    campo<T extends CampoFormularioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CampoFormularioDefaultArgs<ExtArgs>>): Prisma__CampoFormularioClient<$Result.GetResult<Prisma.$CampoFormularioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    inscricao<T extends FormularioUsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FormularioUsuarioDefaultArgs<ExtArgs>>): Prisma__FormularioUsuarioClient<$Result.GetResult<Prisma.$FormularioUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    arquivo<T extends FormularioUsuarioCampo$arquivoArgs<ExtArgs> = {}>(args?: Subset<T, FormularioUsuarioCampo$arquivoArgs<ExtArgs>>): Prisma__ArquivoUsuarioClient<$Result.GetResult<Prisma.$ArquivoUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FormularioUsuarioCampo model
   */
  interface FormularioUsuarioCampoFieldRefs {
    readonly id: FieldRef<"FormularioUsuarioCampo", 'String'>
    readonly valor: FieldRef<"FormularioUsuarioCampo", 'String'>
    readonly campoFormularioId: FieldRef<"FormularioUsuarioCampo", 'String'>
    readonly formularioUsuarioId: FieldRef<"FormularioUsuarioCampo", 'String'>
    readonly createdAt: FieldRef<"FormularioUsuarioCampo", 'DateTime'>
    readonly updatedAt: FieldRef<"FormularioUsuarioCampo", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FormularioUsuarioCampo findUnique
   */
  export type FormularioUsuarioCampoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuarioCampo
     */
    select?: FormularioUsuarioCampoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuarioCampo
     */
    omit?: FormularioUsuarioCampoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioCampoInclude<ExtArgs> | null
    /**
     * Filter, which FormularioUsuarioCampo to fetch.
     */
    where: FormularioUsuarioCampoWhereUniqueInput
  }

  /**
   * FormularioUsuarioCampo findUniqueOrThrow
   */
  export type FormularioUsuarioCampoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuarioCampo
     */
    select?: FormularioUsuarioCampoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuarioCampo
     */
    omit?: FormularioUsuarioCampoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioCampoInclude<ExtArgs> | null
    /**
     * Filter, which FormularioUsuarioCampo to fetch.
     */
    where: FormularioUsuarioCampoWhereUniqueInput
  }

  /**
   * FormularioUsuarioCampo findFirst
   */
  export type FormularioUsuarioCampoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuarioCampo
     */
    select?: FormularioUsuarioCampoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuarioCampo
     */
    omit?: FormularioUsuarioCampoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioCampoInclude<ExtArgs> | null
    /**
     * Filter, which FormularioUsuarioCampo to fetch.
     */
    where?: FormularioUsuarioCampoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FormularioUsuarioCampos to fetch.
     */
    orderBy?: FormularioUsuarioCampoOrderByWithRelationInput | FormularioUsuarioCampoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FormularioUsuarioCampos.
     */
    cursor?: FormularioUsuarioCampoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FormularioUsuarioCampos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FormularioUsuarioCampos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FormularioUsuarioCampos.
     */
    distinct?: FormularioUsuarioCampoScalarFieldEnum | FormularioUsuarioCampoScalarFieldEnum[]
  }

  /**
   * FormularioUsuarioCampo findFirstOrThrow
   */
  export type FormularioUsuarioCampoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuarioCampo
     */
    select?: FormularioUsuarioCampoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuarioCampo
     */
    omit?: FormularioUsuarioCampoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioCampoInclude<ExtArgs> | null
    /**
     * Filter, which FormularioUsuarioCampo to fetch.
     */
    where?: FormularioUsuarioCampoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FormularioUsuarioCampos to fetch.
     */
    orderBy?: FormularioUsuarioCampoOrderByWithRelationInput | FormularioUsuarioCampoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FormularioUsuarioCampos.
     */
    cursor?: FormularioUsuarioCampoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FormularioUsuarioCampos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FormularioUsuarioCampos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FormularioUsuarioCampos.
     */
    distinct?: FormularioUsuarioCampoScalarFieldEnum | FormularioUsuarioCampoScalarFieldEnum[]
  }

  /**
   * FormularioUsuarioCampo findMany
   */
  export type FormularioUsuarioCampoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuarioCampo
     */
    select?: FormularioUsuarioCampoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuarioCampo
     */
    omit?: FormularioUsuarioCampoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioCampoInclude<ExtArgs> | null
    /**
     * Filter, which FormularioUsuarioCampos to fetch.
     */
    where?: FormularioUsuarioCampoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FormularioUsuarioCampos to fetch.
     */
    orderBy?: FormularioUsuarioCampoOrderByWithRelationInput | FormularioUsuarioCampoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FormularioUsuarioCampos.
     */
    cursor?: FormularioUsuarioCampoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FormularioUsuarioCampos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FormularioUsuarioCampos.
     */
    skip?: number
    distinct?: FormularioUsuarioCampoScalarFieldEnum | FormularioUsuarioCampoScalarFieldEnum[]
  }

  /**
   * FormularioUsuarioCampo create
   */
  export type FormularioUsuarioCampoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuarioCampo
     */
    select?: FormularioUsuarioCampoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuarioCampo
     */
    omit?: FormularioUsuarioCampoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioCampoInclude<ExtArgs> | null
    /**
     * The data needed to create a FormularioUsuarioCampo.
     */
    data: XOR<FormularioUsuarioCampoCreateInput, FormularioUsuarioCampoUncheckedCreateInput>
  }

  /**
   * FormularioUsuarioCampo createMany
   */
  export type FormularioUsuarioCampoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FormularioUsuarioCampos.
     */
    data: FormularioUsuarioCampoCreateManyInput | FormularioUsuarioCampoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FormularioUsuarioCampo createManyAndReturn
   */
  export type FormularioUsuarioCampoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuarioCampo
     */
    select?: FormularioUsuarioCampoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuarioCampo
     */
    omit?: FormularioUsuarioCampoOmit<ExtArgs> | null
    /**
     * The data used to create many FormularioUsuarioCampos.
     */
    data: FormularioUsuarioCampoCreateManyInput | FormularioUsuarioCampoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioCampoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FormularioUsuarioCampo update
   */
  export type FormularioUsuarioCampoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuarioCampo
     */
    select?: FormularioUsuarioCampoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuarioCampo
     */
    omit?: FormularioUsuarioCampoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioCampoInclude<ExtArgs> | null
    /**
     * The data needed to update a FormularioUsuarioCampo.
     */
    data: XOR<FormularioUsuarioCampoUpdateInput, FormularioUsuarioCampoUncheckedUpdateInput>
    /**
     * Choose, which FormularioUsuarioCampo to update.
     */
    where: FormularioUsuarioCampoWhereUniqueInput
  }

  /**
   * FormularioUsuarioCampo updateMany
   */
  export type FormularioUsuarioCampoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FormularioUsuarioCampos.
     */
    data: XOR<FormularioUsuarioCampoUpdateManyMutationInput, FormularioUsuarioCampoUncheckedUpdateManyInput>
    /**
     * Filter which FormularioUsuarioCampos to update
     */
    where?: FormularioUsuarioCampoWhereInput
    /**
     * Limit how many FormularioUsuarioCampos to update.
     */
    limit?: number
  }

  /**
   * FormularioUsuarioCampo updateManyAndReturn
   */
  export type FormularioUsuarioCampoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuarioCampo
     */
    select?: FormularioUsuarioCampoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuarioCampo
     */
    omit?: FormularioUsuarioCampoOmit<ExtArgs> | null
    /**
     * The data used to update FormularioUsuarioCampos.
     */
    data: XOR<FormularioUsuarioCampoUpdateManyMutationInput, FormularioUsuarioCampoUncheckedUpdateManyInput>
    /**
     * Filter which FormularioUsuarioCampos to update
     */
    where?: FormularioUsuarioCampoWhereInput
    /**
     * Limit how many FormularioUsuarioCampos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioCampoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FormularioUsuarioCampo upsert
   */
  export type FormularioUsuarioCampoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuarioCampo
     */
    select?: FormularioUsuarioCampoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuarioCampo
     */
    omit?: FormularioUsuarioCampoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioCampoInclude<ExtArgs> | null
    /**
     * The filter to search for the FormularioUsuarioCampo to update in case it exists.
     */
    where: FormularioUsuarioCampoWhereUniqueInput
    /**
     * In case the FormularioUsuarioCampo found by the `where` argument doesn't exist, create a new FormularioUsuarioCampo with this data.
     */
    create: XOR<FormularioUsuarioCampoCreateInput, FormularioUsuarioCampoUncheckedCreateInput>
    /**
     * In case the FormularioUsuarioCampo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FormularioUsuarioCampoUpdateInput, FormularioUsuarioCampoUncheckedUpdateInput>
  }

  /**
   * FormularioUsuarioCampo delete
   */
  export type FormularioUsuarioCampoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuarioCampo
     */
    select?: FormularioUsuarioCampoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuarioCampo
     */
    omit?: FormularioUsuarioCampoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioCampoInclude<ExtArgs> | null
    /**
     * Filter which FormularioUsuarioCampo to delete.
     */
    where: FormularioUsuarioCampoWhereUniqueInput
  }

  /**
   * FormularioUsuarioCampo deleteMany
   */
  export type FormularioUsuarioCampoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FormularioUsuarioCampos to delete
     */
    where?: FormularioUsuarioCampoWhereInput
    /**
     * Limit how many FormularioUsuarioCampos to delete.
     */
    limit?: number
  }

  /**
   * FormularioUsuarioCampo.arquivo
   */
  export type FormularioUsuarioCampo$arquivoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoUsuario
     */
    select?: ArquivoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoUsuario
     */
    omit?: ArquivoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoUsuarioInclude<ExtArgs> | null
    where?: ArquivoUsuarioWhereInput
  }

  /**
   * FormularioUsuarioCampo without action
   */
  export type FormularioUsuarioCampoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuarioCampo
     */
    select?: FormularioUsuarioCampoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuarioCampo
     */
    omit?: FormularioUsuarioCampoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioCampoInclude<ExtArgs> | null
  }


  /**
   * Model ArquivoUsuario
   */

  export type AggregateArquivoUsuario = {
    _count: ArquivoUsuarioCountAggregateOutputType | null
    _avg: ArquivoUsuarioAvgAggregateOutputType | null
    _sum: ArquivoUsuarioSumAggregateOutputType | null
    _min: ArquivoUsuarioMinAggregateOutputType | null
    _max: ArquivoUsuarioMaxAggregateOutputType | null
  }

  export type ArquivoUsuarioAvgAggregateOutputType = {
    tamanho: number | null
  }

  export type ArquivoUsuarioSumAggregateOutputType = {
    tamanho: number | null
  }

  export type ArquivoUsuarioMinAggregateOutputType = {
    id: string | null
    nomeOriginal: string | null
    nomeArmazenado: string | null
    tamanho: number | null
    tipo: string | null
    caminho: string | null
    campoId: string | null
    inscricaoId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ArquivoUsuarioMaxAggregateOutputType = {
    id: string | null
    nomeOriginal: string | null
    nomeArmazenado: string | null
    tamanho: number | null
    tipo: string | null
    caminho: string | null
    campoId: string | null
    inscricaoId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ArquivoUsuarioCountAggregateOutputType = {
    id: number
    nomeOriginal: number
    nomeArmazenado: number
    tamanho: number
    tipo: number
    caminho: number
    campoId: number
    inscricaoId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ArquivoUsuarioAvgAggregateInputType = {
    tamanho?: true
  }

  export type ArquivoUsuarioSumAggregateInputType = {
    tamanho?: true
  }

  export type ArquivoUsuarioMinAggregateInputType = {
    id?: true
    nomeOriginal?: true
    nomeArmazenado?: true
    tamanho?: true
    tipo?: true
    caminho?: true
    campoId?: true
    inscricaoId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ArquivoUsuarioMaxAggregateInputType = {
    id?: true
    nomeOriginal?: true
    nomeArmazenado?: true
    tamanho?: true
    tipo?: true
    caminho?: true
    campoId?: true
    inscricaoId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ArquivoUsuarioCountAggregateInputType = {
    id?: true
    nomeOriginal?: true
    nomeArmazenado?: true
    tamanho?: true
    tipo?: true
    caminho?: true
    campoId?: true
    inscricaoId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ArquivoUsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ArquivoUsuario to aggregate.
     */
    where?: ArquivoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArquivoUsuarios to fetch.
     */
    orderBy?: ArquivoUsuarioOrderByWithRelationInput | ArquivoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ArquivoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArquivoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArquivoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ArquivoUsuarios
    **/
    _count?: true | ArquivoUsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ArquivoUsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ArquivoUsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ArquivoUsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ArquivoUsuarioMaxAggregateInputType
  }

  export type GetArquivoUsuarioAggregateType<T extends ArquivoUsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateArquivoUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateArquivoUsuario[P]>
      : GetScalarType<T[P], AggregateArquivoUsuario[P]>
  }




  export type ArquivoUsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArquivoUsuarioWhereInput
    orderBy?: ArquivoUsuarioOrderByWithAggregationInput | ArquivoUsuarioOrderByWithAggregationInput[]
    by: ArquivoUsuarioScalarFieldEnum[] | ArquivoUsuarioScalarFieldEnum
    having?: ArquivoUsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ArquivoUsuarioCountAggregateInputType | true
    _avg?: ArquivoUsuarioAvgAggregateInputType
    _sum?: ArquivoUsuarioSumAggregateInputType
    _min?: ArquivoUsuarioMinAggregateInputType
    _max?: ArquivoUsuarioMaxAggregateInputType
  }

  export type ArquivoUsuarioGroupByOutputType = {
    id: string
    nomeOriginal: string
    nomeArmazenado: string
    tamanho: number
    tipo: string
    caminho: string
    campoId: string | null
    inscricaoId: string
    createdAt: Date
    updatedAt: Date
    _count: ArquivoUsuarioCountAggregateOutputType | null
    _avg: ArquivoUsuarioAvgAggregateOutputType | null
    _sum: ArquivoUsuarioSumAggregateOutputType | null
    _min: ArquivoUsuarioMinAggregateOutputType | null
    _max: ArquivoUsuarioMaxAggregateOutputType | null
  }

  type GetArquivoUsuarioGroupByPayload<T extends ArquivoUsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ArquivoUsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ArquivoUsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ArquivoUsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], ArquivoUsuarioGroupByOutputType[P]>
        }
      >
    >


  export type ArquivoUsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nomeOriginal?: boolean
    nomeArmazenado?: boolean
    tamanho?: boolean
    tipo?: boolean
    caminho?: boolean
    campoId?: boolean
    inscricaoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    campo?: boolean | ArquivoUsuario$campoArgs<ExtArgs>
    inscricao?: boolean | FormularioUsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["arquivoUsuario"]>

  export type ArquivoUsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nomeOriginal?: boolean
    nomeArmazenado?: boolean
    tamanho?: boolean
    tipo?: boolean
    caminho?: boolean
    campoId?: boolean
    inscricaoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    campo?: boolean | ArquivoUsuario$campoArgs<ExtArgs>
    inscricao?: boolean | FormularioUsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["arquivoUsuario"]>

  export type ArquivoUsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nomeOriginal?: boolean
    nomeArmazenado?: boolean
    tamanho?: boolean
    tipo?: boolean
    caminho?: boolean
    campoId?: boolean
    inscricaoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    campo?: boolean | ArquivoUsuario$campoArgs<ExtArgs>
    inscricao?: boolean | FormularioUsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["arquivoUsuario"]>

  export type ArquivoUsuarioSelectScalar = {
    id?: boolean
    nomeOriginal?: boolean
    nomeArmazenado?: boolean
    tamanho?: boolean
    tipo?: boolean
    caminho?: boolean
    campoId?: boolean
    inscricaoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ArquivoUsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nomeOriginal" | "nomeArmazenado" | "tamanho" | "tipo" | "caminho" | "campoId" | "inscricaoId" | "createdAt" | "updatedAt", ExtArgs["result"]["arquivoUsuario"]>
  export type ArquivoUsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campo?: boolean | ArquivoUsuario$campoArgs<ExtArgs>
    inscricao?: boolean | FormularioUsuarioDefaultArgs<ExtArgs>
  }
  export type ArquivoUsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campo?: boolean | ArquivoUsuario$campoArgs<ExtArgs>
    inscricao?: boolean | FormularioUsuarioDefaultArgs<ExtArgs>
  }
  export type ArquivoUsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campo?: boolean | ArquivoUsuario$campoArgs<ExtArgs>
    inscricao?: boolean | FormularioUsuarioDefaultArgs<ExtArgs>
  }

  export type $ArquivoUsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ArquivoUsuario"
    objects: {
      campo: Prisma.$FormularioUsuarioCampoPayload<ExtArgs> | null
      inscricao: Prisma.$FormularioUsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nomeOriginal: string
      nomeArmazenado: string
      tamanho: number
      tipo: string
      caminho: string
      campoId: string | null
      inscricaoId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["arquivoUsuario"]>
    composites: {}
  }

  type ArquivoUsuarioGetPayload<S extends boolean | null | undefined | ArquivoUsuarioDefaultArgs> = $Result.GetResult<Prisma.$ArquivoUsuarioPayload, S>

  type ArquivoUsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ArquivoUsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ArquivoUsuarioCountAggregateInputType | true
    }

  export interface ArquivoUsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ArquivoUsuario'], meta: { name: 'ArquivoUsuario' } }
    /**
     * Find zero or one ArquivoUsuario that matches the filter.
     * @param {ArquivoUsuarioFindUniqueArgs} args - Arguments to find a ArquivoUsuario
     * @example
     * // Get one ArquivoUsuario
     * const arquivoUsuario = await prisma.arquivoUsuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ArquivoUsuarioFindUniqueArgs>(args: SelectSubset<T, ArquivoUsuarioFindUniqueArgs<ExtArgs>>): Prisma__ArquivoUsuarioClient<$Result.GetResult<Prisma.$ArquivoUsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ArquivoUsuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ArquivoUsuarioFindUniqueOrThrowArgs} args - Arguments to find a ArquivoUsuario
     * @example
     * // Get one ArquivoUsuario
     * const arquivoUsuario = await prisma.arquivoUsuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ArquivoUsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, ArquivoUsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ArquivoUsuarioClient<$Result.GetResult<Prisma.$ArquivoUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ArquivoUsuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArquivoUsuarioFindFirstArgs} args - Arguments to find a ArquivoUsuario
     * @example
     * // Get one ArquivoUsuario
     * const arquivoUsuario = await prisma.arquivoUsuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ArquivoUsuarioFindFirstArgs>(args?: SelectSubset<T, ArquivoUsuarioFindFirstArgs<ExtArgs>>): Prisma__ArquivoUsuarioClient<$Result.GetResult<Prisma.$ArquivoUsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ArquivoUsuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArquivoUsuarioFindFirstOrThrowArgs} args - Arguments to find a ArquivoUsuario
     * @example
     * // Get one ArquivoUsuario
     * const arquivoUsuario = await prisma.arquivoUsuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ArquivoUsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, ArquivoUsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__ArquivoUsuarioClient<$Result.GetResult<Prisma.$ArquivoUsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ArquivoUsuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArquivoUsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ArquivoUsuarios
     * const arquivoUsuarios = await prisma.arquivoUsuario.findMany()
     * 
     * // Get first 10 ArquivoUsuarios
     * const arquivoUsuarios = await prisma.arquivoUsuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const arquivoUsuarioWithIdOnly = await prisma.arquivoUsuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ArquivoUsuarioFindManyArgs>(args?: SelectSubset<T, ArquivoUsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArquivoUsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ArquivoUsuario.
     * @param {ArquivoUsuarioCreateArgs} args - Arguments to create a ArquivoUsuario.
     * @example
     * // Create one ArquivoUsuario
     * const ArquivoUsuario = await prisma.arquivoUsuario.create({
     *   data: {
     *     // ... data to create a ArquivoUsuario
     *   }
     * })
     * 
     */
    create<T extends ArquivoUsuarioCreateArgs>(args: SelectSubset<T, ArquivoUsuarioCreateArgs<ExtArgs>>): Prisma__ArquivoUsuarioClient<$Result.GetResult<Prisma.$ArquivoUsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ArquivoUsuarios.
     * @param {ArquivoUsuarioCreateManyArgs} args - Arguments to create many ArquivoUsuarios.
     * @example
     * // Create many ArquivoUsuarios
     * const arquivoUsuario = await prisma.arquivoUsuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ArquivoUsuarioCreateManyArgs>(args?: SelectSubset<T, ArquivoUsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ArquivoUsuarios and returns the data saved in the database.
     * @param {ArquivoUsuarioCreateManyAndReturnArgs} args - Arguments to create many ArquivoUsuarios.
     * @example
     * // Create many ArquivoUsuarios
     * const arquivoUsuario = await prisma.arquivoUsuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ArquivoUsuarios and only return the `id`
     * const arquivoUsuarioWithIdOnly = await prisma.arquivoUsuario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ArquivoUsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, ArquivoUsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArquivoUsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ArquivoUsuario.
     * @param {ArquivoUsuarioDeleteArgs} args - Arguments to delete one ArquivoUsuario.
     * @example
     * // Delete one ArquivoUsuario
     * const ArquivoUsuario = await prisma.arquivoUsuario.delete({
     *   where: {
     *     // ... filter to delete one ArquivoUsuario
     *   }
     * })
     * 
     */
    delete<T extends ArquivoUsuarioDeleteArgs>(args: SelectSubset<T, ArquivoUsuarioDeleteArgs<ExtArgs>>): Prisma__ArquivoUsuarioClient<$Result.GetResult<Prisma.$ArquivoUsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ArquivoUsuario.
     * @param {ArquivoUsuarioUpdateArgs} args - Arguments to update one ArquivoUsuario.
     * @example
     * // Update one ArquivoUsuario
     * const arquivoUsuario = await prisma.arquivoUsuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ArquivoUsuarioUpdateArgs>(args: SelectSubset<T, ArquivoUsuarioUpdateArgs<ExtArgs>>): Prisma__ArquivoUsuarioClient<$Result.GetResult<Prisma.$ArquivoUsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ArquivoUsuarios.
     * @param {ArquivoUsuarioDeleteManyArgs} args - Arguments to filter ArquivoUsuarios to delete.
     * @example
     * // Delete a few ArquivoUsuarios
     * const { count } = await prisma.arquivoUsuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ArquivoUsuarioDeleteManyArgs>(args?: SelectSubset<T, ArquivoUsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ArquivoUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArquivoUsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ArquivoUsuarios
     * const arquivoUsuario = await prisma.arquivoUsuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ArquivoUsuarioUpdateManyArgs>(args: SelectSubset<T, ArquivoUsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ArquivoUsuarios and returns the data updated in the database.
     * @param {ArquivoUsuarioUpdateManyAndReturnArgs} args - Arguments to update many ArquivoUsuarios.
     * @example
     * // Update many ArquivoUsuarios
     * const arquivoUsuario = await prisma.arquivoUsuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ArquivoUsuarios and only return the `id`
     * const arquivoUsuarioWithIdOnly = await prisma.arquivoUsuario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ArquivoUsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, ArquivoUsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArquivoUsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ArquivoUsuario.
     * @param {ArquivoUsuarioUpsertArgs} args - Arguments to update or create a ArquivoUsuario.
     * @example
     * // Update or create a ArquivoUsuario
     * const arquivoUsuario = await prisma.arquivoUsuario.upsert({
     *   create: {
     *     // ... data to create a ArquivoUsuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ArquivoUsuario we want to update
     *   }
     * })
     */
    upsert<T extends ArquivoUsuarioUpsertArgs>(args: SelectSubset<T, ArquivoUsuarioUpsertArgs<ExtArgs>>): Prisma__ArquivoUsuarioClient<$Result.GetResult<Prisma.$ArquivoUsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ArquivoUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArquivoUsuarioCountArgs} args - Arguments to filter ArquivoUsuarios to count.
     * @example
     * // Count the number of ArquivoUsuarios
     * const count = await prisma.arquivoUsuario.count({
     *   where: {
     *     // ... the filter for the ArquivoUsuarios we want to count
     *   }
     * })
    **/
    count<T extends ArquivoUsuarioCountArgs>(
      args?: Subset<T, ArquivoUsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ArquivoUsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ArquivoUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArquivoUsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ArquivoUsuarioAggregateArgs>(args: Subset<T, ArquivoUsuarioAggregateArgs>): Prisma.PrismaPromise<GetArquivoUsuarioAggregateType<T>>

    /**
     * Group by ArquivoUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArquivoUsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ArquivoUsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ArquivoUsuarioGroupByArgs['orderBy'] }
        : { orderBy?: ArquivoUsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ArquivoUsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArquivoUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ArquivoUsuario model
   */
  readonly fields: ArquivoUsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ArquivoUsuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ArquivoUsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    campo<T extends ArquivoUsuario$campoArgs<ExtArgs> = {}>(args?: Subset<T, ArquivoUsuario$campoArgs<ExtArgs>>): Prisma__FormularioUsuarioCampoClient<$Result.GetResult<Prisma.$FormularioUsuarioCampoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    inscricao<T extends FormularioUsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FormularioUsuarioDefaultArgs<ExtArgs>>): Prisma__FormularioUsuarioClient<$Result.GetResult<Prisma.$FormularioUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ArquivoUsuario model
   */
  interface ArquivoUsuarioFieldRefs {
    readonly id: FieldRef<"ArquivoUsuario", 'String'>
    readonly nomeOriginal: FieldRef<"ArquivoUsuario", 'String'>
    readonly nomeArmazenado: FieldRef<"ArquivoUsuario", 'String'>
    readonly tamanho: FieldRef<"ArquivoUsuario", 'Int'>
    readonly tipo: FieldRef<"ArquivoUsuario", 'String'>
    readonly caminho: FieldRef<"ArquivoUsuario", 'String'>
    readonly campoId: FieldRef<"ArquivoUsuario", 'String'>
    readonly inscricaoId: FieldRef<"ArquivoUsuario", 'String'>
    readonly createdAt: FieldRef<"ArquivoUsuario", 'DateTime'>
    readonly updatedAt: FieldRef<"ArquivoUsuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ArquivoUsuario findUnique
   */
  export type ArquivoUsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoUsuario
     */
    select?: ArquivoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoUsuario
     */
    omit?: ArquivoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which ArquivoUsuario to fetch.
     */
    where: ArquivoUsuarioWhereUniqueInput
  }

  /**
   * ArquivoUsuario findUniqueOrThrow
   */
  export type ArquivoUsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoUsuario
     */
    select?: ArquivoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoUsuario
     */
    omit?: ArquivoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which ArquivoUsuario to fetch.
     */
    where: ArquivoUsuarioWhereUniqueInput
  }

  /**
   * ArquivoUsuario findFirst
   */
  export type ArquivoUsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoUsuario
     */
    select?: ArquivoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoUsuario
     */
    omit?: ArquivoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which ArquivoUsuario to fetch.
     */
    where?: ArquivoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArquivoUsuarios to fetch.
     */
    orderBy?: ArquivoUsuarioOrderByWithRelationInput | ArquivoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ArquivoUsuarios.
     */
    cursor?: ArquivoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArquivoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArquivoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ArquivoUsuarios.
     */
    distinct?: ArquivoUsuarioScalarFieldEnum | ArquivoUsuarioScalarFieldEnum[]
  }

  /**
   * ArquivoUsuario findFirstOrThrow
   */
  export type ArquivoUsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoUsuario
     */
    select?: ArquivoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoUsuario
     */
    omit?: ArquivoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which ArquivoUsuario to fetch.
     */
    where?: ArquivoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArquivoUsuarios to fetch.
     */
    orderBy?: ArquivoUsuarioOrderByWithRelationInput | ArquivoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ArquivoUsuarios.
     */
    cursor?: ArquivoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArquivoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArquivoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ArquivoUsuarios.
     */
    distinct?: ArquivoUsuarioScalarFieldEnum | ArquivoUsuarioScalarFieldEnum[]
  }

  /**
   * ArquivoUsuario findMany
   */
  export type ArquivoUsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoUsuario
     */
    select?: ArquivoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoUsuario
     */
    omit?: ArquivoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which ArquivoUsuarios to fetch.
     */
    where?: ArquivoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArquivoUsuarios to fetch.
     */
    orderBy?: ArquivoUsuarioOrderByWithRelationInput | ArquivoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ArquivoUsuarios.
     */
    cursor?: ArquivoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArquivoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArquivoUsuarios.
     */
    skip?: number
    distinct?: ArquivoUsuarioScalarFieldEnum | ArquivoUsuarioScalarFieldEnum[]
  }

  /**
   * ArquivoUsuario create
   */
  export type ArquivoUsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoUsuario
     */
    select?: ArquivoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoUsuario
     */
    omit?: ArquivoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a ArquivoUsuario.
     */
    data: XOR<ArquivoUsuarioCreateInput, ArquivoUsuarioUncheckedCreateInput>
  }

  /**
   * ArquivoUsuario createMany
   */
  export type ArquivoUsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ArquivoUsuarios.
     */
    data: ArquivoUsuarioCreateManyInput | ArquivoUsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ArquivoUsuario createManyAndReturn
   */
  export type ArquivoUsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoUsuario
     */
    select?: ArquivoUsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoUsuario
     */
    omit?: ArquivoUsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many ArquivoUsuarios.
     */
    data: ArquivoUsuarioCreateManyInput | ArquivoUsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoUsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ArquivoUsuario update
   */
  export type ArquivoUsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoUsuario
     */
    select?: ArquivoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoUsuario
     */
    omit?: ArquivoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a ArquivoUsuario.
     */
    data: XOR<ArquivoUsuarioUpdateInput, ArquivoUsuarioUncheckedUpdateInput>
    /**
     * Choose, which ArquivoUsuario to update.
     */
    where: ArquivoUsuarioWhereUniqueInput
  }

  /**
   * ArquivoUsuario updateMany
   */
  export type ArquivoUsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ArquivoUsuarios.
     */
    data: XOR<ArquivoUsuarioUpdateManyMutationInput, ArquivoUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which ArquivoUsuarios to update
     */
    where?: ArquivoUsuarioWhereInput
    /**
     * Limit how many ArquivoUsuarios to update.
     */
    limit?: number
  }

  /**
   * ArquivoUsuario updateManyAndReturn
   */
  export type ArquivoUsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoUsuario
     */
    select?: ArquivoUsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoUsuario
     */
    omit?: ArquivoUsuarioOmit<ExtArgs> | null
    /**
     * The data used to update ArquivoUsuarios.
     */
    data: XOR<ArquivoUsuarioUpdateManyMutationInput, ArquivoUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which ArquivoUsuarios to update
     */
    where?: ArquivoUsuarioWhereInput
    /**
     * Limit how many ArquivoUsuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoUsuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ArquivoUsuario upsert
   */
  export type ArquivoUsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoUsuario
     */
    select?: ArquivoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoUsuario
     */
    omit?: ArquivoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoUsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the ArquivoUsuario to update in case it exists.
     */
    where: ArquivoUsuarioWhereUniqueInput
    /**
     * In case the ArquivoUsuario found by the `where` argument doesn't exist, create a new ArquivoUsuario with this data.
     */
    create: XOR<ArquivoUsuarioCreateInput, ArquivoUsuarioUncheckedCreateInput>
    /**
     * In case the ArquivoUsuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ArquivoUsuarioUpdateInput, ArquivoUsuarioUncheckedUpdateInput>
  }

  /**
   * ArquivoUsuario delete
   */
  export type ArquivoUsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoUsuario
     */
    select?: ArquivoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoUsuario
     */
    omit?: ArquivoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoUsuarioInclude<ExtArgs> | null
    /**
     * Filter which ArquivoUsuario to delete.
     */
    where: ArquivoUsuarioWhereUniqueInput
  }

  /**
   * ArquivoUsuario deleteMany
   */
  export type ArquivoUsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ArquivoUsuarios to delete
     */
    where?: ArquivoUsuarioWhereInput
    /**
     * Limit how many ArquivoUsuarios to delete.
     */
    limit?: number
  }

  /**
   * ArquivoUsuario.campo
   */
  export type ArquivoUsuario$campoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormularioUsuarioCampo
     */
    select?: FormularioUsuarioCampoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormularioUsuarioCampo
     */
    omit?: FormularioUsuarioCampoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FormularioUsuarioCampoInclude<ExtArgs> | null
    where?: FormularioUsuarioCampoWhereInput
  }

  /**
   * ArquivoUsuario without action
   */
  export type ArquivoUsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArquivoUsuario
     */
    select?: ArquivoUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArquivoUsuario
     */
    omit?: ArquivoUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArquivoUsuarioInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    email: 'email',
    cpf: 'cpf',
    senha: 'senha',
    tipo: 'tipo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const InscricaoScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    editalId: 'editalId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type InscricaoScalarFieldEnum = (typeof InscricaoScalarFieldEnum)[keyof typeof InscricaoScalarFieldEnum]


  export const EditalScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    dataCriacao: 'dataCriacao',
    dataPublicacao: 'dataPublicacao',
    dataEncerramento: 'dataEncerramento',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    senha: 'senha'
  };

  export type EditalScalarFieldEnum = (typeof EditalScalarFieldEnum)[keyof typeof EditalScalarFieldEnum]


  export const ArquivoEditalScalarFieldEnum: {
    id: 'id',
    url: 'url',
    rotulo: 'rotulo',
    editalId: 'editalId'
  };

  export type ArquivoEditalScalarFieldEnum = (typeof ArquivoEditalScalarFieldEnum)[keyof typeof ArquivoEditalScalarFieldEnum]


  export const FormularioScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    dataInicio: 'dataInicio',
    dataFim: 'dataFim',
    editalId: 'editalId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FormularioScalarFieldEnum = (typeof FormularioScalarFieldEnum)[keyof typeof FormularioScalarFieldEnum]


  export const CampoFormularioScalarFieldEnum: {
    id: 'id',
    rotulo: 'rotulo',
    tipo: 'tipo',
    obrigatorio: 'obrigatorio',
    formularioId: 'formularioId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CampoFormularioScalarFieldEnum = (typeof CampoFormularioScalarFieldEnum)[keyof typeof CampoFormularioScalarFieldEnum]


  export const FormularioUsuarioScalarFieldEnum: {
    id: 'id',
    dataHora: 'dataHora',
    usuarioId: 'usuarioId',
    formularioId: 'formularioId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FormularioUsuarioScalarFieldEnum = (typeof FormularioUsuarioScalarFieldEnum)[keyof typeof FormularioUsuarioScalarFieldEnum]


  export const FormularioUsuarioCampoScalarFieldEnum: {
    id: 'id',
    valor: 'valor',
    campoFormularioId: 'campoFormularioId',
    formularioUsuarioId: 'formularioUsuarioId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FormularioUsuarioCampoScalarFieldEnum = (typeof FormularioUsuarioCampoScalarFieldEnum)[keyof typeof FormularioUsuarioCampoScalarFieldEnum]


  export const ArquivoUsuarioScalarFieldEnum: {
    id: 'id',
    nomeOriginal: 'nomeOriginal',
    nomeArmazenado: 'nomeArmazenado',
    tamanho: 'tamanho',
    tipo: 'tipo',
    caminho: 'caminho',
    campoId: 'campoId',
    inscricaoId: 'inscricaoId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ArquivoUsuarioScalarFieldEnum = (typeof ArquivoUsuarioScalarFieldEnum)[keyof typeof ArquivoUsuarioScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id?: StringFilter<"Usuario"> | string
    nome?: StringFilter<"Usuario"> | string
    email?: StringFilter<"Usuario"> | string
    cpf?: StringFilter<"Usuario"> | string
    senha?: StringFilter<"Usuario"> | string
    tipo?: IntFilter<"Usuario"> | number
    createdAt?: DateTimeFilter<"Usuario"> | Date | string
    updatedAt?: DateTimeFilter<"Usuario"> | Date | string
    formularios?: FormularioUsuarioListRelationFilter
    inscricoes?: InscricaoListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    cpf?: SortOrder
    senha?: SortOrder
    tipo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    formularios?: FormularioUsuarioOrderByRelationAggregateInput
    inscricoes?: InscricaoOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    cpf?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nome?: StringFilter<"Usuario"> | string
    senha?: StringFilter<"Usuario"> | string
    tipo?: IntFilter<"Usuario"> | number
    createdAt?: DateTimeFilter<"Usuario"> | Date | string
    updatedAt?: DateTimeFilter<"Usuario"> | Date | string
    formularios?: FormularioUsuarioListRelationFilter
    inscricoes?: InscricaoListRelationFilter
  }, "id" | "email" | "cpf">

  export type UsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    cpf?: SortOrder
    senha?: SortOrder
    tipo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Usuario"> | string
    nome?: StringWithAggregatesFilter<"Usuario"> | string
    email?: StringWithAggregatesFilter<"Usuario"> | string
    cpf?: StringWithAggregatesFilter<"Usuario"> | string
    senha?: StringWithAggregatesFilter<"Usuario"> | string
    tipo?: IntWithAggregatesFilter<"Usuario"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
  }

  export type InscricaoWhereInput = {
    AND?: InscricaoWhereInput | InscricaoWhereInput[]
    OR?: InscricaoWhereInput[]
    NOT?: InscricaoWhereInput | InscricaoWhereInput[]
    id?: StringFilter<"Inscricao"> | string
    usuarioId?: StringFilter<"Inscricao"> | string
    editalId?: StringFilter<"Inscricao"> | string
    createdAt?: DateTimeFilter<"Inscricao"> | Date | string
    updatedAt?: DateTimeFilter<"Inscricao"> | Date | string
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    edital?: XOR<EditalScalarRelationFilter, EditalWhereInput>
  }

  export type InscricaoOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    editalId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    edital?: EditalOrderByWithRelationInput
  }

  export type InscricaoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: InscricaoWhereInput | InscricaoWhereInput[]
    OR?: InscricaoWhereInput[]
    NOT?: InscricaoWhereInput | InscricaoWhereInput[]
    usuarioId?: StringFilter<"Inscricao"> | string
    editalId?: StringFilter<"Inscricao"> | string
    createdAt?: DateTimeFilter<"Inscricao"> | Date | string
    updatedAt?: DateTimeFilter<"Inscricao"> | Date | string
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    edital?: XOR<EditalScalarRelationFilter, EditalWhereInput>
  }, "id">

  export type InscricaoOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    editalId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: InscricaoCountOrderByAggregateInput
    _max?: InscricaoMaxOrderByAggregateInput
    _min?: InscricaoMinOrderByAggregateInput
  }

  export type InscricaoScalarWhereWithAggregatesInput = {
    AND?: InscricaoScalarWhereWithAggregatesInput | InscricaoScalarWhereWithAggregatesInput[]
    OR?: InscricaoScalarWhereWithAggregatesInput[]
    NOT?: InscricaoScalarWhereWithAggregatesInput | InscricaoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Inscricao"> | string
    usuarioId?: StringWithAggregatesFilter<"Inscricao"> | string
    editalId?: StringWithAggregatesFilter<"Inscricao"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Inscricao"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Inscricao"> | Date | string
  }

  export type EditalWhereInput = {
    AND?: EditalWhereInput | EditalWhereInput[]
    OR?: EditalWhereInput[]
    NOT?: EditalWhereInput | EditalWhereInput[]
    id?: StringFilter<"Edital"> | string
    titulo?: StringFilter<"Edital"> | string
    dataCriacao?: DateTimeFilter<"Edital"> | Date | string
    dataPublicacao?: DateTimeFilter<"Edital"> | Date | string
    dataEncerramento?: DateTimeNullableFilter<"Edital"> | Date | string | null
    createdAt?: DateTimeFilter<"Edital"> | Date | string
    updatedAt?: DateTimeFilter<"Edital"> | Date | string
    senha?: StringFilter<"Edital"> | string
    formulario?: XOR<FormularioNullableScalarRelationFilter, FormularioWhereInput> | null
    inscricoes?: InscricaoListRelationFilter
    arquivos?: ArquivoEditalListRelationFilter
  }

  export type EditalOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrder
    dataCriacao?: SortOrder
    dataPublicacao?: SortOrder
    dataEncerramento?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    senha?: SortOrder
    formulario?: FormularioOrderByWithRelationInput
    inscricoes?: InscricaoOrderByRelationAggregateInput
    arquivos?: ArquivoEditalOrderByRelationAggregateInput
  }

  export type EditalWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EditalWhereInput | EditalWhereInput[]
    OR?: EditalWhereInput[]
    NOT?: EditalWhereInput | EditalWhereInput[]
    titulo?: StringFilter<"Edital"> | string
    dataCriacao?: DateTimeFilter<"Edital"> | Date | string
    dataPublicacao?: DateTimeFilter<"Edital"> | Date | string
    dataEncerramento?: DateTimeNullableFilter<"Edital"> | Date | string | null
    createdAt?: DateTimeFilter<"Edital"> | Date | string
    updatedAt?: DateTimeFilter<"Edital"> | Date | string
    senha?: StringFilter<"Edital"> | string
    formulario?: XOR<FormularioNullableScalarRelationFilter, FormularioWhereInput> | null
    inscricoes?: InscricaoListRelationFilter
    arquivos?: ArquivoEditalListRelationFilter
  }, "id">

  export type EditalOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrder
    dataCriacao?: SortOrder
    dataPublicacao?: SortOrder
    dataEncerramento?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    senha?: SortOrder
    _count?: EditalCountOrderByAggregateInput
    _max?: EditalMaxOrderByAggregateInput
    _min?: EditalMinOrderByAggregateInput
  }

  export type EditalScalarWhereWithAggregatesInput = {
    AND?: EditalScalarWhereWithAggregatesInput | EditalScalarWhereWithAggregatesInput[]
    OR?: EditalScalarWhereWithAggregatesInput[]
    NOT?: EditalScalarWhereWithAggregatesInput | EditalScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Edital"> | string
    titulo?: StringWithAggregatesFilter<"Edital"> | string
    dataCriacao?: DateTimeWithAggregatesFilter<"Edital"> | Date | string
    dataPublicacao?: DateTimeWithAggregatesFilter<"Edital"> | Date | string
    dataEncerramento?: DateTimeNullableWithAggregatesFilter<"Edital"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Edital"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Edital"> | Date | string
    senha?: StringWithAggregatesFilter<"Edital"> | string
  }

  export type ArquivoEditalWhereInput = {
    AND?: ArquivoEditalWhereInput | ArquivoEditalWhereInput[]
    OR?: ArquivoEditalWhereInput[]
    NOT?: ArquivoEditalWhereInput | ArquivoEditalWhereInput[]
    id?: StringFilter<"ArquivoEdital"> | string
    url?: StringFilter<"ArquivoEdital"> | string
    rotulo?: StringFilter<"ArquivoEdital"> | string
    editalId?: StringNullableFilter<"ArquivoEdital"> | string | null
    edital?: XOR<EditalNullableScalarRelationFilter, EditalWhereInput> | null
  }

  export type ArquivoEditalOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    rotulo?: SortOrder
    editalId?: SortOrderInput | SortOrder
    edital?: EditalOrderByWithRelationInput
  }

  export type ArquivoEditalWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ArquivoEditalWhereInput | ArquivoEditalWhereInput[]
    OR?: ArquivoEditalWhereInput[]
    NOT?: ArquivoEditalWhereInput | ArquivoEditalWhereInput[]
    url?: StringFilter<"ArquivoEdital"> | string
    rotulo?: StringFilter<"ArquivoEdital"> | string
    editalId?: StringNullableFilter<"ArquivoEdital"> | string | null
    edital?: XOR<EditalNullableScalarRelationFilter, EditalWhereInput> | null
  }, "id">

  export type ArquivoEditalOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    rotulo?: SortOrder
    editalId?: SortOrderInput | SortOrder
    _count?: ArquivoEditalCountOrderByAggregateInput
    _max?: ArquivoEditalMaxOrderByAggregateInput
    _min?: ArquivoEditalMinOrderByAggregateInput
  }

  export type ArquivoEditalScalarWhereWithAggregatesInput = {
    AND?: ArquivoEditalScalarWhereWithAggregatesInput | ArquivoEditalScalarWhereWithAggregatesInput[]
    OR?: ArquivoEditalScalarWhereWithAggregatesInput[]
    NOT?: ArquivoEditalScalarWhereWithAggregatesInput | ArquivoEditalScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ArquivoEdital"> | string
    url?: StringWithAggregatesFilter<"ArquivoEdital"> | string
    rotulo?: StringWithAggregatesFilter<"ArquivoEdital"> | string
    editalId?: StringNullableWithAggregatesFilter<"ArquivoEdital"> | string | null
  }

  export type FormularioWhereInput = {
    AND?: FormularioWhereInput | FormularioWhereInput[]
    OR?: FormularioWhereInput[]
    NOT?: FormularioWhereInput | FormularioWhereInput[]
    id?: StringFilter<"Formulario"> | string
    titulo?: StringFilter<"Formulario"> | string
    dataInicio?: DateTimeFilter<"Formulario"> | Date | string
    dataFim?: DateTimeFilter<"Formulario"> | Date | string
    editalId?: StringFilter<"Formulario"> | string
    createdAt?: DateTimeFilter<"Formulario"> | Date | string
    updatedAt?: DateTimeFilter<"Formulario"> | Date | string
    edital?: XOR<EditalScalarRelationFilter, EditalWhereInput>
    campos?: CampoFormularioListRelationFilter
    inscricoes?: FormularioUsuarioListRelationFilter
  }

  export type FormularioOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    editalId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    edital?: EditalOrderByWithRelationInput
    campos?: CampoFormularioOrderByRelationAggregateInput
    inscricoes?: FormularioUsuarioOrderByRelationAggregateInput
  }

  export type FormularioWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    editalId?: string
    AND?: FormularioWhereInput | FormularioWhereInput[]
    OR?: FormularioWhereInput[]
    NOT?: FormularioWhereInput | FormularioWhereInput[]
    titulo?: StringFilter<"Formulario"> | string
    dataInicio?: DateTimeFilter<"Formulario"> | Date | string
    dataFim?: DateTimeFilter<"Formulario"> | Date | string
    createdAt?: DateTimeFilter<"Formulario"> | Date | string
    updatedAt?: DateTimeFilter<"Formulario"> | Date | string
    edital?: XOR<EditalScalarRelationFilter, EditalWhereInput>
    campos?: CampoFormularioListRelationFilter
    inscricoes?: FormularioUsuarioListRelationFilter
  }, "id" | "editalId">

  export type FormularioOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    editalId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FormularioCountOrderByAggregateInput
    _max?: FormularioMaxOrderByAggregateInput
    _min?: FormularioMinOrderByAggregateInput
  }

  export type FormularioScalarWhereWithAggregatesInput = {
    AND?: FormularioScalarWhereWithAggregatesInput | FormularioScalarWhereWithAggregatesInput[]
    OR?: FormularioScalarWhereWithAggregatesInput[]
    NOT?: FormularioScalarWhereWithAggregatesInput | FormularioScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Formulario"> | string
    titulo?: StringWithAggregatesFilter<"Formulario"> | string
    dataInicio?: DateTimeWithAggregatesFilter<"Formulario"> | Date | string
    dataFim?: DateTimeWithAggregatesFilter<"Formulario"> | Date | string
    editalId?: StringWithAggregatesFilter<"Formulario"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Formulario"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Formulario"> | Date | string
  }

  export type CampoFormularioWhereInput = {
    AND?: CampoFormularioWhereInput | CampoFormularioWhereInput[]
    OR?: CampoFormularioWhereInput[]
    NOT?: CampoFormularioWhereInput | CampoFormularioWhereInput[]
    id?: StringFilter<"CampoFormulario"> | string
    rotulo?: StringFilter<"CampoFormulario"> | string
    tipo?: IntFilter<"CampoFormulario"> | number
    obrigatorio?: IntFilter<"CampoFormulario"> | number
    formularioId?: StringFilter<"CampoFormulario"> | string
    createdAt?: DateTimeFilter<"CampoFormulario"> | Date | string
    updatedAt?: DateTimeFilter<"CampoFormulario"> | Date | string
    formulario?: XOR<FormularioScalarRelationFilter, FormularioWhereInput>
    respostas?: FormularioUsuarioCampoListRelationFilter
  }

  export type CampoFormularioOrderByWithRelationInput = {
    id?: SortOrder
    rotulo?: SortOrder
    tipo?: SortOrder
    obrigatorio?: SortOrder
    formularioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    formulario?: FormularioOrderByWithRelationInput
    respostas?: FormularioUsuarioCampoOrderByRelationAggregateInput
  }

  export type CampoFormularioWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CampoFormularioWhereInput | CampoFormularioWhereInput[]
    OR?: CampoFormularioWhereInput[]
    NOT?: CampoFormularioWhereInput | CampoFormularioWhereInput[]
    rotulo?: StringFilter<"CampoFormulario"> | string
    tipo?: IntFilter<"CampoFormulario"> | number
    obrigatorio?: IntFilter<"CampoFormulario"> | number
    formularioId?: StringFilter<"CampoFormulario"> | string
    createdAt?: DateTimeFilter<"CampoFormulario"> | Date | string
    updatedAt?: DateTimeFilter<"CampoFormulario"> | Date | string
    formulario?: XOR<FormularioScalarRelationFilter, FormularioWhereInput>
    respostas?: FormularioUsuarioCampoListRelationFilter
  }, "id">

  export type CampoFormularioOrderByWithAggregationInput = {
    id?: SortOrder
    rotulo?: SortOrder
    tipo?: SortOrder
    obrigatorio?: SortOrder
    formularioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CampoFormularioCountOrderByAggregateInput
    _avg?: CampoFormularioAvgOrderByAggregateInput
    _max?: CampoFormularioMaxOrderByAggregateInput
    _min?: CampoFormularioMinOrderByAggregateInput
    _sum?: CampoFormularioSumOrderByAggregateInput
  }

  export type CampoFormularioScalarWhereWithAggregatesInput = {
    AND?: CampoFormularioScalarWhereWithAggregatesInput | CampoFormularioScalarWhereWithAggregatesInput[]
    OR?: CampoFormularioScalarWhereWithAggregatesInput[]
    NOT?: CampoFormularioScalarWhereWithAggregatesInput | CampoFormularioScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CampoFormulario"> | string
    rotulo?: StringWithAggregatesFilter<"CampoFormulario"> | string
    tipo?: IntWithAggregatesFilter<"CampoFormulario"> | number
    obrigatorio?: IntWithAggregatesFilter<"CampoFormulario"> | number
    formularioId?: StringWithAggregatesFilter<"CampoFormulario"> | string
    createdAt?: DateTimeWithAggregatesFilter<"CampoFormulario"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CampoFormulario"> | Date | string
  }

  export type FormularioUsuarioWhereInput = {
    AND?: FormularioUsuarioWhereInput | FormularioUsuarioWhereInput[]
    OR?: FormularioUsuarioWhereInput[]
    NOT?: FormularioUsuarioWhereInput | FormularioUsuarioWhereInput[]
    id?: StringFilter<"FormularioUsuario"> | string
    dataHora?: DateTimeFilter<"FormularioUsuario"> | Date | string
    usuarioId?: StringFilter<"FormularioUsuario"> | string
    formularioId?: StringFilter<"FormularioUsuario"> | string
    createdAt?: DateTimeFilter<"FormularioUsuario"> | Date | string
    updatedAt?: DateTimeFilter<"FormularioUsuario"> | Date | string
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    formulario?: XOR<FormularioScalarRelationFilter, FormularioWhereInput>
    campos?: FormularioUsuarioCampoListRelationFilter
    arquivos?: ArquivoUsuarioListRelationFilter
  }

  export type FormularioUsuarioOrderByWithRelationInput = {
    id?: SortOrder
    dataHora?: SortOrder
    usuarioId?: SortOrder
    formularioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    formulario?: FormularioOrderByWithRelationInput
    campos?: FormularioUsuarioCampoOrderByRelationAggregateInput
    arquivos?: ArquivoUsuarioOrderByRelationAggregateInput
  }

  export type FormularioUsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FormularioUsuarioWhereInput | FormularioUsuarioWhereInput[]
    OR?: FormularioUsuarioWhereInput[]
    NOT?: FormularioUsuarioWhereInput | FormularioUsuarioWhereInput[]
    dataHora?: DateTimeFilter<"FormularioUsuario"> | Date | string
    usuarioId?: StringFilter<"FormularioUsuario"> | string
    formularioId?: StringFilter<"FormularioUsuario"> | string
    createdAt?: DateTimeFilter<"FormularioUsuario"> | Date | string
    updatedAt?: DateTimeFilter<"FormularioUsuario"> | Date | string
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    formulario?: XOR<FormularioScalarRelationFilter, FormularioWhereInput>
    campos?: FormularioUsuarioCampoListRelationFilter
    arquivos?: ArquivoUsuarioListRelationFilter
  }, "id">

  export type FormularioUsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    dataHora?: SortOrder
    usuarioId?: SortOrder
    formularioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FormularioUsuarioCountOrderByAggregateInput
    _max?: FormularioUsuarioMaxOrderByAggregateInput
    _min?: FormularioUsuarioMinOrderByAggregateInput
  }

  export type FormularioUsuarioScalarWhereWithAggregatesInput = {
    AND?: FormularioUsuarioScalarWhereWithAggregatesInput | FormularioUsuarioScalarWhereWithAggregatesInput[]
    OR?: FormularioUsuarioScalarWhereWithAggregatesInput[]
    NOT?: FormularioUsuarioScalarWhereWithAggregatesInput | FormularioUsuarioScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FormularioUsuario"> | string
    dataHora?: DateTimeWithAggregatesFilter<"FormularioUsuario"> | Date | string
    usuarioId?: StringWithAggregatesFilter<"FormularioUsuario"> | string
    formularioId?: StringWithAggregatesFilter<"FormularioUsuario"> | string
    createdAt?: DateTimeWithAggregatesFilter<"FormularioUsuario"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FormularioUsuario"> | Date | string
  }

  export type FormularioUsuarioCampoWhereInput = {
    AND?: FormularioUsuarioCampoWhereInput | FormularioUsuarioCampoWhereInput[]
    OR?: FormularioUsuarioCampoWhereInput[]
    NOT?: FormularioUsuarioCampoWhereInput | FormularioUsuarioCampoWhereInput[]
    id?: StringFilter<"FormularioUsuarioCampo"> | string
    valor?: StringFilter<"FormularioUsuarioCampo"> | string
    campoFormularioId?: StringFilter<"FormularioUsuarioCampo"> | string
    formularioUsuarioId?: StringFilter<"FormularioUsuarioCampo"> | string
    createdAt?: DateTimeFilter<"FormularioUsuarioCampo"> | Date | string
    updatedAt?: DateTimeFilter<"FormularioUsuarioCampo"> | Date | string
    campo?: XOR<CampoFormularioScalarRelationFilter, CampoFormularioWhereInput>
    inscricao?: XOR<FormularioUsuarioScalarRelationFilter, FormularioUsuarioWhereInput>
    arquivo?: XOR<ArquivoUsuarioNullableScalarRelationFilter, ArquivoUsuarioWhereInput> | null
  }

  export type FormularioUsuarioCampoOrderByWithRelationInput = {
    id?: SortOrder
    valor?: SortOrder
    campoFormularioId?: SortOrder
    formularioUsuarioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    campo?: CampoFormularioOrderByWithRelationInput
    inscricao?: FormularioUsuarioOrderByWithRelationInput
    arquivo?: ArquivoUsuarioOrderByWithRelationInput
  }

  export type FormularioUsuarioCampoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FormularioUsuarioCampoWhereInput | FormularioUsuarioCampoWhereInput[]
    OR?: FormularioUsuarioCampoWhereInput[]
    NOT?: FormularioUsuarioCampoWhereInput | FormularioUsuarioCampoWhereInput[]
    valor?: StringFilter<"FormularioUsuarioCampo"> | string
    campoFormularioId?: StringFilter<"FormularioUsuarioCampo"> | string
    formularioUsuarioId?: StringFilter<"FormularioUsuarioCampo"> | string
    createdAt?: DateTimeFilter<"FormularioUsuarioCampo"> | Date | string
    updatedAt?: DateTimeFilter<"FormularioUsuarioCampo"> | Date | string
    campo?: XOR<CampoFormularioScalarRelationFilter, CampoFormularioWhereInput>
    inscricao?: XOR<FormularioUsuarioScalarRelationFilter, FormularioUsuarioWhereInput>
    arquivo?: XOR<ArquivoUsuarioNullableScalarRelationFilter, ArquivoUsuarioWhereInput> | null
  }, "id">

  export type FormularioUsuarioCampoOrderByWithAggregationInput = {
    id?: SortOrder
    valor?: SortOrder
    campoFormularioId?: SortOrder
    formularioUsuarioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FormularioUsuarioCampoCountOrderByAggregateInput
    _max?: FormularioUsuarioCampoMaxOrderByAggregateInput
    _min?: FormularioUsuarioCampoMinOrderByAggregateInput
  }

  export type FormularioUsuarioCampoScalarWhereWithAggregatesInput = {
    AND?: FormularioUsuarioCampoScalarWhereWithAggregatesInput | FormularioUsuarioCampoScalarWhereWithAggregatesInput[]
    OR?: FormularioUsuarioCampoScalarWhereWithAggregatesInput[]
    NOT?: FormularioUsuarioCampoScalarWhereWithAggregatesInput | FormularioUsuarioCampoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FormularioUsuarioCampo"> | string
    valor?: StringWithAggregatesFilter<"FormularioUsuarioCampo"> | string
    campoFormularioId?: StringWithAggregatesFilter<"FormularioUsuarioCampo"> | string
    formularioUsuarioId?: StringWithAggregatesFilter<"FormularioUsuarioCampo"> | string
    createdAt?: DateTimeWithAggregatesFilter<"FormularioUsuarioCampo"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FormularioUsuarioCampo"> | Date | string
  }

  export type ArquivoUsuarioWhereInput = {
    AND?: ArquivoUsuarioWhereInput | ArquivoUsuarioWhereInput[]
    OR?: ArquivoUsuarioWhereInput[]
    NOT?: ArquivoUsuarioWhereInput | ArquivoUsuarioWhereInput[]
    id?: StringFilter<"ArquivoUsuario"> | string
    nomeOriginal?: StringFilter<"ArquivoUsuario"> | string
    nomeArmazenado?: StringFilter<"ArquivoUsuario"> | string
    tamanho?: IntFilter<"ArquivoUsuario"> | number
    tipo?: StringFilter<"ArquivoUsuario"> | string
    caminho?: StringFilter<"ArquivoUsuario"> | string
    campoId?: StringNullableFilter<"ArquivoUsuario"> | string | null
    inscricaoId?: StringFilter<"ArquivoUsuario"> | string
    createdAt?: DateTimeFilter<"ArquivoUsuario"> | Date | string
    updatedAt?: DateTimeFilter<"ArquivoUsuario"> | Date | string
    campo?: XOR<FormularioUsuarioCampoNullableScalarRelationFilter, FormularioUsuarioCampoWhereInput> | null
    inscricao?: XOR<FormularioUsuarioScalarRelationFilter, FormularioUsuarioWhereInput>
  }

  export type ArquivoUsuarioOrderByWithRelationInput = {
    id?: SortOrder
    nomeOriginal?: SortOrder
    nomeArmazenado?: SortOrder
    tamanho?: SortOrder
    tipo?: SortOrder
    caminho?: SortOrder
    campoId?: SortOrderInput | SortOrder
    inscricaoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    campo?: FormularioUsuarioCampoOrderByWithRelationInput
    inscricao?: FormularioUsuarioOrderByWithRelationInput
  }

  export type ArquivoUsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    campoId?: string
    AND?: ArquivoUsuarioWhereInput | ArquivoUsuarioWhereInput[]
    OR?: ArquivoUsuarioWhereInput[]
    NOT?: ArquivoUsuarioWhereInput | ArquivoUsuarioWhereInput[]
    nomeOriginal?: StringFilter<"ArquivoUsuario"> | string
    nomeArmazenado?: StringFilter<"ArquivoUsuario"> | string
    tamanho?: IntFilter<"ArquivoUsuario"> | number
    tipo?: StringFilter<"ArquivoUsuario"> | string
    caminho?: StringFilter<"ArquivoUsuario"> | string
    inscricaoId?: StringFilter<"ArquivoUsuario"> | string
    createdAt?: DateTimeFilter<"ArquivoUsuario"> | Date | string
    updatedAt?: DateTimeFilter<"ArquivoUsuario"> | Date | string
    campo?: XOR<FormularioUsuarioCampoNullableScalarRelationFilter, FormularioUsuarioCampoWhereInput> | null
    inscricao?: XOR<FormularioUsuarioScalarRelationFilter, FormularioUsuarioWhereInput>
  }, "id" | "campoId">

  export type ArquivoUsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    nomeOriginal?: SortOrder
    nomeArmazenado?: SortOrder
    tamanho?: SortOrder
    tipo?: SortOrder
    caminho?: SortOrder
    campoId?: SortOrderInput | SortOrder
    inscricaoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ArquivoUsuarioCountOrderByAggregateInput
    _avg?: ArquivoUsuarioAvgOrderByAggregateInput
    _max?: ArquivoUsuarioMaxOrderByAggregateInput
    _min?: ArquivoUsuarioMinOrderByAggregateInput
    _sum?: ArquivoUsuarioSumOrderByAggregateInput
  }

  export type ArquivoUsuarioScalarWhereWithAggregatesInput = {
    AND?: ArquivoUsuarioScalarWhereWithAggregatesInput | ArquivoUsuarioScalarWhereWithAggregatesInput[]
    OR?: ArquivoUsuarioScalarWhereWithAggregatesInput[]
    NOT?: ArquivoUsuarioScalarWhereWithAggregatesInput | ArquivoUsuarioScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ArquivoUsuario"> | string
    nomeOriginal?: StringWithAggregatesFilter<"ArquivoUsuario"> | string
    nomeArmazenado?: StringWithAggregatesFilter<"ArquivoUsuario"> | string
    tamanho?: IntWithAggregatesFilter<"ArquivoUsuario"> | number
    tipo?: StringWithAggregatesFilter<"ArquivoUsuario"> | string
    caminho?: StringWithAggregatesFilter<"ArquivoUsuario"> | string
    campoId?: StringNullableWithAggregatesFilter<"ArquivoUsuario"> | string | null
    inscricaoId?: StringWithAggregatesFilter<"ArquivoUsuario"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ArquivoUsuario"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ArquivoUsuario"> | Date | string
  }

  export type UsuarioCreateInput = {
    id?: string
    nome: string
    email: string
    cpf: string
    senha: string
    tipo: number
    createdAt?: Date | string
    updatedAt?: Date | string
    formularios?: FormularioUsuarioCreateNestedManyWithoutUsuarioInput
    inscricoes?: InscricaoCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateInput = {
    id?: string
    nome: string
    email: string
    cpf: string
    senha: string
    tipo: number
    createdAt?: Date | string
    updatedAt?: Date | string
    formularios?: FormularioUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    inscricoes?: InscricaoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tipo?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    formularios?: FormularioUsuarioUpdateManyWithoutUsuarioNestedInput
    inscricoes?: InscricaoUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tipo?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    formularios?: FormularioUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    inscricoes?: InscricaoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateManyInput = {
    id?: string
    nome: string
    email: string
    cpf: string
    senha: string
    tipo: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UsuarioUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tipo?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tipo?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InscricaoCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    usuario: UsuarioCreateNestedOneWithoutInscricoesInput
    edital: EditalCreateNestedOneWithoutInscricoesInput
  }

  export type InscricaoUncheckedCreateInput = {
    id?: string
    usuarioId: string
    editalId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InscricaoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutInscricoesNestedInput
    edital?: EditalUpdateOneRequiredWithoutInscricoesNestedInput
  }

  export type InscricaoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuarioId?: StringFieldUpdateOperationsInput | string
    editalId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InscricaoCreateManyInput = {
    id?: string
    usuarioId: string
    editalId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InscricaoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InscricaoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuarioId?: StringFieldUpdateOperationsInput | string
    editalId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EditalCreateInput = {
    id?: string
    titulo: string
    dataCriacao?: Date | string
    dataPublicacao: Date | string
    dataEncerramento?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    senha: string
    formulario?: FormularioCreateNestedOneWithoutEditalInput
    inscricoes?: InscricaoCreateNestedManyWithoutEditalInput
    arquivos?: ArquivoEditalCreateNestedManyWithoutEditalInput
  }

  export type EditalUncheckedCreateInput = {
    id?: string
    titulo: string
    dataCriacao?: Date | string
    dataPublicacao: Date | string
    dataEncerramento?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    senha: string
    formulario?: FormularioUncheckedCreateNestedOneWithoutEditalInput
    inscricoes?: InscricaoUncheckedCreateNestedManyWithoutEditalInput
    arquivos?: ArquivoEditalUncheckedCreateNestedManyWithoutEditalInput
  }

  export type EditalUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPublicacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataEncerramento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    senha?: StringFieldUpdateOperationsInput | string
    formulario?: FormularioUpdateOneWithoutEditalNestedInput
    inscricoes?: InscricaoUpdateManyWithoutEditalNestedInput
    arquivos?: ArquivoEditalUpdateManyWithoutEditalNestedInput
  }

  export type EditalUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPublicacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataEncerramento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    senha?: StringFieldUpdateOperationsInput | string
    formulario?: FormularioUncheckedUpdateOneWithoutEditalNestedInput
    inscricoes?: InscricaoUncheckedUpdateManyWithoutEditalNestedInput
    arquivos?: ArquivoEditalUncheckedUpdateManyWithoutEditalNestedInput
  }

  export type EditalCreateManyInput = {
    id?: string
    titulo: string
    dataCriacao?: Date | string
    dataPublicacao: Date | string
    dataEncerramento?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    senha: string
  }

  export type EditalUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPublicacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataEncerramento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    senha?: StringFieldUpdateOperationsInput | string
  }

  export type EditalUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPublicacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataEncerramento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    senha?: StringFieldUpdateOperationsInput | string
  }

  export type ArquivoEditalCreateInput = {
    id?: string
    url: string
    rotulo: string
    edital?: EditalCreateNestedOneWithoutArquivosInput
  }

  export type ArquivoEditalUncheckedCreateInput = {
    id?: string
    url: string
    rotulo: string
    editalId?: string | null
  }

  export type ArquivoEditalUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    rotulo?: StringFieldUpdateOperationsInput | string
    edital?: EditalUpdateOneWithoutArquivosNestedInput
  }

  export type ArquivoEditalUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    rotulo?: StringFieldUpdateOperationsInput | string
    editalId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArquivoEditalCreateManyInput = {
    id?: string
    url: string
    rotulo: string
    editalId?: string | null
  }

  export type ArquivoEditalUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    rotulo?: StringFieldUpdateOperationsInput | string
  }

  export type ArquivoEditalUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    rotulo?: StringFieldUpdateOperationsInput | string
    editalId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FormularioCreateInput = {
    id?: string
    titulo: string
    dataInicio: Date | string
    dataFim: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    edital: EditalCreateNestedOneWithoutFormularioInput
    campos?: CampoFormularioCreateNestedManyWithoutFormularioInput
    inscricoes?: FormularioUsuarioCreateNestedManyWithoutFormularioInput
  }

  export type FormularioUncheckedCreateInput = {
    id?: string
    titulo: string
    dataInicio: Date | string
    dataFim: Date | string
    editalId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    campos?: CampoFormularioUncheckedCreateNestedManyWithoutFormularioInput
    inscricoes?: FormularioUsuarioUncheckedCreateNestedManyWithoutFormularioInput
  }

  export type FormularioUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    edital?: EditalUpdateOneRequiredWithoutFormularioNestedInput
    campos?: CampoFormularioUpdateManyWithoutFormularioNestedInput
    inscricoes?: FormularioUsuarioUpdateManyWithoutFormularioNestedInput
  }

  export type FormularioUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    editalId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    campos?: CampoFormularioUncheckedUpdateManyWithoutFormularioNestedInput
    inscricoes?: FormularioUsuarioUncheckedUpdateManyWithoutFormularioNestedInput
  }

  export type FormularioCreateManyInput = {
    id?: string
    titulo: string
    dataInicio: Date | string
    dataFim: Date | string
    editalId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FormularioUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormularioUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    editalId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CampoFormularioCreateInput = {
    id?: string
    rotulo: string
    tipo: number
    obrigatorio: number
    createdAt?: Date | string
    updatedAt?: Date | string
    formulario: FormularioCreateNestedOneWithoutCamposInput
    respostas?: FormularioUsuarioCampoCreateNestedManyWithoutCampoInput
  }

  export type CampoFormularioUncheckedCreateInput = {
    id?: string
    rotulo: string
    tipo: number
    obrigatorio: number
    formularioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    respostas?: FormularioUsuarioCampoUncheckedCreateNestedManyWithoutCampoInput
  }

  export type CampoFormularioUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rotulo?: StringFieldUpdateOperationsInput | string
    tipo?: IntFieldUpdateOperationsInput | number
    obrigatorio?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    formulario?: FormularioUpdateOneRequiredWithoutCamposNestedInput
    respostas?: FormularioUsuarioCampoUpdateManyWithoutCampoNestedInput
  }

  export type CampoFormularioUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rotulo?: StringFieldUpdateOperationsInput | string
    tipo?: IntFieldUpdateOperationsInput | number
    obrigatorio?: IntFieldUpdateOperationsInput | number
    formularioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    respostas?: FormularioUsuarioCampoUncheckedUpdateManyWithoutCampoNestedInput
  }

  export type CampoFormularioCreateManyInput = {
    id?: string
    rotulo: string
    tipo: number
    obrigatorio: number
    formularioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CampoFormularioUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    rotulo?: StringFieldUpdateOperationsInput | string
    tipo?: IntFieldUpdateOperationsInput | number
    obrigatorio?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CampoFormularioUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    rotulo?: StringFieldUpdateOperationsInput | string
    tipo?: IntFieldUpdateOperationsInput | number
    obrigatorio?: IntFieldUpdateOperationsInput | number
    formularioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormularioUsuarioCreateInput = {
    id?: string
    dataHora?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    usuario: UsuarioCreateNestedOneWithoutFormulariosInput
    formulario: FormularioCreateNestedOneWithoutInscricoesInput
    campos?: FormularioUsuarioCampoCreateNestedManyWithoutInscricaoInput
    arquivos?: ArquivoUsuarioCreateNestedManyWithoutInscricaoInput
  }

  export type FormularioUsuarioUncheckedCreateInput = {
    id?: string
    dataHora?: Date | string
    usuarioId: string
    formularioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    campos?: FormularioUsuarioCampoUncheckedCreateNestedManyWithoutInscricaoInput
    arquivos?: ArquivoUsuarioUncheckedCreateNestedManyWithoutInscricaoInput
  }

  export type FormularioUsuarioUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataHora?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutFormulariosNestedInput
    formulario?: FormularioUpdateOneRequiredWithoutInscricoesNestedInput
    campos?: FormularioUsuarioCampoUpdateManyWithoutInscricaoNestedInput
    arquivos?: ArquivoUsuarioUpdateManyWithoutInscricaoNestedInput
  }

  export type FormularioUsuarioUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: StringFieldUpdateOperationsInput | string
    formularioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    campos?: FormularioUsuarioCampoUncheckedUpdateManyWithoutInscricaoNestedInput
    arquivos?: ArquivoUsuarioUncheckedUpdateManyWithoutInscricaoNestedInput
  }

  export type FormularioUsuarioCreateManyInput = {
    id?: string
    dataHora?: Date | string
    usuarioId: string
    formularioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FormularioUsuarioUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataHora?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormularioUsuarioUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: StringFieldUpdateOperationsInput | string
    formularioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormularioUsuarioCampoCreateInput = {
    id?: string
    valor: string
    createdAt?: Date | string
    updatedAt?: Date | string
    campo: CampoFormularioCreateNestedOneWithoutRespostasInput
    inscricao: FormularioUsuarioCreateNestedOneWithoutCamposInput
    arquivo?: ArquivoUsuarioCreateNestedOneWithoutCampoInput
  }

  export type FormularioUsuarioCampoUncheckedCreateInput = {
    id?: string
    valor: string
    campoFormularioId: string
    formularioUsuarioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    arquivo?: ArquivoUsuarioUncheckedCreateNestedOneWithoutCampoInput
  }

  export type FormularioUsuarioCampoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    campo?: CampoFormularioUpdateOneRequiredWithoutRespostasNestedInput
    inscricao?: FormularioUsuarioUpdateOneRequiredWithoutCamposNestedInput
    arquivo?: ArquivoUsuarioUpdateOneWithoutCampoNestedInput
  }

  export type FormularioUsuarioCampoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    campoFormularioId?: StringFieldUpdateOperationsInput | string
    formularioUsuarioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    arquivo?: ArquivoUsuarioUncheckedUpdateOneWithoutCampoNestedInput
  }

  export type FormularioUsuarioCampoCreateManyInput = {
    id?: string
    valor: string
    campoFormularioId: string
    formularioUsuarioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FormularioUsuarioCampoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormularioUsuarioCampoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    campoFormularioId?: StringFieldUpdateOperationsInput | string
    formularioUsuarioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArquivoUsuarioCreateInput = {
    id?: string
    nomeOriginal: string
    nomeArmazenado: string
    tamanho: number
    tipo: string
    caminho: string
    createdAt?: Date | string
    updatedAt?: Date | string
    campo?: FormularioUsuarioCampoCreateNestedOneWithoutArquivoInput
    inscricao: FormularioUsuarioCreateNestedOneWithoutArquivosInput
  }

  export type ArquivoUsuarioUncheckedCreateInput = {
    id?: string
    nomeOriginal: string
    nomeArmazenado: string
    tamanho: number
    tipo: string
    caminho: string
    campoId?: string | null
    inscricaoId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ArquivoUsuarioUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nomeOriginal?: StringFieldUpdateOperationsInput | string
    nomeArmazenado?: StringFieldUpdateOperationsInput | string
    tamanho?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    caminho?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    campo?: FormularioUsuarioCampoUpdateOneWithoutArquivoNestedInput
    inscricao?: FormularioUsuarioUpdateOneRequiredWithoutArquivosNestedInput
  }

  export type ArquivoUsuarioUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nomeOriginal?: StringFieldUpdateOperationsInput | string
    nomeArmazenado?: StringFieldUpdateOperationsInput | string
    tamanho?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    caminho?: StringFieldUpdateOperationsInput | string
    campoId?: NullableStringFieldUpdateOperationsInput | string | null
    inscricaoId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArquivoUsuarioCreateManyInput = {
    id?: string
    nomeOriginal: string
    nomeArmazenado: string
    tamanho: number
    tipo: string
    caminho: string
    campoId?: string | null
    inscricaoId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ArquivoUsuarioUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nomeOriginal?: StringFieldUpdateOperationsInput | string
    nomeArmazenado?: StringFieldUpdateOperationsInput | string
    tamanho?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    caminho?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArquivoUsuarioUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nomeOriginal?: StringFieldUpdateOperationsInput | string
    nomeArmazenado?: StringFieldUpdateOperationsInput | string
    tamanho?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    caminho?: StringFieldUpdateOperationsInput | string
    campoId?: NullableStringFieldUpdateOperationsInput | string | null
    inscricaoId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type FormularioUsuarioListRelationFilter = {
    every?: FormularioUsuarioWhereInput
    some?: FormularioUsuarioWhereInput
    none?: FormularioUsuarioWhereInput
  }

  export type InscricaoListRelationFilter = {
    every?: InscricaoWhereInput
    some?: InscricaoWhereInput
    none?: InscricaoWhereInput
  }

  export type FormularioUsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InscricaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    cpf?: SortOrder
    senha?: SortOrder
    tipo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    tipo?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    cpf?: SortOrder
    senha?: SortOrder
    tipo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    cpf?: SortOrder
    senha?: SortOrder
    tipo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    tipo?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type UsuarioScalarRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type EditalScalarRelationFilter = {
    is?: EditalWhereInput
    isNot?: EditalWhereInput
  }

  export type InscricaoCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    editalId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InscricaoMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    editalId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InscricaoMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    editalId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type FormularioNullableScalarRelationFilter = {
    is?: FormularioWhereInput | null
    isNot?: FormularioWhereInput | null
  }

  export type ArquivoEditalListRelationFilter = {
    every?: ArquivoEditalWhereInput
    some?: ArquivoEditalWhereInput
    none?: ArquivoEditalWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ArquivoEditalOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EditalCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    dataCriacao?: SortOrder
    dataPublicacao?: SortOrder
    dataEncerramento?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    senha?: SortOrder
  }

  export type EditalMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    dataCriacao?: SortOrder
    dataPublicacao?: SortOrder
    dataEncerramento?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    senha?: SortOrder
  }

  export type EditalMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    dataCriacao?: SortOrder
    dataPublicacao?: SortOrder
    dataEncerramento?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    senha?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EditalNullableScalarRelationFilter = {
    is?: EditalWhereInput | null
    isNot?: EditalWhereInput | null
  }

  export type ArquivoEditalCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    rotulo?: SortOrder
    editalId?: SortOrder
  }

  export type ArquivoEditalMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    rotulo?: SortOrder
    editalId?: SortOrder
  }

  export type ArquivoEditalMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    rotulo?: SortOrder
    editalId?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type CampoFormularioListRelationFilter = {
    every?: CampoFormularioWhereInput
    some?: CampoFormularioWhereInput
    none?: CampoFormularioWhereInput
  }

  export type CampoFormularioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FormularioCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    editalId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FormularioMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    editalId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FormularioMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    editalId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FormularioScalarRelationFilter = {
    is?: FormularioWhereInput
    isNot?: FormularioWhereInput
  }

  export type FormularioUsuarioCampoListRelationFilter = {
    every?: FormularioUsuarioCampoWhereInput
    some?: FormularioUsuarioCampoWhereInput
    none?: FormularioUsuarioCampoWhereInput
  }

  export type FormularioUsuarioCampoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CampoFormularioCountOrderByAggregateInput = {
    id?: SortOrder
    rotulo?: SortOrder
    tipo?: SortOrder
    obrigatorio?: SortOrder
    formularioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CampoFormularioAvgOrderByAggregateInput = {
    tipo?: SortOrder
    obrigatorio?: SortOrder
  }

  export type CampoFormularioMaxOrderByAggregateInput = {
    id?: SortOrder
    rotulo?: SortOrder
    tipo?: SortOrder
    obrigatorio?: SortOrder
    formularioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CampoFormularioMinOrderByAggregateInput = {
    id?: SortOrder
    rotulo?: SortOrder
    tipo?: SortOrder
    obrigatorio?: SortOrder
    formularioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CampoFormularioSumOrderByAggregateInput = {
    tipo?: SortOrder
    obrigatorio?: SortOrder
  }

  export type ArquivoUsuarioListRelationFilter = {
    every?: ArquivoUsuarioWhereInput
    some?: ArquivoUsuarioWhereInput
    none?: ArquivoUsuarioWhereInput
  }

  export type ArquivoUsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FormularioUsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    dataHora?: SortOrder
    usuarioId?: SortOrder
    formularioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FormularioUsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    dataHora?: SortOrder
    usuarioId?: SortOrder
    formularioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FormularioUsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    dataHora?: SortOrder
    usuarioId?: SortOrder
    formularioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CampoFormularioScalarRelationFilter = {
    is?: CampoFormularioWhereInput
    isNot?: CampoFormularioWhereInput
  }

  export type FormularioUsuarioScalarRelationFilter = {
    is?: FormularioUsuarioWhereInput
    isNot?: FormularioUsuarioWhereInput
  }

  export type ArquivoUsuarioNullableScalarRelationFilter = {
    is?: ArquivoUsuarioWhereInput | null
    isNot?: ArquivoUsuarioWhereInput | null
  }

  export type FormularioUsuarioCampoCountOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    campoFormularioId?: SortOrder
    formularioUsuarioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FormularioUsuarioCampoMaxOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    campoFormularioId?: SortOrder
    formularioUsuarioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FormularioUsuarioCampoMinOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    campoFormularioId?: SortOrder
    formularioUsuarioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FormularioUsuarioCampoNullableScalarRelationFilter = {
    is?: FormularioUsuarioCampoWhereInput | null
    isNot?: FormularioUsuarioCampoWhereInput | null
  }

  export type ArquivoUsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    nomeOriginal?: SortOrder
    nomeArmazenado?: SortOrder
    tamanho?: SortOrder
    tipo?: SortOrder
    caminho?: SortOrder
    campoId?: SortOrder
    inscricaoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ArquivoUsuarioAvgOrderByAggregateInput = {
    tamanho?: SortOrder
  }

  export type ArquivoUsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nomeOriginal?: SortOrder
    nomeArmazenado?: SortOrder
    tamanho?: SortOrder
    tipo?: SortOrder
    caminho?: SortOrder
    campoId?: SortOrder
    inscricaoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ArquivoUsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    nomeOriginal?: SortOrder
    nomeArmazenado?: SortOrder
    tamanho?: SortOrder
    tipo?: SortOrder
    caminho?: SortOrder
    campoId?: SortOrder
    inscricaoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ArquivoUsuarioSumOrderByAggregateInput = {
    tamanho?: SortOrder
  }

  export type FormularioUsuarioCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<FormularioUsuarioCreateWithoutUsuarioInput, FormularioUsuarioUncheckedCreateWithoutUsuarioInput> | FormularioUsuarioCreateWithoutUsuarioInput[] | FormularioUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FormularioUsuarioCreateOrConnectWithoutUsuarioInput | FormularioUsuarioCreateOrConnectWithoutUsuarioInput[]
    createMany?: FormularioUsuarioCreateManyUsuarioInputEnvelope
    connect?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
  }

  export type InscricaoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<InscricaoCreateWithoutUsuarioInput, InscricaoUncheckedCreateWithoutUsuarioInput> | InscricaoCreateWithoutUsuarioInput[] | InscricaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: InscricaoCreateOrConnectWithoutUsuarioInput | InscricaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: InscricaoCreateManyUsuarioInputEnvelope
    connect?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
  }

  export type FormularioUsuarioUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<FormularioUsuarioCreateWithoutUsuarioInput, FormularioUsuarioUncheckedCreateWithoutUsuarioInput> | FormularioUsuarioCreateWithoutUsuarioInput[] | FormularioUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FormularioUsuarioCreateOrConnectWithoutUsuarioInput | FormularioUsuarioCreateOrConnectWithoutUsuarioInput[]
    createMany?: FormularioUsuarioCreateManyUsuarioInputEnvelope
    connect?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
  }

  export type InscricaoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<InscricaoCreateWithoutUsuarioInput, InscricaoUncheckedCreateWithoutUsuarioInput> | InscricaoCreateWithoutUsuarioInput[] | InscricaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: InscricaoCreateOrConnectWithoutUsuarioInput | InscricaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: InscricaoCreateManyUsuarioInputEnvelope
    connect?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type FormularioUsuarioUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<FormularioUsuarioCreateWithoutUsuarioInput, FormularioUsuarioUncheckedCreateWithoutUsuarioInput> | FormularioUsuarioCreateWithoutUsuarioInput[] | FormularioUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FormularioUsuarioCreateOrConnectWithoutUsuarioInput | FormularioUsuarioCreateOrConnectWithoutUsuarioInput[]
    upsert?: FormularioUsuarioUpsertWithWhereUniqueWithoutUsuarioInput | FormularioUsuarioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: FormularioUsuarioCreateManyUsuarioInputEnvelope
    set?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
    disconnect?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
    delete?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
    connect?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
    update?: FormularioUsuarioUpdateWithWhereUniqueWithoutUsuarioInput | FormularioUsuarioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: FormularioUsuarioUpdateManyWithWhereWithoutUsuarioInput | FormularioUsuarioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: FormularioUsuarioScalarWhereInput | FormularioUsuarioScalarWhereInput[]
  }

  export type InscricaoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<InscricaoCreateWithoutUsuarioInput, InscricaoUncheckedCreateWithoutUsuarioInput> | InscricaoCreateWithoutUsuarioInput[] | InscricaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: InscricaoCreateOrConnectWithoutUsuarioInput | InscricaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: InscricaoUpsertWithWhereUniqueWithoutUsuarioInput | InscricaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: InscricaoCreateManyUsuarioInputEnvelope
    set?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
    disconnect?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
    delete?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
    connect?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
    update?: InscricaoUpdateWithWhereUniqueWithoutUsuarioInput | InscricaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: InscricaoUpdateManyWithWhereWithoutUsuarioInput | InscricaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: InscricaoScalarWhereInput | InscricaoScalarWhereInput[]
  }

  export type FormularioUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<FormularioUsuarioCreateWithoutUsuarioInput, FormularioUsuarioUncheckedCreateWithoutUsuarioInput> | FormularioUsuarioCreateWithoutUsuarioInput[] | FormularioUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FormularioUsuarioCreateOrConnectWithoutUsuarioInput | FormularioUsuarioCreateOrConnectWithoutUsuarioInput[]
    upsert?: FormularioUsuarioUpsertWithWhereUniqueWithoutUsuarioInput | FormularioUsuarioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: FormularioUsuarioCreateManyUsuarioInputEnvelope
    set?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
    disconnect?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
    delete?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
    connect?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
    update?: FormularioUsuarioUpdateWithWhereUniqueWithoutUsuarioInput | FormularioUsuarioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: FormularioUsuarioUpdateManyWithWhereWithoutUsuarioInput | FormularioUsuarioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: FormularioUsuarioScalarWhereInput | FormularioUsuarioScalarWhereInput[]
  }

  export type InscricaoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<InscricaoCreateWithoutUsuarioInput, InscricaoUncheckedCreateWithoutUsuarioInput> | InscricaoCreateWithoutUsuarioInput[] | InscricaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: InscricaoCreateOrConnectWithoutUsuarioInput | InscricaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: InscricaoUpsertWithWhereUniqueWithoutUsuarioInput | InscricaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: InscricaoCreateManyUsuarioInputEnvelope
    set?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
    disconnect?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
    delete?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
    connect?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
    update?: InscricaoUpdateWithWhereUniqueWithoutUsuarioInput | InscricaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: InscricaoUpdateManyWithWhereWithoutUsuarioInput | InscricaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: InscricaoScalarWhereInput | InscricaoScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutInscricoesInput = {
    create?: XOR<UsuarioCreateWithoutInscricoesInput, UsuarioUncheckedCreateWithoutInscricoesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutInscricoesInput
    connect?: UsuarioWhereUniqueInput
  }

  export type EditalCreateNestedOneWithoutInscricoesInput = {
    create?: XOR<EditalCreateWithoutInscricoesInput, EditalUncheckedCreateWithoutInscricoesInput>
    connectOrCreate?: EditalCreateOrConnectWithoutInscricoesInput
    connect?: EditalWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutInscricoesNestedInput = {
    create?: XOR<UsuarioCreateWithoutInscricoesInput, UsuarioUncheckedCreateWithoutInscricoesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutInscricoesInput
    upsert?: UsuarioUpsertWithoutInscricoesInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutInscricoesInput, UsuarioUpdateWithoutInscricoesInput>, UsuarioUncheckedUpdateWithoutInscricoesInput>
  }

  export type EditalUpdateOneRequiredWithoutInscricoesNestedInput = {
    create?: XOR<EditalCreateWithoutInscricoesInput, EditalUncheckedCreateWithoutInscricoesInput>
    connectOrCreate?: EditalCreateOrConnectWithoutInscricoesInput
    upsert?: EditalUpsertWithoutInscricoesInput
    connect?: EditalWhereUniqueInput
    update?: XOR<XOR<EditalUpdateToOneWithWhereWithoutInscricoesInput, EditalUpdateWithoutInscricoesInput>, EditalUncheckedUpdateWithoutInscricoesInput>
  }

  export type FormularioCreateNestedOneWithoutEditalInput = {
    create?: XOR<FormularioCreateWithoutEditalInput, FormularioUncheckedCreateWithoutEditalInput>
    connectOrCreate?: FormularioCreateOrConnectWithoutEditalInput
    connect?: FormularioWhereUniqueInput
  }

  export type InscricaoCreateNestedManyWithoutEditalInput = {
    create?: XOR<InscricaoCreateWithoutEditalInput, InscricaoUncheckedCreateWithoutEditalInput> | InscricaoCreateWithoutEditalInput[] | InscricaoUncheckedCreateWithoutEditalInput[]
    connectOrCreate?: InscricaoCreateOrConnectWithoutEditalInput | InscricaoCreateOrConnectWithoutEditalInput[]
    createMany?: InscricaoCreateManyEditalInputEnvelope
    connect?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
  }

  export type ArquivoEditalCreateNestedManyWithoutEditalInput = {
    create?: XOR<ArquivoEditalCreateWithoutEditalInput, ArquivoEditalUncheckedCreateWithoutEditalInput> | ArquivoEditalCreateWithoutEditalInput[] | ArquivoEditalUncheckedCreateWithoutEditalInput[]
    connectOrCreate?: ArquivoEditalCreateOrConnectWithoutEditalInput | ArquivoEditalCreateOrConnectWithoutEditalInput[]
    createMany?: ArquivoEditalCreateManyEditalInputEnvelope
    connect?: ArquivoEditalWhereUniqueInput | ArquivoEditalWhereUniqueInput[]
  }

  export type FormularioUncheckedCreateNestedOneWithoutEditalInput = {
    create?: XOR<FormularioCreateWithoutEditalInput, FormularioUncheckedCreateWithoutEditalInput>
    connectOrCreate?: FormularioCreateOrConnectWithoutEditalInput
    connect?: FormularioWhereUniqueInput
  }

  export type InscricaoUncheckedCreateNestedManyWithoutEditalInput = {
    create?: XOR<InscricaoCreateWithoutEditalInput, InscricaoUncheckedCreateWithoutEditalInput> | InscricaoCreateWithoutEditalInput[] | InscricaoUncheckedCreateWithoutEditalInput[]
    connectOrCreate?: InscricaoCreateOrConnectWithoutEditalInput | InscricaoCreateOrConnectWithoutEditalInput[]
    createMany?: InscricaoCreateManyEditalInputEnvelope
    connect?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
  }

  export type ArquivoEditalUncheckedCreateNestedManyWithoutEditalInput = {
    create?: XOR<ArquivoEditalCreateWithoutEditalInput, ArquivoEditalUncheckedCreateWithoutEditalInput> | ArquivoEditalCreateWithoutEditalInput[] | ArquivoEditalUncheckedCreateWithoutEditalInput[]
    connectOrCreate?: ArquivoEditalCreateOrConnectWithoutEditalInput | ArquivoEditalCreateOrConnectWithoutEditalInput[]
    createMany?: ArquivoEditalCreateManyEditalInputEnvelope
    connect?: ArquivoEditalWhereUniqueInput | ArquivoEditalWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type FormularioUpdateOneWithoutEditalNestedInput = {
    create?: XOR<FormularioCreateWithoutEditalInput, FormularioUncheckedCreateWithoutEditalInput>
    connectOrCreate?: FormularioCreateOrConnectWithoutEditalInput
    upsert?: FormularioUpsertWithoutEditalInput
    disconnect?: FormularioWhereInput | boolean
    delete?: FormularioWhereInput | boolean
    connect?: FormularioWhereUniqueInput
    update?: XOR<XOR<FormularioUpdateToOneWithWhereWithoutEditalInput, FormularioUpdateWithoutEditalInput>, FormularioUncheckedUpdateWithoutEditalInput>
  }

  export type InscricaoUpdateManyWithoutEditalNestedInput = {
    create?: XOR<InscricaoCreateWithoutEditalInput, InscricaoUncheckedCreateWithoutEditalInput> | InscricaoCreateWithoutEditalInput[] | InscricaoUncheckedCreateWithoutEditalInput[]
    connectOrCreate?: InscricaoCreateOrConnectWithoutEditalInput | InscricaoCreateOrConnectWithoutEditalInput[]
    upsert?: InscricaoUpsertWithWhereUniqueWithoutEditalInput | InscricaoUpsertWithWhereUniqueWithoutEditalInput[]
    createMany?: InscricaoCreateManyEditalInputEnvelope
    set?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
    disconnect?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
    delete?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
    connect?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
    update?: InscricaoUpdateWithWhereUniqueWithoutEditalInput | InscricaoUpdateWithWhereUniqueWithoutEditalInput[]
    updateMany?: InscricaoUpdateManyWithWhereWithoutEditalInput | InscricaoUpdateManyWithWhereWithoutEditalInput[]
    deleteMany?: InscricaoScalarWhereInput | InscricaoScalarWhereInput[]
  }

  export type ArquivoEditalUpdateManyWithoutEditalNestedInput = {
    create?: XOR<ArquivoEditalCreateWithoutEditalInput, ArquivoEditalUncheckedCreateWithoutEditalInput> | ArquivoEditalCreateWithoutEditalInput[] | ArquivoEditalUncheckedCreateWithoutEditalInput[]
    connectOrCreate?: ArquivoEditalCreateOrConnectWithoutEditalInput | ArquivoEditalCreateOrConnectWithoutEditalInput[]
    upsert?: ArquivoEditalUpsertWithWhereUniqueWithoutEditalInput | ArquivoEditalUpsertWithWhereUniqueWithoutEditalInput[]
    createMany?: ArquivoEditalCreateManyEditalInputEnvelope
    set?: ArquivoEditalWhereUniqueInput | ArquivoEditalWhereUniqueInput[]
    disconnect?: ArquivoEditalWhereUniqueInput | ArquivoEditalWhereUniqueInput[]
    delete?: ArquivoEditalWhereUniqueInput | ArquivoEditalWhereUniqueInput[]
    connect?: ArquivoEditalWhereUniqueInput | ArquivoEditalWhereUniqueInput[]
    update?: ArquivoEditalUpdateWithWhereUniqueWithoutEditalInput | ArquivoEditalUpdateWithWhereUniqueWithoutEditalInput[]
    updateMany?: ArquivoEditalUpdateManyWithWhereWithoutEditalInput | ArquivoEditalUpdateManyWithWhereWithoutEditalInput[]
    deleteMany?: ArquivoEditalScalarWhereInput | ArquivoEditalScalarWhereInput[]
  }

  export type FormularioUncheckedUpdateOneWithoutEditalNestedInput = {
    create?: XOR<FormularioCreateWithoutEditalInput, FormularioUncheckedCreateWithoutEditalInput>
    connectOrCreate?: FormularioCreateOrConnectWithoutEditalInput
    upsert?: FormularioUpsertWithoutEditalInput
    disconnect?: FormularioWhereInput | boolean
    delete?: FormularioWhereInput | boolean
    connect?: FormularioWhereUniqueInput
    update?: XOR<XOR<FormularioUpdateToOneWithWhereWithoutEditalInput, FormularioUpdateWithoutEditalInput>, FormularioUncheckedUpdateWithoutEditalInput>
  }

  export type InscricaoUncheckedUpdateManyWithoutEditalNestedInput = {
    create?: XOR<InscricaoCreateWithoutEditalInput, InscricaoUncheckedCreateWithoutEditalInput> | InscricaoCreateWithoutEditalInput[] | InscricaoUncheckedCreateWithoutEditalInput[]
    connectOrCreate?: InscricaoCreateOrConnectWithoutEditalInput | InscricaoCreateOrConnectWithoutEditalInput[]
    upsert?: InscricaoUpsertWithWhereUniqueWithoutEditalInput | InscricaoUpsertWithWhereUniqueWithoutEditalInput[]
    createMany?: InscricaoCreateManyEditalInputEnvelope
    set?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
    disconnect?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
    delete?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
    connect?: InscricaoWhereUniqueInput | InscricaoWhereUniqueInput[]
    update?: InscricaoUpdateWithWhereUniqueWithoutEditalInput | InscricaoUpdateWithWhereUniqueWithoutEditalInput[]
    updateMany?: InscricaoUpdateManyWithWhereWithoutEditalInput | InscricaoUpdateManyWithWhereWithoutEditalInput[]
    deleteMany?: InscricaoScalarWhereInput | InscricaoScalarWhereInput[]
  }

  export type ArquivoEditalUncheckedUpdateManyWithoutEditalNestedInput = {
    create?: XOR<ArquivoEditalCreateWithoutEditalInput, ArquivoEditalUncheckedCreateWithoutEditalInput> | ArquivoEditalCreateWithoutEditalInput[] | ArquivoEditalUncheckedCreateWithoutEditalInput[]
    connectOrCreate?: ArquivoEditalCreateOrConnectWithoutEditalInput | ArquivoEditalCreateOrConnectWithoutEditalInput[]
    upsert?: ArquivoEditalUpsertWithWhereUniqueWithoutEditalInput | ArquivoEditalUpsertWithWhereUniqueWithoutEditalInput[]
    createMany?: ArquivoEditalCreateManyEditalInputEnvelope
    set?: ArquivoEditalWhereUniqueInput | ArquivoEditalWhereUniqueInput[]
    disconnect?: ArquivoEditalWhereUniqueInput | ArquivoEditalWhereUniqueInput[]
    delete?: ArquivoEditalWhereUniqueInput | ArquivoEditalWhereUniqueInput[]
    connect?: ArquivoEditalWhereUniqueInput | ArquivoEditalWhereUniqueInput[]
    update?: ArquivoEditalUpdateWithWhereUniqueWithoutEditalInput | ArquivoEditalUpdateWithWhereUniqueWithoutEditalInput[]
    updateMany?: ArquivoEditalUpdateManyWithWhereWithoutEditalInput | ArquivoEditalUpdateManyWithWhereWithoutEditalInput[]
    deleteMany?: ArquivoEditalScalarWhereInput | ArquivoEditalScalarWhereInput[]
  }

  export type EditalCreateNestedOneWithoutArquivosInput = {
    create?: XOR<EditalCreateWithoutArquivosInput, EditalUncheckedCreateWithoutArquivosInput>
    connectOrCreate?: EditalCreateOrConnectWithoutArquivosInput
    connect?: EditalWhereUniqueInput
  }

  export type EditalUpdateOneWithoutArquivosNestedInput = {
    create?: XOR<EditalCreateWithoutArquivosInput, EditalUncheckedCreateWithoutArquivosInput>
    connectOrCreate?: EditalCreateOrConnectWithoutArquivosInput
    upsert?: EditalUpsertWithoutArquivosInput
    disconnect?: EditalWhereInput | boolean
    delete?: EditalWhereInput | boolean
    connect?: EditalWhereUniqueInput
    update?: XOR<XOR<EditalUpdateToOneWithWhereWithoutArquivosInput, EditalUpdateWithoutArquivosInput>, EditalUncheckedUpdateWithoutArquivosInput>
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EditalCreateNestedOneWithoutFormularioInput = {
    create?: XOR<EditalCreateWithoutFormularioInput, EditalUncheckedCreateWithoutFormularioInput>
    connectOrCreate?: EditalCreateOrConnectWithoutFormularioInput
    connect?: EditalWhereUniqueInput
  }

  export type CampoFormularioCreateNestedManyWithoutFormularioInput = {
    create?: XOR<CampoFormularioCreateWithoutFormularioInput, CampoFormularioUncheckedCreateWithoutFormularioInput> | CampoFormularioCreateWithoutFormularioInput[] | CampoFormularioUncheckedCreateWithoutFormularioInput[]
    connectOrCreate?: CampoFormularioCreateOrConnectWithoutFormularioInput | CampoFormularioCreateOrConnectWithoutFormularioInput[]
    createMany?: CampoFormularioCreateManyFormularioInputEnvelope
    connect?: CampoFormularioWhereUniqueInput | CampoFormularioWhereUniqueInput[]
  }

  export type FormularioUsuarioCreateNestedManyWithoutFormularioInput = {
    create?: XOR<FormularioUsuarioCreateWithoutFormularioInput, FormularioUsuarioUncheckedCreateWithoutFormularioInput> | FormularioUsuarioCreateWithoutFormularioInput[] | FormularioUsuarioUncheckedCreateWithoutFormularioInput[]
    connectOrCreate?: FormularioUsuarioCreateOrConnectWithoutFormularioInput | FormularioUsuarioCreateOrConnectWithoutFormularioInput[]
    createMany?: FormularioUsuarioCreateManyFormularioInputEnvelope
    connect?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
  }

  export type CampoFormularioUncheckedCreateNestedManyWithoutFormularioInput = {
    create?: XOR<CampoFormularioCreateWithoutFormularioInput, CampoFormularioUncheckedCreateWithoutFormularioInput> | CampoFormularioCreateWithoutFormularioInput[] | CampoFormularioUncheckedCreateWithoutFormularioInput[]
    connectOrCreate?: CampoFormularioCreateOrConnectWithoutFormularioInput | CampoFormularioCreateOrConnectWithoutFormularioInput[]
    createMany?: CampoFormularioCreateManyFormularioInputEnvelope
    connect?: CampoFormularioWhereUniqueInput | CampoFormularioWhereUniqueInput[]
  }

  export type FormularioUsuarioUncheckedCreateNestedManyWithoutFormularioInput = {
    create?: XOR<FormularioUsuarioCreateWithoutFormularioInput, FormularioUsuarioUncheckedCreateWithoutFormularioInput> | FormularioUsuarioCreateWithoutFormularioInput[] | FormularioUsuarioUncheckedCreateWithoutFormularioInput[]
    connectOrCreate?: FormularioUsuarioCreateOrConnectWithoutFormularioInput | FormularioUsuarioCreateOrConnectWithoutFormularioInput[]
    createMany?: FormularioUsuarioCreateManyFormularioInputEnvelope
    connect?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
  }

  export type EditalUpdateOneRequiredWithoutFormularioNestedInput = {
    create?: XOR<EditalCreateWithoutFormularioInput, EditalUncheckedCreateWithoutFormularioInput>
    connectOrCreate?: EditalCreateOrConnectWithoutFormularioInput
    upsert?: EditalUpsertWithoutFormularioInput
    connect?: EditalWhereUniqueInput
    update?: XOR<XOR<EditalUpdateToOneWithWhereWithoutFormularioInput, EditalUpdateWithoutFormularioInput>, EditalUncheckedUpdateWithoutFormularioInput>
  }

  export type CampoFormularioUpdateManyWithoutFormularioNestedInput = {
    create?: XOR<CampoFormularioCreateWithoutFormularioInput, CampoFormularioUncheckedCreateWithoutFormularioInput> | CampoFormularioCreateWithoutFormularioInput[] | CampoFormularioUncheckedCreateWithoutFormularioInput[]
    connectOrCreate?: CampoFormularioCreateOrConnectWithoutFormularioInput | CampoFormularioCreateOrConnectWithoutFormularioInput[]
    upsert?: CampoFormularioUpsertWithWhereUniqueWithoutFormularioInput | CampoFormularioUpsertWithWhereUniqueWithoutFormularioInput[]
    createMany?: CampoFormularioCreateManyFormularioInputEnvelope
    set?: CampoFormularioWhereUniqueInput | CampoFormularioWhereUniqueInput[]
    disconnect?: CampoFormularioWhereUniqueInput | CampoFormularioWhereUniqueInput[]
    delete?: CampoFormularioWhereUniqueInput | CampoFormularioWhereUniqueInput[]
    connect?: CampoFormularioWhereUniqueInput | CampoFormularioWhereUniqueInput[]
    update?: CampoFormularioUpdateWithWhereUniqueWithoutFormularioInput | CampoFormularioUpdateWithWhereUniqueWithoutFormularioInput[]
    updateMany?: CampoFormularioUpdateManyWithWhereWithoutFormularioInput | CampoFormularioUpdateManyWithWhereWithoutFormularioInput[]
    deleteMany?: CampoFormularioScalarWhereInput | CampoFormularioScalarWhereInput[]
  }

  export type FormularioUsuarioUpdateManyWithoutFormularioNestedInput = {
    create?: XOR<FormularioUsuarioCreateWithoutFormularioInput, FormularioUsuarioUncheckedCreateWithoutFormularioInput> | FormularioUsuarioCreateWithoutFormularioInput[] | FormularioUsuarioUncheckedCreateWithoutFormularioInput[]
    connectOrCreate?: FormularioUsuarioCreateOrConnectWithoutFormularioInput | FormularioUsuarioCreateOrConnectWithoutFormularioInput[]
    upsert?: FormularioUsuarioUpsertWithWhereUniqueWithoutFormularioInput | FormularioUsuarioUpsertWithWhereUniqueWithoutFormularioInput[]
    createMany?: FormularioUsuarioCreateManyFormularioInputEnvelope
    set?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
    disconnect?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
    delete?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
    connect?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
    update?: FormularioUsuarioUpdateWithWhereUniqueWithoutFormularioInput | FormularioUsuarioUpdateWithWhereUniqueWithoutFormularioInput[]
    updateMany?: FormularioUsuarioUpdateManyWithWhereWithoutFormularioInput | FormularioUsuarioUpdateManyWithWhereWithoutFormularioInput[]
    deleteMany?: FormularioUsuarioScalarWhereInput | FormularioUsuarioScalarWhereInput[]
  }

  export type CampoFormularioUncheckedUpdateManyWithoutFormularioNestedInput = {
    create?: XOR<CampoFormularioCreateWithoutFormularioInput, CampoFormularioUncheckedCreateWithoutFormularioInput> | CampoFormularioCreateWithoutFormularioInput[] | CampoFormularioUncheckedCreateWithoutFormularioInput[]
    connectOrCreate?: CampoFormularioCreateOrConnectWithoutFormularioInput | CampoFormularioCreateOrConnectWithoutFormularioInput[]
    upsert?: CampoFormularioUpsertWithWhereUniqueWithoutFormularioInput | CampoFormularioUpsertWithWhereUniqueWithoutFormularioInput[]
    createMany?: CampoFormularioCreateManyFormularioInputEnvelope
    set?: CampoFormularioWhereUniqueInput | CampoFormularioWhereUniqueInput[]
    disconnect?: CampoFormularioWhereUniqueInput | CampoFormularioWhereUniqueInput[]
    delete?: CampoFormularioWhereUniqueInput | CampoFormularioWhereUniqueInput[]
    connect?: CampoFormularioWhereUniqueInput | CampoFormularioWhereUniqueInput[]
    update?: CampoFormularioUpdateWithWhereUniqueWithoutFormularioInput | CampoFormularioUpdateWithWhereUniqueWithoutFormularioInput[]
    updateMany?: CampoFormularioUpdateManyWithWhereWithoutFormularioInput | CampoFormularioUpdateManyWithWhereWithoutFormularioInput[]
    deleteMany?: CampoFormularioScalarWhereInput | CampoFormularioScalarWhereInput[]
  }

  export type FormularioUsuarioUncheckedUpdateManyWithoutFormularioNestedInput = {
    create?: XOR<FormularioUsuarioCreateWithoutFormularioInput, FormularioUsuarioUncheckedCreateWithoutFormularioInput> | FormularioUsuarioCreateWithoutFormularioInput[] | FormularioUsuarioUncheckedCreateWithoutFormularioInput[]
    connectOrCreate?: FormularioUsuarioCreateOrConnectWithoutFormularioInput | FormularioUsuarioCreateOrConnectWithoutFormularioInput[]
    upsert?: FormularioUsuarioUpsertWithWhereUniqueWithoutFormularioInput | FormularioUsuarioUpsertWithWhereUniqueWithoutFormularioInput[]
    createMany?: FormularioUsuarioCreateManyFormularioInputEnvelope
    set?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
    disconnect?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
    delete?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
    connect?: FormularioUsuarioWhereUniqueInput | FormularioUsuarioWhereUniqueInput[]
    update?: FormularioUsuarioUpdateWithWhereUniqueWithoutFormularioInput | FormularioUsuarioUpdateWithWhereUniqueWithoutFormularioInput[]
    updateMany?: FormularioUsuarioUpdateManyWithWhereWithoutFormularioInput | FormularioUsuarioUpdateManyWithWhereWithoutFormularioInput[]
    deleteMany?: FormularioUsuarioScalarWhereInput | FormularioUsuarioScalarWhereInput[]
  }

  export type FormularioCreateNestedOneWithoutCamposInput = {
    create?: XOR<FormularioCreateWithoutCamposInput, FormularioUncheckedCreateWithoutCamposInput>
    connectOrCreate?: FormularioCreateOrConnectWithoutCamposInput
    connect?: FormularioWhereUniqueInput
  }

  export type FormularioUsuarioCampoCreateNestedManyWithoutCampoInput = {
    create?: XOR<FormularioUsuarioCampoCreateWithoutCampoInput, FormularioUsuarioCampoUncheckedCreateWithoutCampoInput> | FormularioUsuarioCampoCreateWithoutCampoInput[] | FormularioUsuarioCampoUncheckedCreateWithoutCampoInput[]
    connectOrCreate?: FormularioUsuarioCampoCreateOrConnectWithoutCampoInput | FormularioUsuarioCampoCreateOrConnectWithoutCampoInput[]
    createMany?: FormularioUsuarioCampoCreateManyCampoInputEnvelope
    connect?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
  }

  export type FormularioUsuarioCampoUncheckedCreateNestedManyWithoutCampoInput = {
    create?: XOR<FormularioUsuarioCampoCreateWithoutCampoInput, FormularioUsuarioCampoUncheckedCreateWithoutCampoInput> | FormularioUsuarioCampoCreateWithoutCampoInput[] | FormularioUsuarioCampoUncheckedCreateWithoutCampoInput[]
    connectOrCreate?: FormularioUsuarioCampoCreateOrConnectWithoutCampoInput | FormularioUsuarioCampoCreateOrConnectWithoutCampoInput[]
    createMany?: FormularioUsuarioCampoCreateManyCampoInputEnvelope
    connect?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
  }

  export type FormularioUpdateOneRequiredWithoutCamposNestedInput = {
    create?: XOR<FormularioCreateWithoutCamposInput, FormularioUncheckedCreateWithoutCamposInput>
    connectOrCreate?: FormularioCreateOrConnectWithoutCamposInput
    upsert?: FormularioUpsertWithoutCamposInput
    connect?: FormularioWhereUniqueInput
    update?: XOR<XOR<FormularioUpdateToOneWithWhereWithoutCamposInput, FormularioUpdateWithoutCamposInput>, FormularioUncheckedUpdateWithoutCamposInput>
  }

  export type FormularioUsuarioCampoUpdateManyWithoutCampoNestedInput = {
    create?: XOR<FormularioUsuarioCampoCreateWithoutCampoInput, FormularioUsuarioCampoUncheckedCreateWithoutCampoInput> | FormularioUsuarioCampoCreateWithoutCampoInput[] | FormularioUsuarioCampoUncheckedCreateWithoutCampoInput[]
    connectOrCreate?: FormularioUsuarioCampoCreateOrConnectWithoutCampoInput | FormularioUsuarioCampoCreateOrConnectWithoutCampoInput[]
    upsert?: FormularioUsuarioCampoUpsertWithWhereUniqueWithoutCampoInput | FormularioUsuarioCampoUpsertWithWhereUniqueWithoutCampoInput[]
    createMany?: FormularioUsuarioCampoCreateManyCampoInputEnvelope
    set?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
    disconnect?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
    delete?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
    connect?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
    update?: FormularioUsuarioCampoUpdateWithWhereUniqueWithoutCampoInput | FormularioUsuarioCampoUpdateWithWhereUniqueWithoutCampoInput[]
    updateMany?: FormularioUsuarioCampoUpdateManyWithWhereWithoutCampoInput | FormularioUsuarioCampoUpdateManyWithWhereWithoutCampoInput[]
    deleteMany?: FormularioUsuarioCampoScalarWhereInput | FormularioUsuarioCampoScalarWhereInput[]
  }

  export type FormularioUsuarioCampoUncheckedUpdateManyWithoutCampoNestedInput = {
    create?: XOR<FormularioUsuarioCampoCreateWithoutCampoInput, FormularioUsuarioCampoUncheckedCreateWithoutCampoInput> | FormularioUsuarioCampoCreateWithoutCampoInput[] | FormularioUsuarioCampoUncheckedCreateWithoutCampoInput[]
    connectOrCreate?: FormularioUsuarioCampoCreateOrConnectWithoutCampoInput | FormularioUsuarioCampoCreateOrConnectWithoutCampoInput[]
    upsert?: FormularioUsuarioCampoUpsertWithWhereUniqueWithoutCampoInput | FormularioUsuarioCampoUpsertWithWhereUniqueWithoutCampoInput[]
    createMany?: FormularioUsuarioCampoCreateManyCampoInputEnvelope
    set?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
    disconnect?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
    delete?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
    connect?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
    update?: FormularioUsuarioCampoUpdateWithWhereUniqueWithoutCampoInput | FormularioUsuarioCampoUpdateWithWhereUniqueWithoutCampoInput[]
    updateMany?: FormularioUsuarioCampoUpdateManyWithWhereWithoutCampoInput | FormularioUsuarioCampoUpdateManyWithWhereWithoutCampoInput[]
    deleteMany?: FormularioUsuarioCampoScalarWhereInput | FormularioUsuarioCampoScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutFormulariosInput = {
    create?: XOR<UsuarioCreateWithoutFormulariosInput, UsuarioUncheckedCreateWithoutFormulariosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutFormulariosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type FormularioCreateNestedOneWithoutInscricoesInput = {
    create?: XOR<FormularioCreateWithoutInscricoesInput, FormularioUncheckedCreateWithoutInscricoesInput>
    connectOrCreate?: FormularioCreateOrConnectWithoutInscricoesInput
    connect?: FormularioWhereUniqueInput
  }

  export type FormularioUsuarioCampoCreateNestedManyWithoutInscricaoInput = {
    create?: XOR<FormularioUsuarioCampoCreateWithoutInscricaoInput, FormularioUsuarioCampoUncheckedCreateWithoutInscricaoInput> | FormularioUsuarioCampoCreateWithoutInscricaoInput[] | FormularioUsuarioCampoUncheckedCreateWithoutInscricaoInput[]
    connectOrCreate?: FormularioUsuarioCampoCreateOrConnectWithoutInscricaoInput | FormularioUsuarioCampoCreateOrConnectWithoutInscricaoInput[]
    createMany?: FormularioUsuarioCampoCreateManyInscricaoInputEnvelope
    connect?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
  }

  export type ArquivoUsuarioCreateNestedManyWithoutInscricaoInput = {
    create?: XOR<ArquivoUsuarioCreateWithoutInscricaoInput, ArquivoUsuarioUncheckedCreateWithoutInscricaoInput> | ArquivoUsuarioCreateWithoutInscricaoInput[] | ArquivoUsuarioUncheckedCreateWithoutInscricaoInput[]
    connectOrCreate?: ArquivoUsuarioCreateOrConnectWithoutInscricaoInput | ArquivoUsuarioCreateOrConnectWithoutInscricaoInput[]
    createMany?: ArquivoUsuarioCreateManyInscricaoInputEnvelope
    connect?: ArquivoUsuarioWhereUniqueInput | ArquivoUsuarioWhereUniqueInput[]
  }

  export type FormularioUsuarioCampoUncheckedCreateNestedManyWithoutInscricaoInput = {
    create?: XOR<FormularioUsuarioCampoCreateWithoutInscricaoInput, FormularioUsuarioCampoUncheckedCreateWithoutInscricaoInput> | FormularioUsuarioCampoCreateWithoutInscricaoInput[] | FormularioUsuarioCampoUncheckedCreateWithoutInscricaoInput[]
    connectOrCreate?: FormularioUsuarioCampoCreateOrConnectWithoutInscricaoInput | FormularioUsuarioCampoCreateOrConnectWithoutInscricaoInput[]
    createMany?: FormularioUsuarioCampoCreateManyInscricaoInputEnvelope
    connect?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
  }

  export type ArquivoUsuarioUncheckedCreateNestedManyWithoutInscricaoInput = {
    create?: XOR<ArquivoUsuarioCreateWithoutInscricaoInput, ArquivoUsuarioUncheckedCreateWithoutInscricaoInput> | ArquivoUsuarioCreateWithoutInscricaoInput[] | ArquivoUsuarioUncheckedCreateWithoutInscricaoInput[]
    connectOrCreate?: ArquivoUsuarioCreateOrConnectWithoutInscricaoInput | ArquivoUsuarioCreateOrConnectWithoutInscricaoInput[]
    createMany?: ArquivoUsuarioCreateManyInscricaoInputEnvelope
    connect?: ArquivoUsuarioWhereUniqueInput | ArquivoUsuarioWhereUniqueInput[]
  }

  export type UsuarioUpdateOneRequiredWithoutFormulariosNestedInput = {
    create?: XOR<UsuarioCreateWithoutFormulariosInput, UsuarioUncheckedCreateWithoutFormulariosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutFormulariosInput
    upsert?: UsuarioUpsertWithoutFormulariosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutFormulariosInput, UsuarioUpdateWithoutFormulariosInput>, UsuarioUncheckedUpdateWithoutFormulariosInput>
  }

  export type FormularioUpdateOneRequiredWithoutInscricoesNestedInput = {
    create?: XOR<FormularioCreateWithoutInscricoesInput, FormularioUncheckedCreateWithoutInscricoesInput>
    connectOrCreate?: FormularioCreateOrConnectWithoutInscricoesInput
    upsert?: FormularioUpsertWithoutInscricoesInput
    connect?: FormularioWhereUniqueInput
    update?: XOR<XOR<FormularioUpdateToOneWithWhereWithoutInscricoesInput, FormularioUpdateWithoutInscricoesInput>, FormularioUncheckedUpdateWithoutInscricoesInput>
  }

  export type FormularioUsuarioCampoUpdateManyWithoutInscricaoNestedInput = {
    create?: XOR<FormularioUsuarioCampoCreateWithoutInscricaoInput, FormularioUsuarioCampoUncheckedCreateWithoutInscricaoInput> | FormularioUsuarioCampoCreateWithoutInscricaoInput[] | FormularioUsuarioCampoUncheckedCreateWithoutInscricaoInput[]
    connectOrCreate?: FormularioUsuarioCampoCreateOrConnectWithoutInscricaoInput | FormularioUsuarioCampoCreateOrConnectWithoutInscricaoInput[]
    upsert?: FormularioUsuarioCampoUpsertWithWhereUniqueWithoutInscricaoInput | FormularioUsuarioCampoUpsertWithWhereUniqueWithoutInscricaoInput[]
    createMany?: FormularioUsuarioCampoCreateManyInscricaoInputEnvelope
    set?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
    disconnect?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
    delete?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
    connect?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
    update?: FormularioUsuarioCampoUpdateWithWhereUniqueWithoutInscricaoInput | FormularioUsuarioCampoUpdateWithWhereUniqueWithoutInscricaoInput[]
    updateMany?: FormularioUsuarioCampoUpdateManyWithWhereWithoutInscricaoInput | FormularioUsuarioCampoUpdateManyWithWhereWithoutInscricaoInput[]
    deleteMany?: FormularioUsuarioCampoScalarWhereInput | FormularioUsuarioCampoScalarWhereInput[]
  }

  export type ArquivoUsuarioUpdateManyWithoutInscricaoNestedInput = {
    create?: XOR<ArquivoUsuarioCreateWithoutInscricaoInput, ArquivoUsuarioUncheckedCreateWithoutInscricaoInput> | ArquivoUsuarioCreateWithoutInscricaoInput[] | ArquivoUsuarioUncheckedCreateWithoutInscricaoInput[]
    connectOrCreate?: ArquivoUsuarioCreateOrConnectWithoutInscricaoInput | ArquivoUsuarioCreateOrConnectWithoutInscricaoInput[]
    upsert?: ArquivoUsuarioUpsertWithWhereUniqueWithoutInscricaoInput | ArquivoUsuarioUpsertWithWhereUniqueWithoutInscricaoInput[]
    createMany?: ArquivoUsuarioCreateManyInscricaoInputEnvelope
    set?: ArquivoUsuarioWhereUniqueInput | ArquivoUsuarioWhereUniqueInput[]
    disconnect?: ArquivoUsuarioWhereUniqueInput | ArquivoUsuarioWhereUniqueInput[]
    delete?: ArquivoUsuarioWhereUniqueInput | ArquivoUsuarioWhereUniqueInput[]
    connect?: ArquivoUsuarioWhereUniqueInput | ArquivoUsuarioWhereUniqueInput[]
    update?: ArquivoUsuarioUpdateWithWhereUniqueWithoutInscricaoInput | ArquivoUsuarioUpdateWithWhereUniqueWithoutInscricaoInput[]
    updateMany?: ArquivoUsuarioUpdateManyWithWhereWithoutInscricaoInput | ArquivoUsuarioUpdateManyWithWhereWithoutInscricaoInput[]
    deleteMany?: ArquivoUsuarioScalarWhereInput | ArquivoUsuarioScalarWhereInput[]
  }

  export type FormularioUsuarioCampoUncheckedUpdateManyWithoutInscricaoNestedInput = {
    create?: XOR<FormularioUsuarioCampoCreateWithoutInscricaoInput, FormularioUsuarioCampoUncheckedCreateWithoutInscricaoInput> | FormularioUsuarioCampoCreateWithoutInscricaoInput[] | FormularioUsuarioCampoUncheckedCreateWithoutInscricaoInput[]
    connectOrCreate?: FormularioUsuarioCampoCreateOrConnectWithoutInscricaoInput | FormularioUsuarioCampoCreateOrConnectWithoutInscricaoInput[]
    upsert?: FormularioUsuarioCampoUpsertWithWhereUniqueWithoutInscricaoInput | FormularioUsuarioCampoUpsertWithWhereUniqueWithoutInscricaoInput[]
    createMany?: FormularioUsuarioCampoCreateManyInscricaoInputEnvelope
    set?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
    disconnect?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
    delete?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
    connect?: FormularioUsuarioCampoWhereUniqueInput | FormularioUsuarioCampoWhereUniqueInput[]
    update?: FormularioUsuarioCampoUpdateWithWhereUniqueWithoutInscricaoInput | FormularioUsuarioCampoUpdateWithWhereUniqueWithoutInscricaoInput[]
    updateMany?: FormularioUsuarioCampoUpdateManyWithWhereWithoutInscricaoInput | FormularioUsuarioCampoUpdateManyWithWhereWithoutInscricaoInput[]
    deleteMany?: FormularioUsuarioCampoScalarWhereInput | FormularioUsuarioCampoScalarWhereInput[]
  }

  export type ArquivoUsuarioUncheckedUpdateManyWithoutInscricaoNestedInput = {
    create?: XOR<ArquivoUsuarioCreateWithoutInscricaoInput, ArquivoUsuarioUncheckedCreateWithoutInscricaoInput> | ArquivoUsuarioCreateWithoutInscricaoInput[] | ArquivoUsuarioUncheckedCreateWithoutInscricaoInput[]
    connectOrCreate?: ArquivoUsuarioCreateOrConnectWithoutInscricaoInput | ArquivoUsuarioCreateOrConnectWithoutInscricaoInput[]
    upsert?: ArquivoUsuarioUpsertWithWhereUniqueWithoutInscricaoInput | ArquivoUsuarioUpsertWithWhereUniqueWithoutInscricaoInput[]
    createMany?: ArquivoUsuarioCreateManyInscricaoInputEnvelope
    set?: ArquivoUsuarioWhereUniqueInput | ArquivoUsuarioWhereUniqueInput[]
    disconnect?: ArquivoUsuarioWhereUniqueInput | ArquivoUsuarioWhereUniqueInput[]
    delete?: ArquivoUsuarioWhereUniqueInput | ArquivoUsuarioWhereUniqueInput[]
    connect?: ArquivoUsuarioWhereUniqueInput | ArquivoUsuarioWhereUniqueInput[]
    update?: ArquivoUsuarioUpdateWithWhereUniqueWithoutInscricaoInput | ArquivoUsuarioUpdateWithWhereUniqueWithoutInscricaoInput[]
    updateMany?: ArquivoUsuarioUpdateManyWithWhereWithoutInscricaoInput | ArquivoUsuarioUpdateManyWithWhereWithoutInscricaoInput[]
    deleteMany?: ArquivoUsuarioScalarWhereInput | ArquivoUsuarioScalarWhereInput[]
  }

  export type CampoFormularioCreateNestedOneWithoutRespostasInput = {
    create?: XOR<CampoFormularioCreateWithoutRespostasInput, CampoFormularioUncheckedCreateWithoutRespostasInput>
    connectOrCreate?: CampoFormularioCreateOrConnectWithoutRespostasInput
    connect?: CampoFormularioWhereUniqueInput
  }

  export type FormularioUsuarioCreateNestedOneWithoutCamposInput = {
    create?: XOR<FormularioUsuarioCreateWithoutCamposInput, FormularioUsuarioUncheckedCreateWithoutCamposInput>
    connectOrCreate?: FormularioUsuarioCreateOrConnectWithoutCamposInput
    connect?: FormularioUsuarioWhereUniqueInput
  }

  export type ArquivoUsuarioCreateNestedOneWithoutCampoInput = {
    create?: XOR<ArquivoUsuarioCreateWithoutCampoInput, ArquivoUsuarioUncheckedCreateWithoutCampoInput>
    connectOrCreate?: ArquivoUsuarioCreateOrConnectWithoutCampoInput
    connect?: ArquivoUsuarioWhereUniqueInput
  }

  export type ArquivoUsuarioUncheckedCreateNestedOneWithoutCampoInput = {
    create?: XOR<ArquivoUsuarioCreateWithoutCampoInput, ArquivoUsuarioUncheckedCreateWithoutCampoInput>
    connectOrCreate?: ArquivoUsuarioCreateOrConnectWithoutCampoInput
    connect?: ArquivoUsuarioWhereUniqueInput
  }

  export type CampoFormularioUpdateOneRequiredWithoutRespostasNestedInput = {
    create?: XOR<CampoFormularioCreateWithoutRespostasInput, CampoFormularioUncheckedCreateWithoutRespostasInput>
    connectOrCreate?: CampoFormularioCreateOrConnectWithoutRespostasInput
    upsert?: CampoFormularioUpsertWithoutRespostasInput
    connect?: CampoFormularioWhereUniqueInput
    update?: XOR<XOR<CampoFormularioUpdateToOneWithWhereWithoutRespostasInput, CampoFormularioUpdateWithoutRespostasInput>, CampoFormularioUncheckedUpdateWithoutRespostasInput>
  }

  export type FormularioUsuarioUpdateOneRequiredWithoutCamposNestedInput = {
    create?: XOR<FormularioUsuarioCreateWithoutCamposInput, FormularioUsuarioUncheckedCreateWithoutCamposInput>
    connectOrCreate?: FormularioUsuarioCreateOrConnectWithoutCamposInput
    upsert?: FormularioUsuarioUpsertWithoutCamposInput
    connect?: FormularioUsuarioWhereUniqueInput
    update?: XOR<XOR<FormularioUsuarioUpdateToOneWithWhereWithoutCamposInput, FormularioUsuarioUpdateWithoutCamposInput>, FormularioUsuarioUncheckedUpdateWithoutCamposInput>
  }

  export type ArquivoUsuarioUpdateOneWithoutCampoNestedInput = {
    create?: XOR<ArquivoUsuarioCreateWithoutCampoInput, ArquivoUsuarioUncheckedCreateWithoutCampoInput>
    connectOrCreate?: ArquivoUsuarioCreateOrConnectWithoutCampoInput
    upsert?: ArquivoUsuarioUpsertWithoutCampoInput
    disconnect?: ArquivoUsuarioWhereInput | boolean
    delete?: ArquivoUsuarioWhereInput | boolean
    connect?: ArquivoUsuarioWhereUniqueInput
    update?: XOR<XOR<ArquivoUsuarioUpdateToOneWithWhereWithoutCampoInput, ArquivoUsuarioUpdateWithoutCampoInput>, ArquivoUsuarioUncheckedUpdateWithoutCampoInput>
  }

  export type ArquivoUsuarioUncheckedUpdateOneWithoutCampoNestedInput = {
    create?: XOR<ArquivoUsuarioCreateWithoutCampoInput, ArquivoUsuarioUncheckedCreateWithoutCampoInput>
    connectOrCreate?: ArquivoUsuarioCreateOrConnectWithoutCampoInput
    upsert?: ArquivoUsuarioUpsertWithoutCampoInput
    disconnect?: ArquivoUsuarioWhereInput | boolean
    delete?: ArquivoUsuarioWhereInput | boolean
    connect?: ArquivoUsuarioWhereUniqueInput
    update?: XOR<XOR<ArquivoUsuarioUpdateToOneWithWhereWithoutCampoInput, ArquivoUsuarioUpdateWithoutCampoInput>, ArquivoUsuarioUncheckedUpdateWithoutCampoInput>
  }

  export type FormularioUsuarioCampoCreateNestedOneWithoutArquivoInput = {
    create?: XOR<FormularioUsuarioCampoCreateWithoutArquivoInput, FormularioUsuarioCampoUncheckedCreateWithoutArquivoInput>
    connectOrCreate?: FormularioUsuarioCampoCreateOrConnectWithoutArquivoInput
    connect?: FormularioUsuarioCampoWhereUniqueInput
  }

  export type FormularioUsuarioCreateNestedOneWithoutArquivosInput = {
    create?: XOR<FormularioUsuarioCreateWithoutArquivosInput, FormularioUsuarioUncheckedCreateWithoutArquivosInput>
    connectOrCreate?: FormularioUsuarioCreateOrConnectWithoutArquivosInput
    connect?: FormularioUsuarioWhereUniqueInput
  }

  export type FormularioUsuarioCampoUpdateOneWithoutArquivoNestedInput = {
    create?: XOR<FormularioUsuarioCampoCreateWithoutArquivoInput, FormularioUsuarioCampoUncheckedCreateWithoutArquivoInput>
    connectOrCreate?: FormularioUsuarioCampoCreateOrConnectWithoutArquivoInput
    upsert?: FormularioUsuarioCampoUpsertWithoutArquivoInput
    disconnect?: FormularioUsuarioCampoWhereInput | boolean
    delete?: FormularioUsuarioCampoWhereInput | boolean
    connect?: FormularioUsuarioCampoWhereUniqueInput
    update?: XOR<XOR<FormularioUsuarioCampoUpdateToOneWithWhereWithoutArquivoInput, FormularioUsuarioCampoUpdateWithoutArquivoInput>, FormularioUsuarioCampoUncheckedUpdateWithoutArquivoInput>
  }

  export type FormularioUsuarioUpdateOneRequiredWithoutArquivosNestedInput = {
    create?: XOR<FormularioUsuarioCreateWithoutArquivosInput, FormularioUsuarioUncheckedCreateWithoutArquivosInput>
    connectOrCreate?: FormularioUsuarioCreateOrConnectWithoutArquivosInput
    upsert?: FormularioUsuarioUpsertWithoutArquivosInput
    connect?: FormularioUsuarioWhereUniqueInput
    update?: XOR<XOR<FormularioUsuarioUpdateToOneWithWhereWithoutArquivosInput, FormularioUsuarioUpdateWithoutArquivosInput>, FormularioUsuarioUncheckedUpdateWithoutArquivosInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type FormularioUsuarioCreateWithoutUsuarioInput = {
    id?: string
    dataHora?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    formulario: FormularioCreateNestedOneWithoutInscricoesInput
    campos?: FormularioUsuarioCampoCreateNestedManyWithoutInscricaoInput
    arquivos?: ArquivoUsuarioCreateNestedManyWithoutInscricaoInput
  }

  export type FormularioUsuarioUncheckedCreateWithoutUsuarioInput = {
    id?: string
    dataHora?: Date | string
    formularioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    campos?: FormularioUsuarioCampoUncheckedCreateNestedManyWithoutInscricaoInput
    arquivos?: ArquivoUsuarioUncheckedCreateNestedManyWithoutInscricaoInput
  }

  export type FormularioUsuarioCreateOrConnectWithoutUsuarioInput = {
    where: FormularioUsuarioWhereUniqueInput
    create: XOR<FormularioUsuarioCreateWithoutUsuarioInput, FormularioUsuarioUncheckedCreateWithoutUsuarioInput>
  }

  export type FormularioUsuarioCreateManyUsuarioInputEnvelope = {
    data: FormularioUsuarioCreateManyUsuarioInput | FormularioUsuarioCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type InscricaoCreateWithoutUsuarioInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    edital: EditalCreateNestedOneWithoutInscricoesInput
  }

  export type InscricaoUncheckedCreateWithoutUsuarioInput = {
    id?: string
    editalId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InscricaoCreateOrConnectWithoutUsuarioInput = {
    where: InscricaoWhereUniqueInput
    create: XOR<InscricaoCreateWithoutUsuarioInput, InscricaoUncheckedCreateWithoutUsuarioInput>
  }

  export type InscricaoCreateManyUsuarioInputEnvelope = {
    data: InscricaoCreateManyUsuarioInput | InscricaoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type FormularioUsuarioUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: FormularioUsuarioWhereUniqueInput
    update: XOR<FormularioUsuarioUpdateWithoutUsuarioInput, FormularioUsuarioUncheckedUpdateWithoutUsuarioInput>
    create: XOR<FormularioUsuarioCreateWithoutUsuarioInput, FormularioUsuarioUncheckedCreateWithoutUsuarioInput>
  }

  export type FormularioUsuarioUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: FormularioUsuarioWhereUniqueInput
    data: XOR<FormularioUsuarioUpdateWithoutUsuarioInput, FormularioUsuarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type FormularioUsuarioUpdateManyWithWhereWithoutUsuarioInput = {
    where: FormularioUsuarioScalarWhereInput
    data: XOR<FormularioUsuarioUpdateManyMutationInput, FormularioUsuarioUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type FormularioUsuarioScalarWhereInput = {
    AND?: FormularioUsuarioScalarWhereInput | FormularioUsuarioScalarWhereInput[]
    OR?: FormularioUsuarioScalarWhereInput[]
    NOT?: FormularioUsuarioScalarWhereInput | FormularioUsuarioScalarWhereInput[]
    id?: StringFilter<"FormularioUsuario"> | string
    dataHora?: DateTimeFilter<"FormularioUsuario"> | Date | string
    usuarioId?: StringFilter<"FormularioUsuario"> | string
    formularioId?: StringFilter<"FormularioUsuario"> | string
    createdAt?: DateTimeFilter<"FormularioUsuario"> | Date | string
    updatedAt?: DateTimeFilter<"FormularioUsuario"> | Date | string
  }

  export type InscricaoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: InscricaoWhereUniqueInput
    update: XOR<InscricaoUpdateWithoutUsuarioInput, InscricaoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<InscricaoCreateWithoutUsuarioInput, InscricaoUncheckedCreateWithoutUsuarioInput>
  }

  export type InscricaoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: InscricaoWhereUniqueInput
    data: XOR<InscricaoUpdateWithoutUsuarioInput, InscricaoUncheckedUpdateWithoutUsuarioInput>
  }

  export type InscricaoUpdateManyWithWhereWithoutUsuarioInput = {
    where: InscricaoScalarWhereInput
    data: XOR<InscricaoUpdateManyMutationInput, InscricaoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type InscricaoScalarWhereInput = {
    AND?: InscricaoScalarWhereInput | InscricaoScalarWhereInput[]
    OR?: InscricaoScalarWhereInput[]
    NOT?: InscricaoScalarWhereInput | InscricaoScalarWhereInput[]
    id?: StringFilter<"Inscricao"> | string
    usuarioId?: StringFilter<"Inscricao"> | string
    editalId?: StringFilter<"Inscricao"> | string
    createdAt?: DateTimeFilter<"Inscricao"> | Date | string
    updatedAt?: DateTimeFilter<"Inscricao"> | Date | string
  }

  export type UsuarioCreateWithoutInscricoesInput = {
    id?: string
    nome: string
    email: string
    cpf: string
    senha: string
    tipo: number
    createdAt?: Date | string
    updatedAt?: Date | string
    formularios?: FormularioUsuarioCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutInscricoesInput = {
    id?: string
    nome: string
    email: string
    cpf: string
    senha: string
    tipo: number
    createdAt?: Date | string
    updatedAt?: Date | string
    formularios?: FormularioUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutInscricoesInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutInscricoesInput, UsuarioUncheckedCreateWithoutInscricoesInput>
  }

  export type EditalCreateWithoutInscricoesInput = {
    id?: string
    titulo: string
    dataCriacao?: Date | string
    dataPublicacao: Date | string
    dataEncerramento?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    senha: string
    formulario?: FormularioCreateNestedOneWithoutEditalInput
    arquivos?: ArquivoEditalCreateNestedManyWithoutEditalInput
  }

  export type EditalUncheckedCreateWithoutInscricoesInput = {
    id?: string
    titulo: string
    dataCriacao?: Date | string
    dataPublicacao: Date | string
    dataEncerramento?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    senha: string
    formulario?: FormularioUncheckedCreateNestedOneWithoutEditalInput
    arquivos?: ArquivoEditalUncheckedCreateNestedManyWithoutEditalInput
  }

  export type EditalCreateOrConnectWithoutInscricoesInput = {
    where: EditalWhereUniqueInput
    create: XOR<EditalCreateWithoutInscricoesInput, EditalUncheckedCreateWithoutInscricoesInput>
  }

  export type UsuarioUpsertWithoutInscricoesInput = {
    update: XOR<UsuarioUpdateWithoutInscricoesInput, UsuarioUncheckedUpdateWithoutInscricoesInput>
    create: XOR<UsuarioCreateWithoutInscricoesInput, UsuarioUncheckedCreateWithoutInscricoesInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutInscricoesInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutInscricoesInput, UsuarioUncheckedUpdateWithoutInscricoesInput>
  }

  export type UsuarioUpdateWithoutInscricoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tipo?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    formularios?: FormularioUsuarioUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutInscricoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tipo?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    formularios?: FormularioUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type EditalUpsertWithoutInscricoesInput = {
    update: XOR<EditalUpdateWithoutInscricoesInput, EditalUncheckedUpdateWithoutInscricoesInput>
    create: XOR<EditalCreateWithoutInscricoesInput, EditalUncheckedCreateWithoutInscricoesInput>
    where?: EditalWhereInput
  }

  export type EditalUpdateToOneWithWhereWithoutInscricoesInput = {
    where?: EditalWhereInput
    data: XOR<EditalUpdateWithoutInscricoesInput, EditalUncheckedUpdateWithoutInscricoesInput>
  }

  export type EditalUpdateWithoutInscricoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPublicacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataEncerramento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    senha?: StringFieldUpdateOperationsInput | string
    formulario?: FormularioUpdateOneWithoutEditalNestedInput
    arquivos?: ArquivoEditalUpdateManyWithoutEditalNestedInput
  }

  export type EditalUncheckedUpdateWithoutInscricoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPublicacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataEncerramento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    senha?: StringFieldUpdateOperationsInput | string
    formulario?: FormularioUncheckedUpdateOneWithoutEditalNestedInput
    arquivos?: ArquivoEditalUncheckedUpdateManyWithoutEditalNestedInput
  }

  export type FormularioCreateWithoutEditalInput = {
    id?: string
    titulo: string
    dataInicio: Date | string
    dataFim: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    campos?: CampoFormularioCreateNestedManyWithoutFormularioInput
    inscricoes?: FormularioUsuarioCreateNestedManyWithoutFormularioInput
  }

  export type FormularioUncheckedCreateWithoutEditalInput = {
    id?: string
    titulo: string
    dataInicio: Date | string
    dataFim: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    campos?: CampoFormularioUncheckedCreateNestedManyWithoutFormularioInput
    inscricoes?: FormularioUsuarioUncheckedCreateNestedManyWithoutFormularioInput
  }

  export type FormularioCreateOrConnectWithoutEditalInput = {
    where: FormularioWhereUniqueInput
    create: XOR<FormularioCreateWithoutEditalInput, FormularioUncheckedCreateWithoutEditalInput>
  }

  export type InscricaoCreateWithoutEditalInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    usuario: UsuarioCreateNestedOneWithoutInscricoesInput
  }

  export type InscricaoUncheckedCreateWithoutEditalInput = {
    id?: string
    usuarioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InscricaoCreateOrConnectWithoutEditalInput = {
    where: InscricaoWhereUniqueInput
    create: XOR<InscricaoCreateWithoutEditalInput, InscricaoUncheckedCreateWithoutEditalInput>
  }

  export type InscricaoCreateManyEditalInputEnvelope = {
    data: InscricaoCreateManyEditalInput | InscricaoCreateManyEditalInput[]
    skipDuplicates?: boolean
  }

  export type ArquivoEditalCreateWithoutEditalInput = {
    id?: string
    url: string
    rotulo: string
  }

  export type ArquivoEditalUncheckedCreateWithoutEditalInput = {
    id?: string
    url: string
    rotulo: string
  }

  export type ArquivoEditalCreateOrConnectWithoutEditalInput = {
    where: ArquivoEditalWhereUniqueInput
    create: XOR<ArquivoEditalCreateWithoutEditalInput, ArquivoEditalUncheckedCreateWithoutEditalInput>
  }

  export type ArquivoEditalCreateManyEditalInputEnvelope = {
    data: ArquivoEditalCreateManyEditalInput | ArquivoEditalCreateManyEditalInput[]
    skipDuplicates?: boolean
  }

  export type FormularioUpsertWithoutEditalInput = {
    update: XOR<FormularioUpdateWithoutEditalInput, FormularioUncheckedUpdateWithoutEditalInput>
    create: XOR<FormularioCreateWithoutEditalInput, FormularioUncheckedCreateWithoutEditalInput>
    where?: FormularioWhereInput
  }

  export type FormularioUpdateToOneWithWhereWithoutEditalInput = {
    where?: FormularioWhereInput
    data: XOR<FormularioUpdateWithoutEditalInput, FormularioUncheckedUpdateWithoutEditalInput>
  }

  export type FormularioUpdateWithoutEditalInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    campos?: CampoFormularioUpdateManyWithoutFormularioNestedInput
    inscricoes?: FormularioUsuarioUpdateManyWithoutFormularioNestedInput
  }

  export type FormularioUncheckedUpdateWithoutEditalInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    campos?: CampoFormularioUncheckedUpdateManyWithoutFormularioNestedInput
    inscricoes?: FormularioUsuarioUncheckedUpdateManyWithoutFormularioNestedInput
  }

  export type InscricaoUpsertWithWhereUniqueWithoutEditalInput = {
    where: InscricaoWhereUniqueInput
    update: XOR<InscricaoUpdateWithoutEditalInput, InscricaoUncheckedUpdateWithoutEditalInput>
    create: XOR<InscricaoCreateWithoutEditalInput, InscricaoUncheckedCreateWithoutEditalInput>
  }

  export type InscricaoUpdateWithWhereUniqueWithoutEditalInput = {
    where: InscricaoWhereUniqueInput
    data: XOR<InscricaoUpdateWithoutEditalInput, InscricaoUncheckedUpdateWithoutEditalInput>
  }

  export type InscricaoUpdateManyWithWhereWithoutEditalInput = {
    where: InscricaoScalarWhereInput
    data: XOR<InscricaoUpdateManyMutationInput, InscricaoUncheckedUpdateManyWithoutEditalInput>
  }

  export type ArquivoEditalUpsertWithWhereUniqueWithoutEditalInput = {
    where: ArquivoEditalWhereUniqueInput
    update: XOR<ArquivoEditalUpdateWithoutEditalInput, ArquivoEditalUncheckedUpdateWithoutEditalInput>
    create: XOR<ArquivoEditalCreateWithoutEditalInput, ArquivoEditalUncheckedCreateWithoutEditalInput>
  }

  export type ArquivoEditalUpdateWithWhereUniqueWithoutEditalInput = {
    where: ArquivoEditalWhereUniqueInput
    data: XOR<ArquivoEditalUpdateWithoutEditalInput, ArquivoEditalUncheckedUpdateWithoutEditalInput>
  }

  export type ArquivoEditalUpdateManyWithWhereWithoutEditalInput = {
    where: ArquivoEditalScalarWhereInput
    data: XOR<ArquivoEditalUpdateManyMutationInput, ArquivoEditalUncheckedUpdateManyWithoutEditalInput>
  }

  export type ArquivoEditalScalarWhereInput = {
    AND?: ArquivoEditalScalarWhereInput | ArquivoEditalScalarWhereInput[]
    OR?: ArquivoEditalScalarWhereInput[]
    NOT?: ArquivoEditalScalarWhereInput | ArquivoEditalScalarWhereInput[]
    id?: StringFilter<"ArquivoEdital"> | string
    url?: StringFilter<"ArquivoEdital"> | string
    rotulo?: StringFilter<"ArquivoEdital"> | string
    editalId?: StringNullableFilter<"ArquivoEdital"> | string | null
  }

  export type EditalCreateWithoutArquivosInput = {
    id?: string
    titulo: string
    dataCriacao?: Date | string
    dataPublicacao: Date | string
    dataEncerramento?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    senha: string
    formulario?: FormularioCreateNestedOneWithoutEditalInput
    inscricoes?: InscricaoCreateNestedManyWithoutEditalInput
  }

  export type EditalUncheckedCreateWithoutArquivosInput = {
    id?: string
    titulo: string
    dataCriacao?: Date | string
    dataPublicacao: Date | string
    dataEncerramento?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    senha: string
    formulario?: FormularioUncheckedCreateNestedOneWithoutEditalInput
    inscricoes?: InscricaoUncheckedCreateNestedManyWithoutEditalInput
  }

  export type EditalCreateOrConnectWithoutArquivosInput = {
    where: EditalWhereUniqueInput
    create: XOR<EditalCreateWithoutArquivosInput, EditalUncheckedCreateWithoutArquivosInput>
  }

  export type EditalUpsertWithoutArquivosInput = {
    update: XOR<EditalUpdateWithoutArquivosInput, EditalUncheckedUpdateWithoutArquivosInput>
    create: XOR<EditalCreateWithoutArquivosInput, EditalUncheckedCreateWithoutArquivosInput>
    where?: EditalWhereInput
  }

  export type EditalUpdateToOneWithWhereWithoutArquivosInput = {
    where?: EditalWhereInput
    data: XOR<EditalUpdateWithoutArquivosInput, EditalUncheckedUpdateWithoutArquivosInput>
  }

  export type EditalUpdateWithoutArquivosInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPublicacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataEncerramento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    senha?: StringFieldUpdateOperationsInput | string
    formulario?: FormularioUpdateOneWithoutEditalNestedInput
    inscricoes?: InscricaoUpdateManyWithoutEditalNestedInput
  }

  export type EditalUncheckedUpdateWithoutArquivosInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPublicacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataEncerramento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    senha?: StringFieldUpdateOperationsInput | string
    formulario?: FormularioUncheckedUpdateOneWithoutEditalNestedInput
    inscricoes?: InscricaoUncheckedUpdateManyWithoutEditalNestedInput
  }

  export type EditalCreateWithoutFormularioInput = {
    id?: string
    titulo: string
    dataCriacao?: Date | string
    dataPublicacao: Date | string
    dataEncerramento?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    senha: string
    inscricoes?: InscricaoCreateNestedManyWithoutEditalInput
    arquivos?: ArquivoEditalCreateNestedManyWithoutEditalInput
  }

  export type EditalUncheckedCreateWithoutFormularioInput = {
    id?: string
    titulo: string
    dataCriacao?: Date | string
    dataPublicacao: Date | string
    dataEncerramento?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    senha: string
    inscricoes?: InscricaoUncheckedCreateNestedManyWithoutEditalInput
    arquivos?: ArquivoEditalUncheckedCreateNestedManyWithoutEditalInput
  }

  export type EditalCreateOrConnectWithoutFormularioInput = {
    where: EditalWhereUniqueInput
    create: XOR<EditalCreateWithoutFormularioInput, EditalUncheckedCreateWithoutFormularioInput>
  }

  export type CampoFormularioCreateWithoutFormularioInput = {
    id?: string
    rotulo: string
    tipo: number
    obrigatorio: number
    createdAt?: Date | string
    updatedAt?: Date | string
    respostas?: FormularioUsuarioCampoCreateNestedManyWithoutCampoInput
  }

  export type CampoFormularioUncheckedCreateWithoutFormularioInput = {
    id?: string
    rotulo: string
    tipo: number
    obrigatorio: number
    createdAt?: Date | string
    updatedAt?: Date | string
    respostas?: FormularioUsuarioCampoUncheckedCreateNestedManyWithoutCampoInput
  }

  export type CampoFormularioCreateOrConnectWithoutFormularioInput = {
    where: CampoFormularioWhereUniqueInput
    create: XOR<CampoFormularioCreateWithoutFormularioInput, CampoFormularioUncheckedCreateWithoutFormularioInput>
  }

  export type CampoFormularioCreateManyFormularioInputEnvelope = {
    data: CampoFormularioCreateManyFormularioInput | CampoFormularioCreateManyFormularioInput[]
    skipDuplicates?: boolean
  }

  export type FormularioUsuarioCreateWithoutFormularioInput = {
    id?: string
    dataHora?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    usuario: UsuarioCreateNestedOneWithoutFormulariosInput
    campos?: FormularioUsuarioCampoCreateNestedManyWithoutInscricaoInput
    arquivos?: ArquivoUsuarioCreateNestedManyWithoutInscricaoInput
  }

  export type FormularioUsuarioUncheckedCreateWithoutFormularioInput = {
    id?: string
    dataHora?: Date | string
    usuarioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    campos?: FormularioUsuarioCampoUncheckedCreateNestedManyWithoutInscricaoInput
    arquivos?: ArquivoUsuarioUncheckedCreateNestedManyWithoutInscricaoInput
  }

  export type FormularioUsuarioCreateOrConnectWithoutFormularioInput = {
    where: FormularioUsuarioWhereUniqueInput
    create: XOR<FormularioUsuarioCreateWithoutFormularioInput, FormularioUsuarioUncheckedCreateWithoutFormularioInput>
  }

  export type FormularioUsuarioCreateManyFormularioInputEnvelope = {
    data: FormularioUsuarioCreateManyFormularioInput | FormularioUsuarioCreateManyFormularioInput[]
    skipDuplicates?: boolean
  }

  export type EditalUpsertWithoutFormularioInput = {
    update: XOR<EditalUpdateWithoutFormularioInput, EditalUncheckedUpdateWithoutFormularioInput>
    create: XOR<EditalCreateWithoutFormularioInput, EditalUncheckedCreateWithoutFormularioInput>
    where?: EditalWhereInput
  }

  export type EditalUpdateToOneWithWhereWithoutFormularioInput = {
    where?: EditalWhereInput
    data: XOR<EditalUpdateWithoutFormularioInput, EditalUncheckedUpdateWithoutFormularioInput>
  }

  export type EditalUpdateWithoutFormularioInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPublicacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataEncerramento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    senha?: StringFieldUpdateOperationsInput | string
    inscricoes?: InscricaoUpdateManyWithoutEditalNestedInput
    arquivos?: ArquivoEditalUpdateManyWithoutEditalNestedInput
  }

  export type EditalUncheckedUpdateWithoutFormularioInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataPublicacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataEncerramento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    senha?: StringFieldUpdateOperationsInput | string
    inscricoes?: InscricaoUncheckedUpdateManyWithoutEditalNestedInput
    arquivos?: ArquivoEditalUncheckedUpdateManyWithoutEditalNestedInput
  }

  export type CampoFormularioUpsertWithWhereUniqueWithoutFormularioInput = {
    where: CampoFormularioWhereUniqueInput
    update: XOR<CampoFormularioUpdateWithoutFormularioInput, CampoFormularioUncheckedUpdateWithoutFormularioInput>
    create: XOR<CampoFormularioCreateWithoutFormularioInput, CampoFormularioUncheckedCreateWithoutFormularioInput>
  }

  export type CampoFormularioUpdateWithWhereUniqueWithoutFormularioInput = {
    where: CampoFormularioWhereUniqueInput
    data: XOR<CampoFormularioUpdateWithoutFormularioInput, CampoFormularioUncheckedUpdateWithoutFormularioInput>
  }

  export type CampoFormularioUpdateManyWithWhereWithoutFormularioInput = {
    where: CampoFormularioScalarWhereInput
    data: XOR<CampoFormularioUpdateManyMutationInput, CampoFormularioUncheckedUpdateManyWithoutFormularioInput>
  }

  export type CampoFormularioScalarWhereInput = {
    AND?: CampoFormularioScalarWhereInput | CampoFormularioScalarWhereInput[]
    OR?: CampoFormularioScalarWhereInput[]
    NOT?: CampoFormularioScalarWhereInput | CampoFormularioScalarWhereInput[]
    id?: StringFilter<"CampoFormulario"> | string
    rotulo?: StringFilter<"CampoFormulario"> | string
    tipo?: IntFilter<"CampoFormulario"> | number
    obrigatorio?: IntFilter<"CampoFormulario"> | number
    formularioId?: StringFilter<"CampoFormulario"> | string
    createdAt?: DateTimeFilter<"CampoFormulario"> | Date | string
    updatedAt?: DateTimeFilter<"CampoFormulario"> | Date | string
  }

  export type FormularioUsuarioUpsertWithWhereUniqueWithoutFormularioInput = {
    where: FormularioUsuarioWhereUniqueInput
    update: XOR<FormularioUsuarioUpdateWithoutFormularioInput, FormularioUsuarioUncheckedUpdateWithoutFormularioInput>
    create: XOR<FormularioUsuarioCreateWithoutFormularioInput, FormularioUsuarioUncheckedCreateWithoutFormularioInput>
  }

  export type FormularioUsuarioUpdateWithWhereUniqueWithoutFormularioInput = {
    where: FormularioUsuarioWhereUniqueInput
    data: XOR<FormularioUsuarioUpdateWithoutFormularioInput, FormularioUsuarioUncheckedUpdateWithoutFormularioInput>
  }

  export type FormularioUsuarioUpdateManyWithWhereWithoutFormularioInput = {
    where: FormularioUsuarioScalarWhereInput
    data: XOR<FormularioUsuarioUpdateManyMutationInput, FormularioUsuarioUncheckedUpdateManyWithoutFormularioInput>
  }

  export type FormularioCreateWithoutCamposInput = {
    id?: string
    titulo: string
    dataInicio: Date | string
    dataFim: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    edital: EditalCreateNestedOneWithoutFormularioInput
    inscricoes?: FormularioUsuarioCreateNestedManyWithoutFormularioInput
  }

  export type FormularioUncheckedCreateWithoutCamposInput = {
    id?: string
    titulo: string
    dataInicio: Date | string
    dataFim: Date | string
    editalId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    inscricoes?: FormularioUsuarioUncheckedCreateNestedManyWithoutFormularioInput
  }

  export type FormularioCreateOrConnectWithoutCamposInput = {
    where: FormularioWhereUniqueInput
    create: XOR<FormularioCreateWithoutCamposInput, FormularioUncheckedCreateWithoutCamposInput>
  }

  export type FormularioUsuarioCampoCreateWithoutCampoInput = {
    id?: string
    valor: string
    createdAt?: Date | string
    updatedAt?: Date | string
    inscricao: FormularioUsuarioCreateNestedOneWithoutCamposInput
    arquivo?: ArquivoUsuarioCreateNestedOneWithoutCampoInput
  }

  export type FormularioUsuarioCampoUncheckedCreateWithoutCampoInput = {
    id?: string
    valor: string
    formularioUsuarioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    arquivo?: ArquivoUsuarioUncheckedCreateNestedOneWithoutCampoInput
  }

  export type FormularioUsuarioCampoCreateOrConnectWithoutCampoInput = {
    where: FormularioUsuarioCampoWhereUniqueInput
    create: XOR<FormularioUsuarioCampoCreateWithoutCampoInput, FormularioUsuarioCampoUncheckedCreateWithoutCampoInput>
  }

  export type FormularioUsuarioCampoCreateManyCampoInputEnvelope = {
    data: FormularioUsuarioCampoCreateManyCampoInput | FormularioUsuarioCampoCreateManyCampoInput[]
    skipDuplicates?: boolean
  }

  export type FormularioUpsertWithoutCamposInput = {
    update: XOR<FormularioUpdateWithoutCamposInput, FormularioUncheckedUpdateWithoutCamposInput>
    create: XOR<FormularioCreateWithoutCamposInput, FormularioUncheckedCreateWithoutCamposInput>
    where?: FormularioWhereInput
  }

  export type FormularioUpdateToOneWithWhereWithoutCamposInput = {
    where?: FormularioWhereInput
    data: XOR<FormularioUpdateWithoutCamposInput, FormularioUncheckedUpdateWithoutCamposInput>
  }

  export type FormularioUpdateWithoutCamposInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    edital?: EditalUpdateOneRequiredWithoutFormularioNestedInput
    inscricoes?: FormularioUsuarioUpdateManyWithoutFormularioNestedInput
  }

  export type FormularioUncheckedUpdateWithoutCamposInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    editalId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inscricoes?: FormularioUsuarioUncheckedUpdateManyWithoutFormularioNestedInput
  }

  export type FormularioUsuarioCampoUpsertWithWhereUniqueWithoutCampoInput = {
    where: FormularioUsuarioCampoWhereUniqueInput
    update: XOR<FormularioUsuarioCampoUpdateWithoutCampoInput, FormularioUsuarioCampoUncheckedUpdateWithoutCampoInput>
    create: XOR<FormularioUsuarioCampoCreateWithoutCampoInput, FormularioUsuarioCampoUncheckedCreateWithoutCampoInput>
  }

  export type FormularioUsuarioCampoUpdateWithWhereUniqueWithoutCampoInput = {
    where: FormularioUsuarioCampoWhereUniqueInput
    data: XOR<FormularioUsuarioCampoUpdateWithoutCampoInput, FormularioUsuarioCampoUncheckedUpdateWithoutCampoInput>
  }

  export type FormularioUsuarioCampoUpdateManyWithWhereWithoutCampoInput = {
    where: FormularioUsuarioCampoScalarWhereInput
    data: XOR<FormularioUsuarioCampoUpdateManyMutationInput, FormularioUsuarioCampoUncheckedUpdateManyWithoutCampoInput>
  }

  export type FormularioUsuarioCampoScalarWhereInput = {
    AND?: FormularioUsuarioCampoScalarWhereInput | FormularioUsuarioCampoScalarWhereInput[]
    OR?: FormularioUsuarioCampoScalarWhereInput[]
    NOT?: FormularioUsuarioCampoScalarWhereInput | FormularioUsuarioCampoScalarWhereInput[]
    id?: StringFilter<"FormularioUsuarioCampo"> | string
    valor?: StringFilter<"FormularioUsuarioCampo"> | string
    campoFormularioId?: StringFilter<"FormularioUsuarioCampo"> | string
    formularioUsuarioId?: StringFilter<"FormularioUsuarioCampo"> | string
    createdAt?: DateTimeFilter<"FormularioUsuarioCampo"> | Date | string
    updatedAt?: DateTimeFilter<"FormularioUsuarioCampo"> | Date | string
  }

  export type UsuarioCreateWithoutFormulariosInput = {
    id?: string
    nome: string
    email: string
    cpf: string
    senha: string
    tipo: number
    createdAt?: Date | string
    updatedAt?: Date | string
    inscricoes?: InscricaoCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutFormulariosInput = {
    id?: string
    nome: string
    email: string
    cpf: string
    senha: string
    tipo: number
    createdAt?: Date | string
    updatedAt?: Date | string
    inscricoes?: InscricaoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutFormulariosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutFormulariosInput, UsuarioUncheckedCreateWithoutFormulariosInput>
  }

  export type FormularioCreateWithoutInscricoesInput = {
    id?: string
    titulo: string
    dataInicio: Date | string
    dataFim: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    edital: EditalCreateNestedOneWithoutFormularioInput
    campos?: CampoFormularioCreateNestedManyWithoutFormularioInput
  }

  export type FormularioUncheckedCreateWithoutInscricoesInput = {
    id?: string
    titulo: string
    dataInicio: Date | string
    dataFim: Date | string
    editalId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    campos?: CampoFormularioUncheckedCreateNestedManyWithoutFormularioInput
  }

  export type FormularioCreateOrConnectWithoutInscricoesInput = {
    where: FormularioWhereUniqueInput
    create: XOR<FormularioCreateWithoutInscricoesInput, FormularioUncheckedCreateWithoutInscricoesInput>
  }

  export type FormularioUsuarioCampoCreateWithoutInscricaoInput = {
    id?: string
    valor: string
    createdAt?: Date | string
    updatedAt?: Date | string
    campo: CampoFormularioCreateNestedOneWithoutRespostasInput
    arquivo?: ArquivoUsuarioCreateNestedOneWithoutCampoInput
  }

  export type FormularioUsuarioCampoUncheckedCreateWithoutInscricaoInput = {
    id?: string
    valor: string
    campoFormularioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    arquivo?: ArquivoUsuarioUncheckedCreateNestedOneWithoutCampoInput
  }

  export type FormularioUsuarioCampoCreateOrConnectWithoutInscricaoInput = {
    where: FormularioUsuarioCampoWhereUniqueInput
    create: XOR<FormularioUsuarioCampoCreateWithoutInscricaoInput, FormularioUsuarioCampoUncheckedCreateWithoutInscricaoInput>
  }

  export type FormularioUsuarioCampoCreateManyInscricaoInputEnvelope = {
    data: FormularioUsuarioCampoCreateManyInscricaoInput | FormularioUsuarioCampoCreateManyInscricaoInput[]
    skipDuplicates?: boolean
  }

  export type ArquivoUsuarioCreateWithoutInscricaoInput = {
    id?: string
    nomeOriginal: string
    nomeArmazenado: string
    tamanho: number
    tipo: string
    caminho: string
    createdAt?: Date | string
    updatedAt?: Date | string
    campo?: FormularioUsuarioCampoCreateNestedOneWithoutArquivoInput
  }

  export type ArquivoUsuarioUncheckedCreateWithoutInscricaoInput = {
    id?: string
    nomeOriginal: string
    nomeArmazenado: string
    tamanho: number
    tipo: string
    caminho: string
    campoId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ArquivoUsuarioCreateOrConnectWithoutInscricaoInput = {
    where: ArquivoUsuarioWhereUniqueInput
    create: XOR<ArquivoUsuarioCreateWithoutInscricaoInput, ArquivoUsuarioUncheckedCreateWithoutInscricaoInput>
  }

  export type ArquivoUsuarioCreateManyInscricaoInputEnvelope = {
    data: ArquivoUsuarioCreateManyInscricaoInput | ArquivoUsuarioCreateManyInscricaoInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithoutFormulariosInput = {
    update: XOR<UsuarioUpdateWithoutFormulariosInput, UsuarioUncheckedUpdateWithoutFormulariosInput>
    create: XOR<UsuarioCreateWithoutFormulariosInput, UsuarioUncheckedCreateWithoutFormulariosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutFormulariosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutFormulariosInput, UsuarioUncheckedUpdateWithoutFormulariosInput>
  }

  export type UsuarioUpdateWithoutFormulariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tipo?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inscricoes?: InscricaoUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutFormulariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tipo?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inscricoes?: InscricaoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type FormularioUpsertWithoutInscricoesInput = {
    update: XOR<FormularioUpdateWithoutInscricoesInput, FormularioUncheckedUpdateWithoutInscricoesInput>
    create: XOR<FormularioCreateWithoutInscricoesInput, FormularioUncheckedCreateWithoutInscricoesInput>
    where?: FormularioWhereInput
  }

  export type FormularioUpdateToOneWithWhereWithoutInscricoesInput = {
    where?: FormularioWhereInput
    data: XOR<FormularioUpdateWithoutInscricoesInput, FormularioUncheckedUpdateWithoutInscricoesInput>
  }

  export type FormularioUpdateWithoutInscricoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    edital?: EditalUpdateOneRequiredWithoutFormularioNestedInput
    campos?: CampoFormularioUpdateManyWithoutFormularioNestedInput
  }

  export type FormularioUncheckedUpdateWithoutInscricoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    dataInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFim?: DateTimeFieldUpdateOperationsInput | Date | string
    editalId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    campos?: CampoFormularioUncheckedUpdateManyWithoutFormularioNestedInput
  }

  export type FormularioUsuarioCampoUpsertWithWhereUniqueWithoutInscricaoInput = {
    where: FormularioUsuarioCampoWhereUniqueInput
    update: XOR<FormularioUsuarioCampoUpdateWithoutInscricaoInput, FormularioUsuarioCampoUncheckedUpdateWithoutInscricaoInput>
    create: XOR<FormularioUsuarioCampoCreateWithoutInscricaoInput, FormularioUsuarioCampoUncheckedCreateWithoutInscricaoInput>
  }

  export type FormularioUsuarioCampoUpdateWithWhereUniqueWithoutInscricaoInput = {
    where: FormularioUsuarioCampoWhereUniqueInput
    data: XOR<FormularioUsuarioCampoUpdateWithoutInscricaoInput, FormularioUsuarioCampoUncheckedUpdateWithoutInscricaoInput>
  }

  export type FormularioUsuarioCampoUpdateManyWithWhereWithoutInscricaoInput = {
    where: FormularioUsuarioCampoScalarWhereInput
    data: XOR<FormularioUsuarioCampoUpdateManyMutationInput, FormularioUsuarioCampoUncheckedUpdateManyWithoutInscricaoInput>
  }

  export type ArquivoUsuarioUpsertWithWhereUniqueWithoutInscricaoInput = {
    where: ArquivoUsuarioWhereUniqueInput
    update: XOR<ArquivoUsuarioUpdateWithoutInscricaoInput, ArquivoUsuarioUncheckedUpdateWithoutInscricaoInput>
    create: XOR<ArquivoUsuarioCreateWithoutInscricaoInput, ArquivoUsuarioUncheckedCreateWithoutInscricaoInput>
  }

  export type ArquivoUsuarioUpdateWithWhereUniqueWithoutInscricaoInput = {
    where: ArquivoUsuarioWhereUniqueInput
    data: XOR<ArquivoUsuarioUpdateWithoutInscricaoInput, ArquivoUsuarioUncheckedUpdateWithoutInscricaoInput>
  }

  export type ArquivoUsuarioUpdateManyWithWhereWithoutInscricaoInput = {
    where: ArquivoUsuarioScalarWhereInput
    data: XOR<ArquivoUsuarioUpdateManyMutationInput, ArquivoUsuarioUncheckedUpdateManyWithoutInscricaoInput>
  }

  export type ArquivoUsuarioScalarWhereInput = {
    AND?: ArquivoUsuarioScalarWhereInput | ArquivoUsuarioScalarWhereInput[]
    OR?: ArquivoUsuarioScalarWhereInput[]
    NOT?: ArquivoUsuarioScalarWhereInput | ArquivoUsuarioScalarWhereInput[]
    id?: StringFilter<"ArquivoUsuario"> | string
    nomeOriginal?: StringFilter<"ArquivoUsuario"> | string
    nomeArmazenado?: StringFilter<"ArquivoUsuario"> | string
    tamanho?: IntFilter<"ArquivoUsuario"> | number
    tipo?: StringFilter<"ArquivoUsuario"> | string
    caminho?: StringFilter<"ArquivoUsuario"> | string
    campoId?: StringNullableFilter<"ArquivoUsuario"> | string | null
    inscricaoId?: StringFilter<"ArquivoUsuario"> | string
    createdAt?: DateTimeFilter<"ArquivoUsuario"> | Date | string
    updatedAt?: DateTimeFilter<"ArquivoUsuario"> | Date | string
  }

  export type CampoFormularioCreateWithoutRespostasInput = {
    id?: string
    rotulo: string
    tipo: number
    obrigatorio: number
    createdAt?: Date | string
    updatedAt?: Date | string
    formulario: FormularioCreateNestedOneWithoutCamposInput
  }

  export type CampoFormularioUncheckedCreateWithoutRespostasInput = {
    id?: string
    rotulo: string
    tipo: number
    obrigatorio: number
    formularioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CampoFormularioCreateOrConnectWithoutRespostasInput = {
    where: CampoFormularioWhereUniqueInput
    create: XOR<CampoFormularioCreateWithoutRespostasInput, CampoFormularioUncheckedCreateWithoutRespostasInput>
  }

  export type FormularioUsuarioCreateWithoutCamposInput = {
    id?: string
    dataHora?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    usuario: UsuarioCreateNestedOneWithoutFormulariosInput
    formulario: FormularioCreateNestedOneWithoutInscricoesInput
    arquivos?: ArquivoUsuarioCreateNestedManyWithoutInscricaoInput
  }

  export type FormularioUsuarioUncheckedCreateWithoutCamposInput = {
    id?: string
    dataHora?: Date | string
    usuarioId: string
    formularioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    arquivos?: ArquivoUsuarioUncheckedCreateNestedManyWithoutInscricaoInput
  }

  export type FormularioUsuarioCreateOrConnectWithoutCamposInput = {
    where: FormularioUsuarioWhereUniqueInput
    create: XOR<FormularioUsuarioCreateWithoutCamposInput, FormularioUsuarioUncheckedCreateWithoutCamposInput>
  }

  export type ArquivoUsuarioCreateWithoutCampoInput = {
    id?: string
    nomeOriginal: string
    nomeArmazenado: string
    tamanho: number
    tipo: string
    caminho: string
    createdAt?: Date | string
    updatedAt?: Date | string
    inscricao: FormularioUsuarioCreateNestedOneWithoutArquivosInput
  }

  export type ArquivoUsuarioUncheckedCreateWithoutCampoInput = {
    id?: string
    nomeOriginal: string
    nomeArmazenado: string
    tamanho: number
    tipo: string
    caminho: string
    inscricaoId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ArquivoUsuarioCreateOrConnectWithoutCampoInput = {
    where: ArquivoUsuarioWhereUniqueInput
    create: XOR<ArquivoUsuarioCreateWithoutCampoInput, ArquivoUsuarioUncheckedCreateWithoutCampoInput>
  }

  export type CampoFormularioUpsertWithoutRespostasInput = {
    update: XOR<CampoFormularioUpdateWithoutRespostasInput, CampoFormularioUncheckedUpdateWithoutRespostasInput>
    create: XOR<CampoFormularioCreateWithoutRespostasInput, CampoFormularioUncheckedCreateWithoutRespostasInput>
    where?: CampoFormularioWhereInput
  }

  export type CampoFormularioUpdateToOneWithWhereWithoutRespostasInput = {
    where?: CampoFormularioWhereInput
    data: XOR<CampoFormularioUpdateWithoutRespostasInput, CampoFormularioUncheckedUpdateWithoutRespostasInput>
  }

  export type CampoFormularioUpdateWithoutRespostasInput = {
    id?: StringFieldUpdateOperationsInput | string
    rotulo?: StringFieldUpdateOperationsInput | string
    tipo?: IntFieldUpdateOperationsInput | number
    obrigatorio?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    formulario?: FormularioUpdateOneRequiredWithoutCamposNestedInput
  }

  export type CampoFormularioUncheckedUpdateWithoutRespostasInput = {
    id?: StringFieldUpdateOperationsInput | string
    rotulo?: StringFieldUpdateOperationsInput | string
    tipo?: IntFieldUpdateOperationsInput | number
    obrigatorio?: IntFieldUpdateOperationsInput | number
    formularioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormularioUsuarioUpsertWithoutCamposInput = {
    update: XOR<FormularioUsuarioUpdateWithoutCamposInput, FormularioUsuarioUncheckedUpdateWithoutCamposInput>
    create: XOR<FormularioUsuarioCreateWithoutCamposInput, FormularioUsuarioUncheckedCreateWithoutCamposInput>
    where?: FormularioUsuarioWhereInput
  }

  export type FormularioUsuarioUpdateToOneWithWhereWithoutCamposInput = {
    where?: FormularioUsuarioWhereInput
    data: XOR<FormularioUsuarioUpdateWithoutCamposInput, FormularioUsuarioUncheckedUpdateWithoutCamposInput>
  }

  export type FormularioUsuarioUpdateWithoutCamposInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataHora?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutFormulariosNestedInput
    formulario?: FormularioUpdateOneRequiredWithoutInscricoesNestedInput
    arquivos?: ArquivoUsuarioUpdateManyWithoutInscricaoNestedInput
  }

  export type FormularioUsuarioUncheckedUpdateWithoutCamposInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: StringFieldUpdateOperationsInput | string
    formularioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    arquivos?: ArquivoUsuarioUncheckedUpdateManyWithoutInscricaoNestedInput
  }

  export type ArquivoUsuarioUpsertWithoutCampoInput = {
    update: XOR<ArquivoUsuarioUpdateWithoutCampoInput, ArquivoUsuarioUncheckedUpdateWithoutCampoInput>
    create: XOR<ArquivoUsuarioCreateWithoutCampoInput, ArquivoUsuarioUncheckedCreateWithoutCampoInput>
    where?: ArquivoUsuarioWhereInput
  }

  export type ArquivoUsuarioUpdateToOneWithWhereWithoutCampoInput = {
    where?: ArquivoUsuarioWhereInput
    data: XOR<ArquivoUsuarioUpdateWithoutCampoInput, ArquivoUsuarioUncheckedUpdateWithoutCampoInput>
  }

  export type ArquivoUsuarioUpdateWithoutCampoInput = {
    id?: StringFieldUpdateOperationsInput | string
    nomeOriginal?: StringFieldUpdateOperationsInput | string
    nomeArmazenado?: StringFieldUpdateOperationsInput | string
    tamanho?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    caminho?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inscricao?: FormularioUsuarioUpdateOneRequiredWithoutArquivosNestedInput
  }

  export type ArquivoUsuarioUncheckedUpdateWithoutCampoInput = {
    id?: StringFieldUpdateOperationsInput | string
    nomeOriginal?: StringFieldUpdateOperationsInput | string
    nomeArmazenado?: StringFieldUpdateOperationsInput | string
    tamanho?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    caminho?: StringFieldUpdateOperationsInput | string
    inscricaoId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormularioUsuarioCampoCreateWithoutArquivoInput = {
    id?: string
    valor: string
    createdAt?: Date | string
    updatedAt?: Date | string
    campo: CampoFormularioCreateNestedOneWithoutRespostasInput
    inscricao: FormularioUsuarioCreateNestedOneWithoutCamposInput
  }

  export type FormularioUsuarioCampoUncheckedCreateWithoutArquivoInput = {
    id?: string
    valor: string
    campoFormularioId: string
    formularioUsuarioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FormularioUsuarioCampoCreateOrConnectWithoutArquivoInput = {
    where: FormularioUsuarioCampoWhereUniqueInput
    create: XOR<FormularioUsuarioCampoCreateWithoutArquivoInput, FormularioUsuarioCampoUncheckedCreateWithoutArquivoInput>
  }

  export type FormularioUsuarioCreateWithoutArquivosInput = {
    id?: string
    dataHora?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    usuario: UsuarioCreateNestedOneWithoutFormulariosInput
    formulario: FormularioCreateNestedOneWithoutInscricoesInput
    campos?: FormularioUsuarioCampoCreateNestedManyWithoutInscricaoInput
  }

  export type FormularioUsuarioUncheckedCreateWithoutArquivosInput = {
    id?: string
    dataHora?: Date | string
    usuarioId: string
    formularioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    campos?: FormularioUsuarioCampoUncheckedCreateNestedManyWithoutInscricaoInput
  }

  export type FormularioUsuarioCreateOrConnectWithoutArquivosInput = {
    where: FormularioUsuarioWhereUniqueInput
    create: XOR<FormularioUsuarioCreateWithoutArquivosInput, FormularioUsuarioUncheckedCreateWithoutArquivosInput>
  }

  export type FormularioUsuarioCampoUpsertWithoutArquivoInput = {
    update: XOR<FormularioUsuarioCampoUpdateWithoutArquivoInput, FormularioUsuarioCampoUncheckedUpdateWithoutArquivoInput>
    create: XOR<FormularioUsuarioCampoCreateWithoutArquivoInput, FormularioUsuarioCampoUncheckedCreateWithoutArquivoInput>
    where?: FormularioUsuarioCampoWhereInput
  }

  export type FormularioUsuarioCampoUpdateToOneWithWhereWithoutArquivoInput = {
    where?: FormularioUsuarioCampoWhereInput
    data: XOR<FormularioUsuarioCampoUpdateWithoutArquivoInput, FormularioUsuarioCampoUncheckedUpdateWithoutArquivoInput>
  }

  export type FormularioUsuarioCampoUpdateWithoutArquivoInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    campo?: CampoFormularioUpdateOneRequiredWithoutRespostasNestedInput
    inscricao?: FormularioUsuarioUpdateOneRequiredWithoutCamposNestedInput
  }

  export type FormularioUsuarioCampoUncheckedUpdateWithoutArquivoInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    campoFormularioId?: StringFieldUpdateOperationsInput | string
    formularioUsuarioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormularioUsuarioUpsertWithoutArquivosInput = {
    update: XOR<FormularioUsuarioUpdateWithoutArquivosInput, FormularioUsuarioUncheckedUpdateWithoutArquivosInput>
    create: XOR<FormularioUsuarioCreateWithoutArquivosInput, FormularioUsuarioUncheckedCreateWithoutArquivosInput>
    where?: FormularioUsuarioWhereInput
  }

  export type FormularioUsuarioUpdateToOneWithWhereWithoutArquivosInput = {
    where?: FormularioUsuarioWhereInput
    data: XOR<FormularioUsuarioUpdateWithoutArquivosInput, FormularioUsuarioUncheckedUpdateWithoutArquivosInput>
  }

  export type FormularioUsuarioUpdateWithoutArquivosInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataHora?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutFormulariosNestedInput
    formulario?: FormularioUpdateOneRequiredWithoutInscricoesNestedInput
    campos?: FormularioUsuarioCampoUpdateManyWithoutInscricaoNestedInput
  }

  export type FormularioUsuarioUncheckedUpdateWithoutArquivosInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: StringFieldUpdateOperationsInput | string
    formularioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    campos?: FormularioUsuarioCampoUncheckedUpdateManyWithoutInscricaoNestedInput
  }

  export type FormularioUsuarioCreateManyUsuarioInput = {
    id?: string
    dataHora?: Date | string
    formularioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InscricaoCreateManyUsuarioInput = {
    id?: string
    editalId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FormularioUsuarioUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataHora?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    formulario?: FormularioUpdateOneRequiredWithoutInscricoesNestedInput
    campos?: FormularioUsuarioCampoUpdateManyWithoutInscricaoNestedInput
    arquivos?: ArquivoUsuarioUpdateManyWithoutInscricaoNestedInput
  }

  export type FormularioUsuarioUncheckedUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataHora?: DateTimeFieldUpdateOperationsInput | Date | string
    formularioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    campos?: FormularioUsuarioCampoUncheckedUpdateManyWithoutInscricaoNestedInput
    arquivos?: ArquivoUsuarioUncheckedUpdateManyWithoutInscricaoNestedInput
  }

  export type FormularioUsuarioUncheckedUpdateManyWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataHora?: DateTimeFieldUpdateOperationsInput | Date | string
    formularioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InscricaoUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    edital?: EditalUpdateOneRequiredWithoutInscricoesNestedInput
  }

  export type InscricaoUncheckedUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    editalId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InscricaoUncheckedUpdateManyWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    editalId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InscricaoCreateManyEditalInput = {
    id?: string
    usuarioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ArquivoEditalCreateManyEditalInput = {
    id?: string
    url: string
    rotulo: string
  }

  export type InscricaoUpdateWithoutEditalInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutInscricoesNestedInput
  }

  export type InscricaoUncheckedUpdateWithoutEditalInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuarioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InscricaoUncheckedUpdateManyWithoutEditalInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuarioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArquivoEditalUpdateWithoutEditalInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    rotulo?: StringFieldUpdateOperationsInput | string
  }

  export type ArquivoEditalUncheckedUpdateWithoutEditalInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    rotulo?: StringFieldUpdateOperationsInput | string
  }

  export type ArquivoEditalUncheckedUpdateManyWithoutEditalInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    rotulo?: StringFieldUpdateOperationsInput | string
  }

  export type CampoFormularioCreateManyFormularioInput = {
    id?: string
    rotulo: string
    tipo: number
    obrigatorio: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FormularioUsuarioCreateManyFormularioInput = {
    id?: string
    dataHora?: Date | string
    usuarioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CampoFormularioUpdateWithoutFormularioInput = {
    id?: StringFieldUpdateOperationsInput | string
    rotulo?: StringFieldUpdateOperationsInput | string
    tipo?: IntFieldUpdateOperationsInput | number
    obrigatorio?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    respostas?: FormularioUsuarioCampoUpdateManyWithoutCampoNestedInput
  }

  export type CampoFormularioUncheckedUpdateWithoutFormularioInput = {
    id?: StringFieldUpdateOperationsInput | string
    rotulo?: StringFieldUpdateOperationsInput | string
    tipo?: IntFieldUpdateOperationsInput | number
    obrigatorio?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    respostas?: FormularioUsuarioCampoUncheckedUpdateManyWithoutCampoNestedInput
  }

  export type CampoFormularioUncheckedUpdateManyWithoutFormularioInput = {
    id?: StringFieldUpdateOperationsInput | string
    rotulo?: StringFieldUpdateOperationsInput | string
    tipo?: IntFieldUpdateOperationsInput | number
    obrigatorio?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormularioUsuarioUpdateWithoutFormularioInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataHora?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutFormulariosNestedInput
    campos?: FormularioUsuarioCampoUpdateManyWithoutInscricaoNestedInput
    arquivos?: ArquivoUsuarioUpdateManyWithoutInscricaoNestedInput
  }

  export type FormularioUsuarioUncheckedUpdateWithoutFormularioInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    campos?: FormularioUsuarioCampoUncheckedUpdateManyWithoutInscricaoNestedInput
    arquivos?: ArquivoUsuarioUncheckedUpdateManyWithoutInscricaoNestedInput
  }

  export type FormularioUsuarioUncheckedUpdateManyWithoutFormularioInput = {
    id?: StringFieldUpdateOperationsInput | string
    dataHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormularioUsuarioCampoCreateManyCampoInput = {
    id?: string
    valor: string
    formularioUsuarioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FormularioUsuarioCampoUpdateWithoutCampoInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inscricao?: FormularioUsuarioUpdateOneRequiredWithoutCamposNestedInput
    arquivo?: ArquivoUsuarioUpdateOneWithoutCampoNestedInput
  }

  export type FormularioUsuarioCampoUncheckedUpdateWithoutCampoInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    formularioUsuarioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    arquivo?: ArquivoUsuarioUncheckedUpdateOneWithoutCampoNestedInput
  }

  export type FormularioUsuarioCampoUncheckedUpdateManyWithoutCampoInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    formularioUsuarioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormularioUsuarioCampoCreateManyInscricaoInput = {
    id?: string
    valor: string
    campoFormularioId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ArquivoUsuarioCreateManyInscricaoInput = {
    id?: string
    nomeOriginal: string
    nomeArmazenado: string
    tamanho: number
    tipo: string
    caminho: string
    campoId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FormularioUsuarioCampoUpdateWithoutInscricaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    campo?: CampoFormularioUpdateOneRequiredWithoutRespostasNestedInput
    arquivo?: ArquivoUsuarioUpdateOneWithoutCampoNestedInput
  }

  export type FormularioUsuarioCampoUncheckedUpdateWithoutInscricaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    campoFormularioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    arquivo?: ArquivoUsuarioUncheckedUpdateOneWithoutCampoNestedInput
  }

  export type FormularioUsuarioCampoUncheckedUpdateManyWithoutInscricaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    campoFormularioId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArquivoUsuarioUpdateWithoutInscricaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    nomeOriginal?: StringFieldUpdateOperationsInput | string
    nomeArmazenado?: StringFieldUpdateOperationsInput | string
    tamanho?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    caminho?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    campo?: FormularioUsuarioCampoUpdateOneWithoutArquivoNestedInput
  }

  export type ArquivoUsuarioUncheckedUpdateWithoutInscricaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    nomeOriginal?: StringFieldUpdateOperationsInput | string
    nomeArmazenado?: StringFieldUpdateOperationsInput | string
    tamanho?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    caminho?: StringFieldUpdateOperationsInput | string
    campoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArquivoUsuarioUncheckedUpdateManyWithoutInscricaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    nomeOriginal?: StringFieldUpdateOperationsInput | string
    nomeArmazenado?: StringFieldUpdateOperationsInput | string
    tamanho?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    caminho?: StringFieldUpdateOperationsInput | string
    campoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}